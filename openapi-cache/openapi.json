{
  "components": {
    "schemas": {
      "AIPartAnalysisTaskResultSchema.63ff6da": {
        "description": "Schema for task result returned by AI analysis task.",
        "properties": {
          "analysis": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIPartAnalysisTaskResultSchema.63ff6da.AIPartAnalysisResultSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Analysis results if successful"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Error message if analysis failed",
            "example": "Failed to analyze image: unsupported format",
            "title": "Error Message"
          },
          "success": {
            "description": "Whether the analysis completed successfully",
            "example": true,
            "title": "Success",
            "type": "boolean"
          }
        },
        "required": [
          "success"
        ],
        "title": "AIPartAnalysisTaskResultSchema",
        "type": "object"
      },
      "AIPartAnalysisTaskResultSchema.63ff6da.AIPartAnalysisResultSchema": {
        "description": "Schema for AI analysis result containing all part suggestions.",
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "AI-generated part description",
            "example": "Arduino Uno R3 microcontroller development board with ATmega328P",
            "title": "Description"
          },
          "dimensions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "AI-suggested physical dimensions",
            "example": "68.6x53.4mm",
            "title": "Dimensions"
          },
          "documents": {
            "default": [],
            "description": "AI-suggested and downloaded documents",
            "example": [],
            "items": {
              "$ref": "#/components/schemas/AIPartAnalysisTaskResultSchema.63ff6da.DocumentSuggestionSchema"
            },
            "title": "Documents",
            "type": "array"
          },
          "existing_type_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "ID of existing type if type_is_existing is True",
            "example": 5,
            "title": "Existing Type Id"
          },
          "input_voltage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "AI-suggested input voltage range/specification",
            "example": "5-12V DC",
            "title": "Input Voltage"
          },
          "manufacturer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "AI-suggested manufacturer company name",
            "example": "Arduino",
            "title": "Manufacturer"
          },
          "manufacturer_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "AI-suggested manufacturer part number",
            "example": "Arduino A000066",
            "title": "Manufacturer Code"
          },
          "mounting_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "AI-suggested mounting type",
            "example": "Breadboard Compatible",
            "title": "Mounting Type"
          },
          "output_voltage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "AI-suggested output voltage range/specification",
            "example": "3.3V",
            "title": "Output Voltage"
          },
          "package": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "AI-suggested physical package/form factor",
            "example": "Arduino Uno Form Factor",
            "title": "Package"
          },
          "pin_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "AI-suggested number of pins/connections",
            "example": 32,
            "title": "Pin Count"
          },
          "pin_pitch": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "AI-suggested component pin pitch/spacing",
            "example": "2.54mm",
            "title": "Pin Pitch"
          },
          "product_page": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "AI-suggested manufacturer product page URL",
            "example": "https://www.arduino.cc/en/Main/arduinoBoardUno",
            "title": "Product Page"
          },
          "series": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "AI-suggested component series",
            "example": "Arduino Uno",
            "title": "Series"
          },
          "tags": {
            "default": [],
            "description": "AI-suggested tags for the part",
            "example": [
              "arduino",
              "microcontroller",
              "ATmega328P",
              "development"
            ],
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "AI-suggested type name for frontend display and type creation (not used in part creation)",
            "example": "Microcontroller",
            "title": "Type"
          },
          "type_is_existing": {
            "default": false,
            "description": "Whether the suggested type matches an existing type in the system",
            "example": true,
            "title": "Type Is Existing",
            "type": "boolean"
          },
          "voltage_rating": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "AI-suggested operating voltage",
            "example": "5V/3.3V",
            "title": "Voltage Rating"
          }
        },
        "title": "AIPartAnalysisResultSchema",
        "type": "object"
      },
      "AIPartAnalysisTaskResultSchema.63ff6da.DocumentSuggestionSchema": {
        "description": "Schema for AI-suggested document.",
        "properties": {
          "document_type": {
            "description": "Type of document (datasheet, manual, schematic, etc.)",
            "example": "datasheet",
            "title": "Document Type",
            "type": "string"
          },
          "is_cover_image": {
            "default": false,
            "description": "Image to become the cover image",
            "title": "Is Cover Image",
            "type": "boolean"
          },
          "preview": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIPartAnalysisTaskResultSchema.63ff6da.UrlPreviewResponseSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "URL preview metadata including title and image URL"
          },
          "url": {
            "description": "Original URL from which the document was downloaded",
            "example": "https://www.example.com/datasheet.pdf",
            "title": "Url",
            "type": "string"
          }
        },
        "required": [
          "url",
          "document_type"
        ],
        "title": "DocumentSuggestionSchema",
        "type": "object"
      },
      "AIPartAnalysisTaskResultSchema.63ff6da.UrlPreviewResponseSchema": {
        "description": "Schema for URL preview responses.",
        "properties": {
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Content type",
            "title": "Content Type"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Backend endpoint URL for preview image",
            "title": "Image Url"
          },
          "original_url": {
            "description": "Original URL",
            "title": "Original Url",
            "type": "string"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Page title",
            "title": "Title"
          }
        },
        "required": [
          "original_url",
          "content_type"
        ],
        "title": "UrlPreviewResponseSchema",
        "type": "object"
      },
      "AIPartCreateSchema.63ff6da": {
        "additionalProperties": false,
        "description": "Schema for creating a part from AI suggestions.",
        "properties": {
          "description": {
            "description": "Part description (can be edited from AI suggestion)",
            "example": "Arduino Uno R3 microcontroller development board",
            "minLength": 1,
            "title": "Description",
            "type": "string"
          },
          "dimensions": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Physical dimensions",
            "example": "68.6x53.4mm",
            "title": "Dimensions"
          },
          "documents": {
            "default": [],
            "description": "Documents to attach from temporary storage",
            "items": {
              "$ref": "#/components/schemas/AIPartCreateSchema.63ff6da.DocumentSuggestionSchema"
            },
            "title": "Documents",
            "type": "array"
          },
          "input_voltage": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Input voltage range/specification",
            "example": "5-12V DC",
            "title": "Input Voltage"
          },
          "manufacturer": {
            "anyOf": [
              {
                "maxLength": 255,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Manufacturer company name from AI analysis",
            "example": "Arduino",
            "title": "Manufacturer"
          },
          "manufacturer_code": {
            "anyOf": [
              {
                "maxLength": 255,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Manufacturer part number from AI analysis",
            "example": "Arduino A000066",
            "title": "Manufacturer Code"
          },
          "mounting_type": {
            "anyOf": [
              {
                "maxLength": 50,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Mounting type",
            "example": "Breadboard Compatible",
            "title": "Mounting Type"
          },
          "output_voltage": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Output voltage range/specification",
            "example": "3.3V",
            "title": "Output Voltage"
          },
          "package": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Physical package/form factor",
            "example": "Arduino Uno Form Factor",
            "title": "Package"
          },
          "pin_count": {
            "anyOf": [
              {
                "exclusiveMinimum": 0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Number of pins/connections",
            "example": 32,
            "title": "Pin Count"
          },
          "pin_pitch": {
            "anyOf": [
              {
                "maxLength": 50,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Component pin pitch/spacing",
            "example": "2.54mm",
            "title": "Pin Pitch"
          },
          "product_page": {
            "anyOf": [
              {
                "maxLength": 500,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Manufacturer product page URL from AI analysis",
            "example": "https://www.arduino.cc/en/Main/arduinoBoardUno",
            "title": "Product Page"
          },
          "seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Seller ID reference (user provided)",
            "example": 1,
            "title": "Seller Id"
          },
          "seller_link": {
            "anyOf": [
              {
                "maxLength": 500,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Seller product page URL (user provided)",
            "example": "https://www.digikey.com/en/products/detail/arduino/A000066",
            "title": "Seller Link"
          },
          "series": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Component series",
            "example": "Arduino Uno",
            "title": "Series"
          },
          "tags": {
            "default": [],
            "description": "Tags for the part (can be edited from AI suggestion)",
            "example": [
              "arduino",
              "microcontroller",
              "development"
            ],
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "type": "array"
          },
          "type_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Type ID from existing types (frontend handles type creation if needed)",
            "example": 15,
            "title": "Type Id"
          },
          "voltage_rating": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Operating voltage",
            "example": "5V/3.3V",
            "title": "Voltage Rating"
          }
        },
        "required": [
          "description"
        ],
        "title": "AIPartCreateSchema",
        "type": "object"
      },
      "AIPartCreateSchema.63ff6da.DocumentSuggestionSchema": {
        "description": "Schema for AI-suggested document.",
        "properties": {
          "document_type": {
            "description": "Type of document (datasheet, manual, schematic, etc.)",
            "example": "datasheet",
            "title": "Document Type",
            "type": "string"
          },
          "is_cover_image": {
            "default": false,
            "description": "Image to become the cover image",
            "title": "Is Cover Image",
            "type": "boolean"
          },
          "preview": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIPartCreateSchema.63ff6da.UrlPreviewResponseSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "URL preview metadata including title and image URL"
          },
          "url": {
            "description": "Original URL from which the document was downloaded",
            "example": "https://www.example.com/datasheet.pdf",
            "title": "Url",
            "type": "string"
          }
        },
        "required": [
          "url",
          "document_type"
        ],
        "title": "DocumentSuggestionSchema",
        "type": "object"
      },
      "AIPartCreateSchema.63ff6da.UrlPreviewResponseSchema": {
        "description": "Schema for URL preview responses.",
        "properties": {
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Content type",
            "title": "Content Type"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Backend endpoint URL for preview image",
            "title": "Image Url"
          },
          "original_url": {
            "description": "Original URL",
            "title": "Original Url",
            "type": "string"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Page title",
            "title": "Title"
          }
        },
        "required": [
          "original_url",
          "content_type"
        ],
        "title": "UrlPreviewResponseSchema",
        "type": "object"
      },
      "AddStockSchema.46800bd": {
        "description": "Schema for adding stock to a location.",
        "properties": {
          "box_no": {
            "description": "Box number where stock will be added",
            "example": 7,
            "title": "Box No",
            "type": "integer"
          },
          "loc_no": {
            "description": "Location number within the box",
            "example": 3,
            "title": "Loc No",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity to add (must be positive)",
            "example": 10,
            "exclusiveMinimum": 0,
            "title": "Qty",
            "type": "integer"
          }
        },
        "required": [
          "box_no",
          "loc_no",
          "qty"
        ],
        "title": "AddStockSchema",
        "type": "object"
      },
      "BoxCreateSchema.6d5ef0b": {
        "description": "Schema for creating a new box.",
        "properties": {
          "capacity": {
            "description": "Maximum number of individual storage locations within this box",
            "example": 60,
            "exclusiveMinimum": 0,
            "maximum": 1000,
            "title": "Capacity",
            "type": "integer"
          },
          "description": {
            "description": "Descriptive name for the box to help identify its contents or purpose",
            "example": "Small Components Storage",
            "maxLength": 255,
            "minLength": 1,
            "title": "Description",
            "type": "string"
          }
        },
        "required": [
          "description",
          "capacity"
        ],
        "title": "BoxCreateSchema",
        "type": "object"
      },
      "BoxResponseSchema.6d5ef0b": {
        "description": "Schema for full box details with locations.",
        "properties": {
          "box_no": {
            "description": "Sequential box number assigned automatically",
            "example": 7,
            "title": "Box No",
            "type": "integer"
          },
          "capacity": {
            "description": "Maximum number of storage locations in this box",
            "example": 60,
            "title": "Capacity",
            "type": "integer"
          },
          "created_at": {
            "description": "Timestamp when the box was created",
            "example": "2024-01-15T10:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "description": {
            "description": "Descriptive name for the box",
            "example": "Small Components Storage",
            "title": "Description",
            "type": "string"
          },
          "locations": {
            "description": "List of all storage locations within this box",
            "items": {
              "$ref": "#/components/schemas/BoxResponseSchema.6d5ef0b.LocationResponseSchema"
            },
            "title": "Locations",
            "type": "array"
          },
          "updated_at": {
            "description": "Timestamp when the box was last modified",
            "example": "2024-01-15T14:45:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "box_no",
          "description",
          "capacity",
          "created_at",
          "updated_at",
          "locations"
        ],
        "title": "BoxResponseSchema",
        "type": "object"
      },
      "BoxResponseSchema.6d5ef0b.LocationResponseSchema": {
        "description": "Schema for location details.",
        "properties": {
          "box_no": {
            "description": "The box number where this location is situated",
            "example": 7,
            "title": "Box No",
            "type": "integer"
          },
          "loc_no": {
            "description": "The location number within the box (e.g., location 3 in box 7 would be '7-3')",
            "example": 15,
            "title": "Loc No",
            "type": "integer"
          }
        },
        "required": [
          "box_no",
          "loc_no"
        ],
        "title": "LocationResponseSchema",
        "type": "object"
      },
      "BoxUpdateSchema.6d5ef0b": {
        "description": "Schema for updating an existing box.",
        "properties": {
          "capacity": {
            "description": "Updated maximum number of storage locations in this box",
            "example": 80,
            "exclusiveMinimum": 0,
            "maximum": 1000,
            "title": "Capacity",
            "type": "integer"
          },
          "description": {
            "description": "Updated descriptive name for the box",
            "example": "Updated Components Storage",
            "maxLength": 255,
            "minLength": 1,
            "title": "Description",
            "type": "string"
          }
        },
        "required": [
          "description",
          "capacity"
        ],
        "title": "BoxUpdateSchema",
        "type": "object"
      },
      "BoxUsageStatsSchema.6d5ef0b": {
        "description": "Schema for box usage statistics.",
        "properties": {
          "available_locations": {
            "description": "Number of locations currently available for new parts",
            "example": 18,
            "title": "Available Locations",
            "type": "integer"
          },
          "box_no": {
            "description": "Box number",
            "example": 7,
            "title": "Box No",
            "type": "integer"
          },
          "occupied_locations": {
            "description": "Number of locations currently occupied by parts",
            "example": 42,
            "title": "Occupied Locations",
            "type": "integer"
          },
          "total_locations": {
            "description": "Total number of locations in this box",
            "example": 60,
            "title": "Total Locations",
            "type": "integer"
          },
          "usage_percentage": {
            "description": "Percentage of locations that are occupied",
            "example": 70,
            "title": "Usage Percentage",
            "type": "number"
          }
        },
        "required": [
          "box_no",
          "total_locations",
          "occupied_locations",
          "available_locations",
          "usage_percentage"
        ],
        "title": "BoxUsageStatsSchema",
        "type": "object"
      },
      "BoxWithUsageSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/BoxWithUsageSchemaList.a9993e3.BoxWithUsageSchema"
        },
        "title": "BoxWithUsageSchemaList",
        "type": "array"
      },
      "BoxWithUsageSchemaList.a9993e3.BoxWithUsageSchema": {
        "description": "Schema for box with usage statistics.",
        "properties": {
          "available_locations": {
            "description": "Number of locations currently available for new parts",
            "example": 18,
            "title": "Available Locations",
            "type": "integer"
          },
          "box_no": {
            "description": "Sequential box number",
            "example": 7,
            "title": "Box No",
            "type": "integer"
          },
          "capacity": {
            "description": "Maximum number of storage locations in this box",
            "example": 60,
            "title": "Capacity",
            "type": "integer"
          },
          "created_at": {
            "description": "Timestamp when the box was created",
            "example": "2024-01-15T10:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "description": {
            "description": "Descriptive name for the box",
            "example": "Small Components Storage",
            "title": "Description",
            "type": "string"
          },
          "occupied_locations": {
            "description": "Number of locations currently occupied by parts",
            "example": 42,
            "title": "Occupied Locations",
            "type": "integer"
          },
          "total_locations": {
            "description": "Total number of locations in this box",
            "example": 60,
            "title": "Total Locations",
            "type": "integer"
          },
          "updated_at": {
            "description": "Timestamp when the box was last modified",
            "example": "2024-01-15T14:45:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "usage_percentage": {
            "description": "Percentage of locations that are occupied",
            "example": 70,
            "title": "Usage Percentage",
            "type": "number"
          }
        },
        "required": [
          "box_no",
          "description",
          "capacity",
          "created_at",
          "updated_at",
          "total_locations",
          "occupied_locations",
          "available_locations",
          "usage_percentage"
        ],
        "title": "BoxWithUsageSchema",
        "type": "object"
      },
      "CategoryDistributionSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/CategoryDistributionSchemaList.a9993e3.CategoryDistributionSchema"
        },
        "title": "CategoryDistributionSchemaList",
        "type": "array"
      },
      "CategoryDistributionSchemaList.a9993e3.CategoryDistributionSchema": {
        "description": "Schema for category distribution response.",
        "properties": {
          "part_count": {
            "description": "Number of parts in this category",
            "minimum": 0,
            "title": "Part Count",
            "type": "integer"
          },
          "type_name": {
            "description": "Part type/category name",
            "title": "Type Name",
            "type": "string"
          }
        },
        "required": [
          "type_name",
          "part_count"
        ],
        "title": "CategoryDistributionSchema",
        "type": "object"
      },
      "ContentHtmlQuerySchema.355d24f": {
        "description": "Query parameters for deterministic HTML content fixtures.",
        "properties": {
          "title": {
            "description": "Title to embed in the rendered HTML fixture",
            "examples": [
              "Playwright Fixture Page"
            ],
            "title": "Title",
            "type": "string"
          }
        },
        "required": [
          "title"
        ],
        "title": "ContentHtmlQuerySchema",
        "type": "object"
      },
      "ContentImageQuerySchema.355d24f": {
        "description": "Query parameters for deterministic testing image content.",
        "properties": {
          "text": {
            "description": "Text to render on the generated PNG image",
            "examples": [
              "Playwright Test Image"
            ],
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "ContentImageQuerySchema",
        "type": "object"
      },
      "CopyAttachmentRequestSchema.9a8bd74": {
        "description": "Schema for copy attachment request.",
        "properties": {
          "attachment_id": {
            "description": "ID of the attachment to copy",
            "example": 123,
            "title": "Attachment Id",
            "type": "integer"
          },
          "set_as_cover": {
            "default": false,
            "description": "Whether to set the copied attachment as the target part's cover image",
            "example": true,
            "title": "Set As Cover",
            "type": "boolean"
          },
          "target_part_key": {
            "description": "Key of the part to copy attachment to",
            "example": "ABCD",
            "title": "Target Part Key",
            "type": "string"
          }
        },
        "required": [
          "attachment_id",
          "target_part_key"
        ],
        "title": "CopyAttachmentRequestSchema",
        "type": "object"
      },
      "CopyAttachmentResponseSchema.9a8bd74": {
        "description": "Schema for copy attachment response.",
        "properties": {
          "attachment": {
            "$ref": "#/components/schemas/CopyAttachmentResponseSchema.9a8bd74.PartAttachmentResponseSchema",
            "description": "Details of the newly created attachment"
          }
        },
        "required": [
          "attachment"
        ],
        "title": "CopyAttachmentResponseSchema",
        "type": "object"
      },
      "CopyAttachmentResponseSchema.9a8bd74.AttachmentType": {
        "description": "Enum for attachment types.",
        "enum": [
          "url",
          "image",
          "pdf"
        ],
        "title": "AttachmentType",
        "type": "string"
      },
      "CopyAttachmentResponseSchema.9a8bd74.PartAttachmentResponseSchema": {
        "description": "Schema for full attachment details.",
        "properties": {
          "attachment_type": {
            "$ref": "#/components/schemas/CopyAttachmentResponseSchema.9a8bd74.AttachmentType",
            "description": "Type of attachment",
            "example": "image"
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "MIME type of the file",
            "example": "application/pdf",
            "title": "Content Type"
          },
          "created_at": {
            "description": "Timestamp when the attachment was created",
            "example": "2024-01-15T10:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "File size in bytes",
            "example": 1048576,
            "title": "File Size"
          },
          "filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Original filename (for uploaded files)",
            "example": "omron_g5q_datasheet.pdf",
            "title": "Filename"
          },
          "has_preview": {
            "description": "Whether this attachment has a preview image",
            "example": true,
            "title": "Has Preview",
            "type": "boolean"
          },
          "id": {
            "description": "Unique attachment identifier",
            "example": 123,
            "title": "Id",
            "type": "integer"
          },
          "part_id": {
            "description": "ID of the associated part",
            "example": 456,
            "title": "Part Id",
            "type": "integer"
          },
          "s3_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "S3 storage key for the file",
            "example": "parts/456/attachments/abc123.pdf",
            "title": "S3 Key"
          },
          "title": {
            "description": "Title or description of the attachment",
            "example": "Datasheet - OMRON G5Q-1A4",
            "title": "Title",
            "type": "string"
          },
          "updated_at": {
            "description": "Timestamp when the attachment was last modified",
            "example": "2024-01-15T14:45:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Original URL (for URL attachments)",
            "example": "https://www.omron.com/products/G5Q-1A4",
            "title": "Url"
          }
        },
        "required": [
          "id",
          "part_id",
          "attachment_type",
          "title",
          "s3_key",
          "url",
          "filename",
          "content_type",
          "file_size",
          "created_at",
          "updated_at",
          "has_preview"
        ],
        "title": "PartAttachmentResponseSchema",
        "type": "object"
      },
      "CoverAttachmentResponseSchema.f950e1b": {
        "description": "Schema for cover attachment response.",
        "properties": {
          "attachment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CoverAttachmentResponseSchema.f950e1b.PartAttachmentResponseSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Cover attachment details, or null if none set"
          },
          "attachment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Current cover attachment ID, or null if none set",
            "example": 123,
            "title": "Attachment Id"
          }
        },
        "required": [
          "attachment_id"
        ],
        "title": "CoverAttachmentResponseSchema",
        "type": "object"
      },
      "CoverAttachmentResponseSchema.f950e1b.AttachmentType": {
        "description": "Enum for attachment types.",
        "enum": [
          "url",
          "image",
          "pdf"
        ],
        "title": "AttachmentType",
        "type": "string"
      },
      "CoverAttachmentResponseSchema.f950e1b.PartAttachmentResponseSchema": {
        "description": "Schema for full attachment details.",
        "properties": {
          "attachment_type": {
            "$ref": "#/components/schemas/CoverAttachmentResponseSchema.f950e1b.AttachmentType",
            "description": "Type of attachment",
            "example": "image"
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "MIME type of the file",
            "example": "application/pdf",
            "title": "Content Type"
          },
          "created_at": {
            "description": "Timestamp when the attachment was created",
            "example": "2024-01-15T10:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "File size in bytes",
            "example": 1048576,
            "title": "File Size"
          },
          "filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Original filename (for uploaded files)",
            "example": "omron_g5q_datasheet.pdf",
            "title": "Filename"
          },
          "has_preview": {
            "description": "Whether this attachment has a preview image",
            "example": true,
            "title": "Has Preview",
            "type": "boolean"
          },
          "id": {
            "description": "Unique attachment identifier",
            "example": 123,
            "title": "Id",
            "type": "integer"
          },
          "part_id": {
            "description": "ID of the associated part",
            "example": 456,
            "title": "Part Id",
            "type": "integer"
          },
          "s3_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "S3 storage key for the file",
            "example": "parts/456/attachments/abc123.pdf",
            "title": "S3 Key"
          },
          "title": {
            "description": "Title or description of the attachment",
            "example": "Datasheet - OMRON G5Q-1A4",
            "title": "Title",
            "type": "string"
          },
          "updated_at": {
            "description": "Timestamp when the attachment was last modified",
            "example": "2024-01-15T14:45:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Original URL (for URL attachments)",
            "example": "https://www.omron.com/products/G5Q-1A4",
            "title": "Url"
          }
        },
        "required": [
          "id",
          "part_id",
          "attachment_type",
          "title",
          "s3_key",
          "url",
          "filename",
          "content_type",
          "file_size",
          "created_at",
          "updated_at",
          "has_preview"
        ],
        "title": "PartAttachmentResponseSchema",
        "type": "object"
      },
      "DashboardStatsSchema.b67cf98": {
        "description": "Schema for dashboard statistics response.",
        "properties": {
          "changes_30d": {
            "description": "Number of quantity changes in last 30 days",
            "minimum": 0,
            "title": "Changes 30D",
            "type": "integer"
          },
          "changes_7d": {
            "description": "Number of quantity changes in last 7 days",
            "minimum": 0,
            "title": "Changes 7D",
            "type": "integer"
          },
          "low_stock_count": {
            "description": "Number of parts with quantity <= 5",
            "minimum": 0,
            "title": "Low Stock Count",
            "type": "integer"
          },
          "total_boxes": {
            "description": "Total number of storage boxes",
            "minimum": 0,
            "title": "Total Boxes",
            "type": "integer"
          },
          "total_parts": {
            "description": "Total number of parts in inventory",
            "minimum": 0,
            "title": "Total Parts",
            "type": "integer"
          },
          "total_quantity": {
            "description": "Total quantity across all parts",
            "minimum": 0,
            "title": "Total Quantity",
            "type": "integer"
          },
          "total_types": {
            "description": "Total number of part types/categories",
            "minimum": 0,
            "title": "Total Types",
            "type": "integer"
          }
        },
        "required": [
          "total_parts",
          "total_quantity",
          "total_boxes",
          "total_types",
          "changes_7d",
          "changes_30d",
          "low_stock_count"
        ],
        "title": "DashboardStatsSchema",
        "type": "object"
      },
      "DeploymentTriggerRequestSchema.355d24f": {
        "description": "Request schema for triggering version deployment events in testing mode.",
        "properties": {
          "changelog": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Optional banner text accompanying the deployment notification",
            "examples": [
              "New filters, improved performance, and bug fixes."
            ],
            "title": "Changelog"
          },
          "request_id": {
            "description": "Correlation identifier associated with an SSE subscriber",
            "examples": [
              "playwright-run-1234"
            ],
            "title": "Request Id",
            "type": "string"
          },
          "version": {
            "description": "Frontend version string to broadcast",
            "examples": [
              "2024.03.15+abc123"
            ],
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "request_id",
          "version"
        ],
        "title": "DeploymentTriggerRequestSchema",
        "type": "object"
      },
      "DeploymentTriggerResponseSchema.355d24f": {
        "description": "Response schema for deployment trigger acknowledgements.",
        "properties": {
          "delivered": {
            "description": "Whether the event was delivered immediately to an active subscriber",
            "examples": [
              true
            ],
            "title": "Delivered",
            "type": "boolean"
          },
          "requestId": {
            "description": "Echoed correlation identifier",
            "title": "Requestid",
            "type": "string"
          },
          "status": {
            "description": "Delivery status message",
            "examples": [
              "delivered"
            ],
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "requestId",
          "delivered",
          "status"
        ],
        "title": "DeploymentTriggerResponseSchema",
        "type": "object"
      },
      "ErrorResponseSchema.c2a0d71": {
        "description": "Standard error response format.",
        "properties": {
          "details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71.ErrorDetailsSchema"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71.ErrorDetailsSchema"
                },
                "type": "array"
              }
            ],
            "description": "Additional error details",
            "title": "Details"
          },
          "error": {
            "description": "Error message",
            "example": "Validation failed",
            "title": "Error",
            "type": "string"
          }
        },
        "required": [
          "error",
          "details"
        ],
        "title": "ErrorResponseSchema",
        "type": "object"
      },
      "ErrorResponseSchema.c2a0d71.ErrorDetailsSchema": {
        "description": "Error details object.",
        "properties": {
          "field": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Field name for validation errors",
            "title": "Field"
          },
          "message": {
            "description": "Additional error context",
            "title": "Message",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "title": "ErrorDetailsSchema",
        "type": "object"
      },
      "HealthResponse.d817ae2": {
        "description": "Health check response.",
        "properties": {
          "ready": {
            "description": "Whether the service is ready to handle requests",
            "examples": [
              true,
              false
            ],
            "title": "Ready",
            "type": "boolean"
          },
          "status": {
            "description": "Health status message",
            "examples": [
              "ready",
              "alive",
              "shutting down"
            ],
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "status",
          "ready"
        ],
        "title": "HealthResponse",
        "type": "object"
      },
      "KitChipSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/KitChipSchemaList.a9993e3.KitChipSchema"
        },
        "title": "KitChipSchemaList",
        "type": "array"
      },
      "KitChipSchemaList.a9993e3.KitChipSchema": {
        "description": "Schema describing kits linked to a shopping list.",
        "properties": {
          "created_at": {
            "description": "Timestamp when the link was created",
            "example": "2024-05-02T12:01:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "honor_reserved": {
            "description": "Whether reserved quantities were honored for the push",
            "example": true,
            "title": "Honor Reserved",
            "type": "boolean"
          },
          "id": {
            "description": "Identifier for the kit-to-shopping-list link",
            "example": 42,
            "title": "Id",
            "type": "integer"
          },
          "is_stale": {
            "description": "Indicates whether the kit changed after the snapshot",
            "example": false,
            "title": "Is Stale",
            "type": "boolean"
          },
          "kit_id": {
            "description": "Identifier of the linked kit",
            "example": 5,
            "title": "Kit Id",
            "type": "integer"
          },
          "kit_name": {
            "description": "Name of the linked kit",
            "example": "Synth Voice Starter",
            "title": "Kit Name",
            "type": "string"
          },
          "kit_status": {
            "$ref": "#/components/schemas/KitChipSchemaList.a9993e3.KitStatus",
            "description": "Lifecycle status of the linked kit",
            "example": "active"
          },
          "requested_units": {
            "description": "Number of kit units requested during the push",
            "example": 2,
            "minimum": 1,
            "title": "Requested Units",
            "type": "integer"
          },
          "snapshot_kit_updated_at": {
            "description": "Kit timestamp captured when the link was last refreshed",
            "example": "2024-05-02T12:00:00Z",
            "format": "date-time",
            "title": "Snapshot Kit Updated At",
            "type": "string"
          },
          "updated_at": {
            "description": "Timestamp when the link was last updated",
            "example": "2024-05-04T09:00:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "kit_id",
          "kit_name",
          "kit_status",
          "requested_units",
          "honor_reserved",
          "snapshot_kit_updated_at",
          "is_stale",
          "created_at",
          "updated_at"
        ],
        "title": "KitChipSchema",
        "type": "object"
      },
      "KitChipSchemaList.a9993e3.KitStatus": {
        "description": "Lifecycle status for a kit.",
        "enum": [
          "active",
          "archived"
        ],
        "title": "KitStatus",
        "type": "string"
      },
      "KitContentCreateSchema.b98797e": {
        "description": "Schema for creating a kit content entry.",
        "properties": {
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Optional note about this part within the kit",
            "example": "Use gold-plated headers for final builds.",
            "title": "Note"
          },
          "part_id": {
            "description": "Identifier of the part to include in the kit",
            "example": 105,
            "title": "Part Id",
            "type": "integer"
          },
          "required_per_unit": {
            "description": "Quantity of the part required for a single kit",
            "example": 4,
            "minimum": 1,
            "title": "Required Per Unit",
            "type": "integer"
          }
        },
        "required": [
          "part_id",
          "required_per_unit"
        ],
        "title": "KitContentCreateSchema",
        "type": "object"
      },
      "KitContentDetailSchema.b98797e": {
        "description": "Schema representing a kit content row with availability math.",
        "properties": {
          "active_reservations": {
            "description": "Active kits reserving this part excluding the current kit",
            "items": {
              "$ref": "#/components/schemas/KitContentDetailSchema.b98797e.KitReservationEntrySchema"
            },
            "title": "Active Reservations",
            "type": "array"
          },
          "available": {
            "description": "Quantity available for this kit after reservations",
            "example": 3,
            "title": "Available",
            "type": "integer"
          },
          "created_at": {
            "description": "Timestamp when the kit content row was created",
            "example": "2024-03-28T11:20:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the kit content row",
            "example": 312,
            "title": "Id",
            "type": "integer"
          },
          "in_stock": {
            "description": "Quantity currently in stock for this part",
            "example": 4,
            "title": "In Stock",
            "type": "integer"
          },
          "kit_id": {
            "description": "Identifier of the parent kit",
            "example": 17,
            "title": "Kit Id",
            "type": "integer"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional note about the part within the kit",
            "example": "Match polarity markings carefully",
            "title": "Note"
          },
          "part": {
            "$ref": "#/components/schemas/KitContentDetailSchema.b98797e.PartListSchema",
            "description": "Lightweight details about the referenced part"
          },
          "part_id": {
            "description": "Identifier of the part referenced by this content",
            "example": 88,
            "title": "Part Id",
            "type": "integer"
          },
          "required_per_unit": {
            "description": "Quantity required per kit build",
            "example": 2,
            "title": "Required Per Unit",
            "type": "integer"
          },
          "reserved": {
            "description": "Quantity reserved by other active kits",
            "example": 1,
            "title": "Reserved",
            "type": "integer"
          },
          "shortfall": {
            "description": "Quantity short of the total requirement",
            "example": 3,
            "title": "Shortfall",
            "type": "integer"
          },
          "total_required": {
            "description": "Total quantity required to fulfill the kit build target",
            "example": 6,
            "title": "Total Required",
            "type": "integer"
          },
          "updated_at": {
            "description": "Timestamp when the kit content row was last updated",
            "example": "2024-04-05T13:55:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "version": {
            "description": "Current optimistic locking version for this row",
            "example": 1,
            "title": "Version",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "kit_id",
          "part_id",
          "required_per_unit",
          "note",
          "version",
          "created_at",
          "updated_at",
          "part",
          "total_required",
          "in_stock",
          "reserved",
          "available",
          "shortfall"
        ],
        "title": "KitContentDetailSchema",
        "type": "object"
      },
      "KitContentDetailSchema.b98797e.KitReservationEntrySchema": {
        "description": "Schema representing an active kit reserving a part.",
        "properties": {
          "build_target": {
            "description": "Build target for the reserving kit",
            "example": 2,
            "title": "Build Target",
            "type": "integer"
          },
          "kit_id": {
            "description": "Identifier of the kit reserving the part",
            "example": 3,
            "title": "Kit Id",
            "type": "integer"
          },
          "kit_name": {
            "description": "Display name of the kit reserving the part",
            "example": "Synth Voice Starter",
            "title": "Kit Name",
            "type": "string"
          },
          "required_per_unit": {
            "description": "Quantity of the part required per kit build",
            "example": 2,
            "title": "Required Per Unit",
            "type": "integer"
          },
          "reserved_quantity": {
            "description": "Total quantity reserved by the kit",
            "example": 4,
            "title": "Reserved Quantity",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/KitContentDetailSchema.b98797e.KitStatus",
            "description": "Current status of the reserving kit",
            "example": "active"
          },
          "updated_at": {
            "description": "Timestamp when the reserving kit was last updated",
            "example": "2024-05-01T12:00:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "kit_id",
          "kit_name",
          "status",
          "build_target",
          "required_per_unit",
          "reserved_quantity",
          "updated_at"
        ],
        "title": "KitReservationEntrySchema",
        "type": "object"
      },
      "KitContentDetailSchema.b98797e.KitStatus": {
        "description": "Lifecycle status for a kit.",
        "enum": [
          "active",
          "archived"
        ],
        "title": "KitStatus",
        "type": "string"
      },
      "KitContentDetailSchema.b98797e.PartListSchema": {
        "description": "Schema for lightweight part listings.",
        "properties": {
          "description": {
            "description": "Free text description",
            "example": "12V SPDT relay with 40A contacts",
            "title": "Description",
            "type": "string"
          },
          "key": {
            "description": "4-character unique part identifier",
            "example": "BZQP",
            "title": "Key",
            "type": "string"
          },
          "manufacturer_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Manufacturer's part number",
            "example": "OMRON G5Q-1A4",
            "title": "Manufacturer Code"
          }
        },
        "required": [
          "key",
          "manufacturer_code",
          "description"
        ],
        "title": "PartListSchema",
        "type": "object"
      },
      "KitContentUpdateSchema.b98797e": {
        "description": "Schema for updating a kit content entry with optimistic locking.",
        "properties": {
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated note for this kit content (null clears the note)",
            "example": "Swap for 2% tolerance for QA builds.",
            "title": "Note"
          },
          "required_per_unit": {
            "anyOf": [
              {
                "minimum": 1,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated quantity required per kit",
            "example": 6,
            "title": "Required Per Unit"
          },
          "version": {
            "description": "Row version used for optimistic locking",
            "example": 2,
            "minimum": 1,
            "title": "Version",
            "type": "integer"
          }
        },
        "required": [
          "version"
        ],
        "title": "KitContentUpdateSchema",
        "type": "object"
      },
      "KitCreateSchema.b98797e": {
        "description": "Schema for creating a new kit definition.",
        "properties": {
          "build_target": {
            "default": 1,
            "description": "Number of complete kits to maintain in stock; must be zero or greater",
            "example": 5,
            "minimum": 0,
            "title": "Build Target",
            "type": "integer"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Optional description for planners reviewing the kit",
            "example": "All parts to build the self-contained synth voice demo",
            "title": "Description"
          },
          "name": {
            "description": "Human-readable kit name displayed in overviews",
            "example": "Portable Synth Voice",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "KitCreateSchema",
        "type": "object"
      },
      "KitDetailResponseSchema.b98797e": {
        "description": "Schema for the kit detail workspace response.",
        "properties": {
          "archived_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp when kit was archived, if applicable",
            "example": "2024-03-20T18:45:00Z",
            "title": "Archived At"
          },
          "build_target": {
            "description": "Target quantity of complete kits to keep on hand",
            "example": 5,
            "title": "Build Target",
            "type": "integer"
          },
          "contents": {
            "description": "Bill-of-material entries for the kit with availability data",
            "items": {
              "$ref": "#/components/schemas/KitDetailResponseSchema.b98797e.KitContentDetailSchema"
            },
            "title": "Contents",
            "type": "array"
          },
          "created_at": {
            "description": "Timestamp when the kit was created",
            "example": "2024-03-15T11:10:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional kit description",
            "example": "Compact synth voice for workshop demos",
            "title": "Description"
          },
          "id": {
            "description": "Unique kit identifier",
            "example": 17,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Kit display name",
            "example": "Portable Synth Voice",
            "title": "Name",
            "type": "string"
          },
          "pick_list_badge_count": {
            "default": 0,
            "description": "Number of open pick lists for the kit",
            "example": 1,
            "title": "Pick List Badge Count",
            "type": "integer"
          },
          "pick_lists": {
            "description": "Pick list summaries associated with this kit",
            "items": {
              "$ref": "#/components/schemas/KitDetailResponseSchema.b98797e.KitPickListSummarySchema"
            },
            "title": "Pick Lists",
            "type": "array"
          },
          "shopping_list_badge_count": {
            "default": 0,
            "description": "Number of concept/ready shopping lists linked to the kit",
            "example": 2,
            "title": "Shopping List Badge Count",
            "type": "integer"
          },
          "shopping_list_links": {
            "description": "Shopping lists linked to this kit",
            "items": {
              "$ref": "#/components/schemas/KitDetailResponseSchema.b98797e.KitShoppingListLinkSchema"
            },
            "title": "Shopping List Links",
            "type": "array"
          },
          "status": {
            "$ref": "#/components/schemas/KitDetailResponseSchema.b98797e.KitStatus",
            "description": "Current lifecycle status of the kit",
            "example": "active"
          },
          "updated_at": {
            "description": "Timestamp when the kit was last modified",
            "example": "2024-04-10T15:30:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "status",
          "build_target",
          "archived_at",
          "created_at",
          "updated_at"
        ],
        "title": "KitDetailResponseSchema",
        "type": "object"
      },
      "KitDetailResponseSchema.b98797e.KitContentDetailSchema": {
        "description": "Schema representing a kit content row with availability math.",
        "properties": {
          "active_reservations": {
            "description": "Active kits reserving this part excluding the current kit",
            "items": {
              "$ref": "#/components/schemas/KitDetailResponseSchema.b98797e.KitReservationEntrySchema"
            },
            "title": "Active Reservations",
            "type": "array"
          },
          "available": {
            "description": "Quantity available for this kit after reservations",
            "example": 3,
            "title": "Available",
            "type": "integer"
          },
          "created_at": {
            "description": "Timestamp when the kit content row was created",
            "example": "2024-03-28T11:20:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the kit content row",
            "example": 312,
            "title": "Id",
            "type": "integer"
          },
          "in_stock": {
            "description": "Quantity currently in stock for this part",
            "example": 4,
            "title": "In Stock",
            "type": "integer"
          },
          "kit_id": {
            "description": "Identifier of the parent kit",
            "example": 17,
            "title": "Kit Id",
            "type": "integer"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional note about the part within the kit",
            "example": "Match polarity markings carefully",
            "title": "Note"
          },
          "part": {
            "$ref": "#/components/schemas/KitDetailResponseSchema.b98797e.PartListSchema",
            "description": "Lightweight details about the referenced part"
          },
          "part_id": {
            "description": "Identifier of the part referenced by this content",
            "example": 88,
            "title": "Part Id",
            "type": "integer"
          },
          "required_per_unit": {
            "description": "Quantity required per kit build",
            "example": 2,
            "title": "Required Per Unit",
            "type": "integer"
          },
          "reserved": {
            "description": "Quantity reserved by other active kits",
            "example": 1,
            "title": "Reserved",
            "type": "integer"
          },
          "shortfall": {
            "description": "Quantity short of the total requirement",
            "example": 3,
            "title": "Shortfall",
            "type": "integer"
          },
          "total_required": {
            "description": "Total quantity required to fulfill the kit build target",
            "example": 6,
            "title": "Total Required",
            "type": "integer"
          },
          "updated_at": {
            "description": "Timestamp when the kit content row was last updated",
            "example": "2024-04-05T13:55:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "version": {
            "description": "Current optimistic locking version for this row",
            "example": 1,
            "title": "Version",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "kit_id",
          "part_id",
          "required_per_unit",
          "note",
          "version",
          "created_at",
          "updated_at",
          "part",
          "total_required",
          "in_stock",
          "reserved",
          "available",
          "shortfall"
        ],
        "title": "KitContentDetailSchema",
        "type": "object"
      },
      "KitDetailResponseSchema.b98797e.KitPickListStatus": {
        "description": "Lifecycle status for a kit pick list.",
        "enum": [
          "open",
          "completed"
        ],
        "title": "KitPickListStatus",
        "type": "string"
      },
      "KitDetailResponseSchema.b98797e.KitPickListSummarySchema": {
        "description": "Summary information for a pick list used in listings.",
        "properties": {
          "completed_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp when the pick list was completed",
            "example": "2024-04-16T13:25:00Z",
            "title": "Completed At"
          },
          "completed_line_count": {
            "description": "Number of lines that have already been picked",
            "example": 3,
            "title": "Completed Line Count",
            "type": "integer"
          },
          "created_at": {
            "description": "Timestamp when the pick list was created",
            "example": "2024-04-15T09:00:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the pick list",
            "example": 12,
            "title": "Id",
            "type": "integer"
          },
          "kit_id": {
            "description": "Identifier of the kit that owns the pick list",
            "example": 3,
            "title": "Kit Id",
            "type": "integer"
          },
          "line_count": {
            "description": "Total number of lines in the pick list",
            "example": 5,
            "title": "Line Count",
            "type": "integer"
          },
          "open_line_count": {
            "description": "Number of lines that still need to be picked",
            "example": 2,
            "title": "Open Line Count",
            "type": "integer"
          },
          "picked_quantity": {
            "description": "Quantity already picked for the pick list",
            "example": 8,
            "title": "Picked Quantity",
            "type": "integer"
          },
          "remaining_quantity": {
            "description": "Quantity still outstanding for the pick list",
            "example": 4,
            "title": "Remaining Quantity",
            "type": "integer"
          },
          "requested_units": {
            "description": "Number of kit builds requested for the pick list",
            "example": 2,
            "title": "Requested Units",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/KitDetailResponseSchema.b98797e.KitPickListStatus",
            "description": "Lifecycle status for the pick list",
            "example": "open"
          },
          "total_quantity_to_pick": {
            "description": "Sum of quantities across all lines",
            "example": 12,
            "title": "Total Quantity To Pick",
            "type": "integer"
          },
          "updated_at": {
            "description": "Timestamp when the pick list was last updated",
            "example": "2024-04-15T11:10:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "kit_id",
          "requested_units",
          "status",
          "created_at",
          "updated_at",
          "completed_at",
          "line_count",
          "open_line_count",
          "completed_line_count",
          "total_quantity_to_pick",
          "picked_quantity",
          "remaining_quantity"
        ],
        "title": "KitPickListSummarySchema",
        "type": "object"
      },
      "KitDetailResponseSchema.b98797e.KitReservationEntrySchema": {
        "description": "Schema representing an active kit reserving a part.",
        "properties": {
          "build_target": {
            "description": "Build target for the reserving kit",
            "example": 2,
            "title": "Build Target",
            "type": "integer"
          },
          "kit_id": {
            "description": "Identifier of the kit reserving the part",
            "example": 3,
            "title": "Kit Id",
            "type": "integer"
          },
          "kit_name": {
            "description": "Display name of the kit reserving the part",
            "example": "Synth Voice Starter",
            "title": "Kit Name",
            "type": "string"
          },
          "required_per_unit": {
            "description": "Quantity of the part required per kit build",
            "example": 2,
            "title": "Required Per Unit",
            "type": "integer"
          },
          "reserved_quantity": {
            "description": "Total quantity reserved by the kit",
            "example": 4,
            "title": "Reserved Quantity",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/KitDetailResponseSchema.b98797e.KitStatus",
            "description": "Current status of the reserving kit",
            "example": "active"
          },
          "updated_at": {
            "description": "Timestamp when the reserving kit was last updated",
            "example": "2024-05-01T12:00:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "kit_id",
          "kit_name",
          "status",
          "build_target",
          "required_per_unit",
          "reserved_quantity",
          "updated_at"
        ],
        "title": "KitReservationEntrySchema",
        "type": "object"
      },
      "KitDetailResponseSchema.b98797e.KitShoppingListLinkSchema": {
        "description": "Schema describing shopping lists linked to a kit.",
        "properties": {
          "created_at": {
            "description": "Timestamp when the link was created",
            "example": "2024-04-01T09:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "honor_reserved": {
            "description": "Whether reserved quantities were honored during the push",
            "example": false,
            "title": "Honor Reserved",
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the kit to shopping list link",
            "example": 9,
            "title": "Id",
            "type": "integer"
          },
          "is_stale": {
            "description": "Indicates whether the link needs resynchronization",
            "example": true,
            "title": "Is Stale",
            "type": "boolean"
          },
          "requested_units": {
            "description": "Number of kit build units used when pushing to the list",
            "example": 3,
            "minimum": 1,
            "title": "Requested Units",
            "type": "integer"
          },
          "shopping_list_id": {
            "description": "Identifier of the linked shopping list",
            "example": 21,
            "title": "Shopping List Id",
            "type": "integer"
          },
          "shopping_list_name": {
            "description": "Name of the linked shopping list",
            "example": "Concept BOM",
            "title": "Shopping List Name",
            "type": "string"
          },
          "snapshot_kit_updated_at": {
            "description": "Kit timestamp captured when the link was last refreshed",
            "example": "2024-05-01T14:15:00Z",
            "format": "date-time",
            "title": "Snapshot Kit Updated At",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/KitDetailResponseSchema.b98797e.ShoppingListStatus",
            "description": "Current status of the linked shopping list",
            "example": "ready"
          },
          "updated_at": {
            "description": "Timestamp when the link was last updated",
            "example": "2024-04-08T12:05:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "shopping_list_id",
          "shopping_list_name",
          "status",
          "requested_units",
          "honor_reserved",
          "snapshot_kit_updated_at",
          "is_stale",
          "created_at",
          "updated_at"
        ],
        "title": "KitShoppingListLinkSchema",
        "type": "object"
      },
      "KitDetailResponseSchema.b98797e.KitStatus": {
        "description": "Lifecycle status for a kit.",
        "enum": [
          "active",
          "archived"
        ],
        "title": "KitStatus",
        "type": "string"
      },
      "KitDetailResponseSchema.b98797e.PartListSchema": {
        "description": "Schema for lightweight part listings.",
        "properties": {
          "description": {
            "description": "Free text description",
            "example": "12V SPDT relay with 40A contacts",
            "title": "Description",
            "type": "string"
          },
          "key": {
            "description": "4-character unique part identifier",
            "example": "BZQP",
            "title": "Key",
            "type": "string"
          },
          "manufacturer_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Manufacturer's part number",
            "example": "OMRON G5Q-1A4",
            "title": "Manufacturer Code"
          }
        },
        "required": [
          "key",
          "manufacturer_code",
          "description"
        ],
        "title": "PartListSchema",
        "type": "object"
      },
      "KitDetailResponseSchema.b98797e.ShoppingListStatus": {
        "description": "Possible lifecycle states for a shopping list.",
        "enum": [
          "concept",
          "ready",
          "done"
        ],
        "title": "ShoppingListStatus",
        "type": "string"
      },
      "KitListQuerySchema.b98797e": {
        "description": "Query parameters supported by the kits overview endpoint.",
        "properties": {
          "limit": {
            "anyOf": [
              {
                "maximum": 100,
                "minimum": 1,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Optional maximum number of kits to return",
            "example": 12,
            "title": "Limit"
          },
          "query": {
            "anyOf": [
              {
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Substring search across kit names and descriptions",
            "example": "Synth",
            "title": "Query"
          },
          "status": {
            "$ref": "#/components/schemas/KitListQuerySchema.b98797e.KitStatusSchema",
            "default": "active",
            "description": "Filter kits by lifecycle status",
            "example": "active"
          }
        },
        "title": "KitListQuerySchema",
        "type": "object"
      },
      "KitListQuerySchema.b98797e.KitStatusSchema": {
        "description": "Pydantic enum mirroring the KitStatus model enum.",
        "enum": [
          "active",
          "archived"
        ],
        "title": "KitStatusSchema",
        "type": "string"
      },
      "KitMembershipBulkQueryRequestSchema.b98797e": {
        "description": "Schema for querying kit memberships across related resources.",
        "properties": {
          "include_done": {
            "default": false,
            "description": "Include archived or completed memberships when true",
            "title": "Include Done",
            "type": "boolean"
          },
          "kit_ids": {
            "description": "Ordered collection of kit identifiers to resolve",
            "example": [
              1,
              2,
              3
            ],
            "items": {
              "type": "integer"
            },
            "maxItems": 100,
            "minItems": 1,
            "title": "Kit Ids",
            "type": "array"
          }
        },
        "required": [
          "kit_ids"
        ],
        "title": "KitMembershipBulkQueryRequestSchema",
        "type": "object"
      },
      "KitPickListCreateSchema.b247181": {
        "description": "Request payload for creating a pick list.",
        "properties": {
          "requested_units": {
            "description": "Number of kit builds to fulfill with this pick list",
            "example": 2,
            "minimum": 1,
            "title": "Requested Units",
            "type": "integer"
          }
        },
        "required": [
          "requested_units"
        ],
        "title": "KitPickListCreateSchema",
        "type": "object"
      },
      "KitPickListDetailSchema.b247181": {
        "description": "Detailed pick list payload including line breakdown.",
        "properties": {
          "completed_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp when the pick list was completed",
            "example": "2024-04-16T13:25:00Z",
            "title": "Completed At"
          },
          "completed_line_count": {
            "description": "Number of lines that have already been picked",
            "example": 3,
            "title": "Completed Line Count",
            "type": "integer"
          },
          "created_at": {
            "description": "Timestamp when the pick list was created",
            "example": "2024-04-15T09:00:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the pick list",
            "example": 12,
            "title": "Id",
            "type": "integer"
          },
          "kit_id": {
            "description": "Identifier of the kit that owns the pick list",
            "example": 3,
            "title": "Kit Id",
            "type": "integer"
          },
          "kit_name": {
            "description": "Display name of the kit that owns the pick list",
            "example": "Synth Voice Starter",
            "title": "Kit Name",
            "type": "string"
          },
          "line_count": {
            "description": "Total number of lines in the pick list",
            "example": 5,
            "title": "Line Count",
            "type": "integer"
          },
          "lines": {
            "description": "Detailed picking instructions grouped by location",
            "items": {
              "$ref": "#/components/schemas/KitPickListDetailSchema.b247181.KitPickListLineSchema"
            },
            "title": "Lines",
            "type": "array"
          },
          "open_line_count": {
            "description": "Number of lines that still need to be picked",
            "example": 2,
            "title": "Open Line Count",
            "type": "integer"
          },
          "picked_quantity": {
            "description": "Quantity already picked for the pick list",
            "example": 8,
            "title": "Picked Quantity",
            "type": "integer"
          },
          "remaining_quantity": {
            "description": "Quantity still outstanding for the pick list",
            "example": 4,
            "title": "Remaining Quantity",
            "type": "integer"
          },
          "requested_units": {
            "description": "Number of kit builds requested for the pick list",
            "example": 2,
            "title": "Requested Units",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/KitPickListDetailSchema.b247181.KitPickListStatus",
            "description": "Lifecycle status for the pick list",
            "example": "open"
          },
          "total_quantity_to_pick": {
            "description": "Sum of quantities across all lines",
            "example": 12,
            "title": "Total Quantity To Pick",
            "type": "integer"
          },
          "updated_at": {
            "description": "Timestamp when the pick list was last updated",
            "example": "2024-04-15T11:10:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "kit_id",
          "requested_units",
          "status",
          "created_at",
          "updated_at",
          "completed_at",
          "line_count",
          "open_line_count",
          "completed_line_count",
          "total_quantity_to_pick",
          "picked_quantity",
          "remaining_quantity",
          "kit_name"
        ],
        "title": "KitPickListDetailSchema",
        "type": "object"
      },
      "KitPickListDetailSchema.b247181.KitPickListLineSchema": {
        "description": "Detailed representation of a pick list line.",
        "properties": {
          "id": {
            "description": "Unique identifier of the pick list line",
            "example": 512,
            "title": "Id",
            "type": "integer"
          },
          "inventory_change_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Quantity history entry recorded when picked",
            "example": 2048,
            "title": "Inventory Change Id"
          },
          "kit_content": {
            "$ref": "#/components/schemas/KitPickListDetailSchema.b247181.PickListLineContentSchema",
            "description": "Kit content metadata referenced by the line"
          },
          "location": {
            "$ref": "#/components/schemas/KitPickListDetailSchema.b247181.PickListLineLocationSchema",
            "description": "Location to pull inventory from"
          },
          "picked_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp when the line was picked",
            "example": "2024-04-18T14:30:00Z",
            "title": "Picked At"
          },
          "quantity_to_pick": {
            "description": "Quantity of the part to pick from the location",
            "example": 4,
            "title": "Quantity To Pick",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/KitPickListDetailSchema.b247181.PickListLineStatus",
            "description": "Current status of the line",
            "example": "open"
          }
        },
        "required": [
          "id",
          "status",
          "quantity_to_pick",
          "inventory_change_id",
          "picked_at",
          "kit_content",
          "location"
        ],
        "title": "KitPickListLineSchema",
        "type": "object"
      },
      "KitPickListDetailSchema.b247181.KitPickListStatus": {
        "description": "Lifecycle status for a kit pick list.",
        "enum": [
          "open",
          "completed"
        ],
        "title": "KitPickListStatus",
        "type": "string"
      },
      "KitPickListDetailSchema.b247181.PickListLineContentSchema": {
        "description": "Kit content information attached to a pick list line.",
        "properties": {
          "id": {
            "description": "Kit content identifier referenced by the line",
            "example": 128,
            "title": "Id",
            "type": "integer"
          },
          "part_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Description of the part to pick",
            "example": "NE555 timer in DIP package",
            "title": "Part Description"
          },
          "part_id": {
            "description": "Identifier of the part to pick",
            "example": 64,
            "title": "Part Id",
            "type": "integer"
          },
          "part_key": {
            "description": "Unique key of the part to pick",
            "example": "ABCD",
            "title": "Part Key",
            "type": "string"
          }
        },
        "required": [
          "id",
          "part_id",
          "part_key",
          "part_description"
        ],
        "title": "PickListLineContentSchema",
        "type": "object"
      },
      "KitPickListDetailSchema.b247181.PickListLineLocationSchema": {
        "description": "Location metadata for a pick list line.",
        "properties": {
          "box_no": {
            "description": "Box number containing the location",
            "example": 3,
            "title": "Box No",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier of the storage location",
            "example": 42,
            "title": "Id",
            "type": "integer"
          },
          "loc_no": {
            "description": "Location number inside the box",
            "example": 7,
            "title": "Loc No",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "box_no",
          "loc_no"
        ],
        "title": "PickListLineLocationSchema",
        "type": "object"
      },
      "KitPickListDetailSchema.b247181.PickListLineStatus": {
        "description": "Lifecycle status for an individual pick list line.",
        "enum": [
          "open",
          "completed"
        ],
        "title": "PickListLineStatus",
        "type": "string"
      },
      "KitPickListMembershipQueryResponseSchema.b247181": {
        "description": "Bulk response schema for pick list memberships grouped by kit.",
        "properties": {
          "memberships": {
            "description": "Memberships grouped by kit identifier order",
            "items": {
              "$ref": "#/components/schemas/KitPickListMembershipQueryResponseSchema.b247181.KitPickListMembershipQueryItemSchema"
            },
            "title": "Memberships",
            "type": "array"
          }
        },
        "title": "KitPickListMembershipQueryResponseSchema",
        "type": "object"
      },
      "KitPickListMembershipQueryResponseSchema.b247181.KitPickListMembershipQueryItemSchema": {
        "description": "Schema encapsulating pick list memberships for a single kit.",
        "properties": {
          "kit_id": {
            "description": "Requested kit identifier",
            "example": 7,
            "title": "Kit Id",
            "type": "integer"
          },
          "pick_lists": {
            "description": "Pick lists associated with the kit",
            "items": {
              "$ref": "#/components/schemas/KitPickListMembershipQueryResponseSchema.b247181.KitPickListMembershipSchema"
            },
            "title": "Pick Lists",
            "type": "array"
          }
        },
        "required": [
          "kit_id"
        ],
        "title": "KitPickListMembershipQueryItemSchema",
        "type": "object"
      },
      "KitPickListMembershipQueryResponseSchema.b247181.KitPickListMembershipSchema": {
        "description": "Schema describing pick list membership for bulk kit queries.",
        "properties": {
          "completed_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp when the pick list was completed",
            "example": "2024-04-16T13:25:00Z",
            "title": "Completed At"
          },
          "completed_line_count": {
            "description": "Number of lines that have already been picked",
            "example": 3,
            "title": "Completed Line Count",
            "type": "integer"
          },
          "created_at": {
            "description": "Timestamp when the pick list was created",
            "example": "2024-04-15T09:00:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the pick list",
            "example": 12,
            "title": "Id",
            "type": "integer"
          },
          "kit_id": {
            "description": "Identifier of the kit that owns the pick list",
            "example": 3,
            "title": "Kit Id",
            "type": "integer"
          },
          "line_count": {
            "description": "Total number of lines in the pick list",
            "example": 5,
            "title": "Line Count",
            "type": "integer"
          },
          "open_line_count": {
            "description": "Number of lines that still need to be picked",
            "example": 2,
            "title": "Open Line Count",
            "type": "integer"
          },
          "picked_quantity": {
            "description": "Quantity already picked for the pick list",
            "example": 8,
            "title": "Picked Quantity",
            "type": "integer"
          },
          "remaining_quantity": {
            "description": "Quantity still outstanding for the pick list",
            "example": 4,
            "title": "Remaining Quantity",
            "type": "integer"
          },
          "requested_units": {
            "description": "Number of kit builds requested for the pick list",
            "example": 2,
            "title": "Requested Units",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/KitPickListMembershipQueryResponseSchema.b247181.KitPickListStatus",
            "description": "Lifecycle status for the pick list",
            "example": "open"
          },
          "total_quantity_to_pick": {
            "description": "Sum of quantities across all lines",
            "example": 12,
            "title": "Total Quantity To Pick",
            "type": "integer"
          },
          "updated_at": {
            "description": "Timestamp when the pick list was last updated",
            "example": "2024-04-15T11:10:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "kit_id",
          "requested_units",
          "status",
          "created_at",
          "updated_at",
          "completed_at",
          "line_count",
          "open_line_count",
          "completed_line_count",
          "total_quantity_to_pick",
          "picked_quantity",
          "remaining_quantity"
        ],
        "title": "KitPickListMembershipSchema",
        "type": "object"
      },
      "KitPickListMembershipQueryResponseSchema.b247181.KitPickListStatus": {
        "description": "Lifecycle status for a kit pick list.",
        "enum": [
          "open",
          "completed"
        ],
        "title": "KitPickListStatus",
        "type": "string"
      },
      "KitPickListSummarySchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/KitPickListSummarySchemaList.a9993e3.KitPickListSummarySchema"
        },
        "title": "KitPickListSummarySchemaList",
        "type": "array"
      },
      "KitPickListSummarySchemaList.a9993e3.KitPickListStatus": {
        "description": "Lifecycle status for a kit pick list.",
        "enum": [
          "open",
          "completed"
        ],
        "title": "KitPickListStatus",
        "type": "string"
      },
      "KitPickListSummarySchemaList.a9993e3.KitPickListSummarySchema": {
        "description": "Summary information for a pick list used in listings.",
        "properties": {
          "completed_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp when the pick list was completed",
            "example": "2024-04-16T13:25:00Z",
            "title": "Completed At"
          },
          "completed_line_count": {
            "description": "Number of lines that have already been picked",
            "example": 3,
            "title": "Completed Line Count",
            "type": "integer"
          },
          "created_at": {
            "description": "Timestamp when the pick list was created",
            "example": "2024-04-15T09:00:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the pick list",
            "example": 12,
            "title": "Id",
            "type": "integer"
          },
          "kit_id": {
            "description": "Identifier of the kit that owns the pick list",
            "example": 3,
            "title": "Kit Id",
            "type": "integer"
          },
          "line_count": {
            "description": "Total number of lines in the pick list",
            "example": 5,
            "title": "Line Count",
            "type": "integer"
          },
          "open_line_count": {
            "description": "Number of lines that still need to be picked",
            "example": 2,
            "title": "Open Line Count",
            "type": "integer"
          },
          "picked_quantity": {
            "description": "Quantity already picked for the pick list",
            "example": 8,
            "title": "Picked Quantity",
            "type": "integer"
          },
          "remaining_quantity": {
            "description": "Quantity still outstanding for the pick list",
            "example": 4,
            "title": "Remaining Quantity",
            "type": "integer"
          },
          "requested_units": {
            "description": "Number of kit builds requested for the pick list",
            "example": 2,
            "title": "Requested Units",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/KitPickListSummarySchemaList.a9993e3.KitPickListStatus",
            "description": "Lifecycle status for the pick list",
            "example": "open"
          },
          "total_quantity_to_pick": {
            "description": "Sum of quantities across all lines",
            "example": 12,
            "title": "Total Quantity To Pick",
            "type": "integer"
          },
          "updated_at": {
            "description": "Timestamp when the pick list was last updated",
            "example": "2024-04-15T11:10:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "kit_id",
          "requested_units",
          "status",
          "created_at",
          "updated_at",
          "completed_at",
          "line_count",
          "open_line_count",
          "completed_line_count",
          "total_quantity_to_pick",
          "picked_quantity",
          "remaining_quantity"
        ],
        "title": "KitPickListSummarySchema",
        "type": "object"
      },
      "KitResponseSchema.b98797e": {
        "description": "Detailed schema for kit lifecycle operations.",
        "properties": {
          "archived_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp when kit was archived, if applicable",
            "example": "2024-03-20T18:45:00Z",
            "title": "Archived At"
          },
          "build_target": {
            "description": "Target quantity of complete kits to keep on hand",
            "example": 5,
            "title": "Build Target",
            "type": "integer"
          },
          "created_at": {
            "description": "Timestamp when the kit was created",
            "example": "2024-03-15T11:10:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional kit description",
            "example": "Compact synth voice for workshop demos",
            "title": "Description"
          },
          "id": {
            "description": "Unique kit identifier",
            "example": 17,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Kit display name",
            "example": "Portable Synth Voice",
            "title": "Name",
            "type": "string"
          },
          "pick_list_badge_count": {
            "default": 0,
            "description": "Number of open pick lists for the kit",
            "example": 1,
            "title": "Pick List Badge Count",
            "type": "integer"
          },
          "shopping_list_badge_count": {
            "default": 0,
            "description": "Number of concept/ready shopping lists linked to the kit",
            "example": 2,
            "title": "Shopping List Badge Count",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/KitResponseSchema.b98797e.KitStatus",
            "description": "Current lifecycle status of the kit",
            "example": "active"
          },
          "updated_at": {
            "description": "Timestamp when the kit was last modified",
            "example": "2024-04-10T15:30:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "status",
          "build_target",
          "archived_at",
          "created_at",
          "updated_at"
        ],
        "title": "KitResponseSchema",
        "type": "object"
      },
      "KitResponseSchema.b98797e.KitStatus": {
        "description": "Lifecycle status for a kit.",
        "enum": [
          "active",
          "archived"
        ],
        "title": "KitStatus",
        "type": "string"
      },
      "KitShoppingListChipSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/KitShoppingListChipSchemaList.a9993e3.KitShoppingListChipSchema"
        },
        "title": "KitShoppingListChipSchemaList",
        "type": "array"
      },
      "KitShoppingListChipSchemaList.a9993e3.KitShoppingListChipSchema": {
        "description": "Compact schema for chip renderings on kit and shopping list detail views.",
        "properties": {
          "created_at": {
            "description": "Timestamp when the link was created",
            "example": "2024-04-01T09:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "honor_reserved": {
            "description": "Whether reserved quantities were honored during the push",
            "example": false,
            "title": "Honor Reserved",
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the kit to shopping list link",
            "example": 9,
            "title": "Id",
            "type": "integer"
          },
          "is_stale": {
            "description": "Indicates whether the link needs resynchronization",
            "example": true,
            "title": "Is Stale",
            "type": "boolean"
          },
          "requested_units": {
            "description": "Number of kit build units used when pushing to the list",
            "example": 3,
            "minimum": 1,
            "title": "Requested Units",
            "type": "integer"
          },
          "shopping_list_id": {
            "description": "Identifier of the linked shopping list",
            "example": 21,
            "title": "Shopping List Id",
            "type": "integer"
          },
          "shopping_list_name": {
            "description": "Name of the linked shopping list",
            "example": "Concept BOM",
            "title": "Shopping List Name",
            "type": "string"
          },
          "snapshot_kit_updated_at": {
            "description": "Kit timestamp captured when the link was last refreshed",
            "example": "2024-05-01T14:15:00Z",
            "format": "date-time",
            "title": "Snapshot Kit Updated At",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/KitShoppingListChipSchemaList.a9993e3.ShoppingListStatus",
            "description": "Current status of the linked shopping list",
            "example": "ready"
          },
          "updated_at": {
            "description": "Timestamp when the link was last updated",
            "example": "2024-04-08T12:05:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "shopping_list_id",
          "shopping_list_name",
          "status",
          "requested_units",
          "honor_reserved",
          "snapshot_kit_updated_at",
          "is_stale",
          "created_at",
          "updated_at"
        ],
        "title": "KitShoppingListChipSchema",
        "type": "object"
      },
      "KitShoppingListChipSchemaList.a9993e3.ShoppingListStatus": {
        "description": "Possible lifecycle states for a shopping list.",
        "enum": [
          "concept",
          "ready",
          "done"
        ],
        "title": "ShoppingListStatus",
        "type": "string"
      },
      "KitShoppingListLinkResponseSchema.b98797e": {
        "description": "Response payload after creating or appending a kit shopping list link.",
        "properties": {
          "created_new_list": {
            "description": "Indicates whether a new shopping list was created during the push",
            "example": true,
            "title": "Created New List",
            "type": "boolean"
          },
          "lines_modified": {
            "description": "Number of shopping list lines created or updated",
            "example": 4,
            "title": "Lines Modified",
            "type": "integer"
          },
          "link": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.KitShoppingListLinkSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Link metadata after the push completes; omitted when no changes occurred"
          },
          "noop": {
            "description": "True when no shopping list lines required changes (no link created)",
            "example": false,
            "title": "Noop",
            "type": "boolean"
          },
          "shopping_list": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.ShoppingListResponseSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Refreshed shopping list payload reflecting merged lines"
          },
          "total_needed_quantity": {
            "description": "Total needed quantity summed across affected lines",
            "example": 16,
            "title": "Total Needed Quantity",
            "type": "integer"
          }
        },
        "required": [
          "created_new_list",
          "lines_modified",
          "total_needed_quantity",
          "noop"
        ],
        "title": "KitShoppingListLinkResponseSchema",
        "type": "object"
      },
      "KitShoppingListLinkResponseSchema.b98797e.KitShoppingListLinkSchema": {
        "description": "Schema describing shopping lists linked to a kit.",
        "properties": {
          "created_at": {
            "description": "Timestamp when the link was created",
            "example": "2024-04-01T09:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "honor_reserved": {
            "description": "Whether reserved quantities were honored during the push",
            "example": false,
            "title": "Honor Reserved",
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the kit to shopping list link",
            "example": 9,
            "title": "Id",
            "type": "integer"
          },
          "is_stale": {
            "description": "Indicates whether the link needs resynchronization",
            "example": true,
            "title": "Is Stale",
            "type": "boolean"
          },
          "requested_units": {
            "description": "Number of kit build units used when pushing to the list",
            "example": 3,
            "minimum": 1,
            "title": "Requested Units",
            "type": "integer"
          },
          "shopping_list_id": {
            "description": "Identifier of the linked shopping list",
            "example": 21,
            "title": "Shopping List Id",
            "type": "integer"
          },
          "shopping_list_name": {
            "description": "Name of the linked shopping list",
            "example": "Concept BOM",
            "title": "Shopping List Name",
            "type": "string"
          },
          "snapshot_kit_updated_at": {
            "description": "Kit timestamp captured when the link was last refreshed",
            "example": "2024-05-01T14:15:00Z",
            "format": "date-time",
            "title": "Snapshot Kit Updated At",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.ShoppingListStatus",
            "description": "Current status of the linked shopping list",
            "example": "ready"
          },
          "updated_at": {
            "description": "Timestamp when the link was last updated",
            "example": "2024-04-08T12:05:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "shopping_list_id",
          "shopping_list_name",
          "status",
          "requested_units",
          "honor_reserved",
          "snapshot_kit_updated_at",
          "is_stale",
          "created_at",
          "updated_at"
        ],
        "title": "KitShoppingListLinkSchema",
        "type": "object"
      },
      "KitShoppingListLinkResponseSchema.b98797e.PartListSchema": {
        "description": "Schema for lightweight part listings.",
        "properties": {
          "description": {
            "description": "Free text description",
            "example": "12V SPDT relay with 40A contacts",
            "title": "Description",
            "type": "string"
          },
          "key": {
            "description": "4-character unique part identifier",
            "example": "BZQP",
            "title": "Key",
            "type": "string"
          },
          "manufacturer_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Manufacturer's part number",
            "example": "OMRON G5Q-1A4",
            "title": "Manufacturer Code"
          }
        },
        "required": [
          "key",
          "manufacturer_code",
          "description"
        ],
        "title": "PartListSchema",
        "type": "object"
      },
      "KitShoppingListLinkResponseSchema.b98797e.PartLocationInlineSchema": {
        "description": "Inline schema for part location quantities.",
        "properties": {
          "box_no": {
            "description": "Box number where stock is stored",
            "example": 7,
            "title": "Box No",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the part location row",
            "example": 501,
            "title": "Id",
            "type": "integer"
          },
          "loc_no": {
            "description": "Location number within the box",
            "example": 3,
            "title": "Loc No",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity stored at this location",
            "example": 10,
            "title": "Qty",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "box_no",
          "loc_no",
          "qty"
        ],
        "title": "PartLocationInlineSchema",
        "type": "object"
      },
      "KitShoppingListLinkResponseSchema.b98797e.SellerListSchema": {
        "description": "Lightweight schema for seller dropdowns and listings.",
        "properties": {
          "id": {
            "description": "Unique seller ID",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Seller name",
            "example": "DigiKey",
            "title": "Name",
            "type": "string"
          },
          "website": {
            "description": "Seller website URL",
            "example": "https://www.digikey.com",
            "title": "Website",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "website"
        ],
        "title": "SellerListSchema",
        "type": "object"
      },
      "KitShoppingListLinkResponseSchema.b98797e.ShoppingListLineCountsSchema": {
        "description": "Aggregated counts of shopping list lines by status.",
        "properties": {
          "done": {
            "description": "Number of lines marked DONE",
            "title": "Done",
            "type": "integer"
          },
          "new": {
            "description": "Number of lines in NEW status",
            "title": "New",
            "type": "integer"
          },
          "ordered": {
            "description": "Number of lines marked ORDERED",
            "title": "Ordered",
            "type": "integer"
          }
        },
        "required": [
          "new",
          "ordered",
          "done"
        ],
        "title": "ShoppingListLineCountsSchema",
        "type": "object"
      },
      "KitShoppingListLinkResponseSchema.b98797e.ShoppingListLineResponseSchema": {
        "description": "Detailed schema for shopping list line responses including related entities.",
        "properties": {
          "can_receive": {
            "description": "True when the line can accept stock receipt actions",
            "example": true,
            "title": "Can Receive",
            "type": "boolean"
          },
          "completed_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp when the line was completed",
            "title": "Completed At"
          },
          "completion_mismatch": {
            "description": "Flag indicating completion with quantity mismatch",
            "example": false,
            "title": "Completion Mismatch",
            "type": "boolean"
          },
          "completion_note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional note explaining completion mismatch",
            "example": "Vendor short-shipped two units",
            "title": "Completion Note"
          },
          "created_at": {
            "description": "Timestamp when the line was created",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "effective_seller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.SellerListSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Seller entity used for Ready grouping"
          },
          "effective_seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller identifier used for grouping (override or part seller)",
            "example": 4,
            "title": "Effective Seller Id"
          },
          "has_quantity_mismatch": {
            "description": "True when ordered and received totals differ",
            "example": false,
            "title": "Has Quantity Mismatch",
            "type": "boolean"
          },
          "id": {
            "description": "Unique line identifier",
            "example": 42,
            "title": "Id",
            "type": "integer"
          },
          "is_orderable": {
            "description": "True when the line can be marked as ordered",
            "example": true,
            "title": "Is Orderable",
            "type": "boolean"
          },
          "is_revertible": {
            "description": "True when the line can revert from ordered back to new",
            "example": false,
            "title": "Is Revertible",
            "type": "boolean"
          },
          "needed": {
            "description": "Requested quantity",
            "example": 4,
            "title": "Needed",
            "type": "integer"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional notes for procurement",
            "example": "Optional color variant acceptable",
            "title": "Note"
          },
          "ordered": {
            "description": "Ordered quantity",
            "example": 0,
            "title": "Ordered",
            "type": "integer"
          },
          "part": {
            "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.PartListSchema",
            "description": "Details about the requested part"
          },
          "part_id": {
            "description": "Part identifier on this line",
            "example": 101,
            "title": "Part Id",
            "type": "integer"
          },
          "part_locations": {
            "description": "Locations currently holding stock for the part",
            "items": {
              "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.PartLocationInlineSchema"
            },
            "title": "Part Locations",
            "type": "array"
          },
          "received": {
            "description": "Received quantity",
            "example": 0,
            "title": "Received",
            "type": "integer"
          },
          "seller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.SellerListSchema"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller override details if specified"
          },
          "seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller override identifier",
            "example": 3,
            "title": "Seller Id"
          },
          "shopping_list_id": {
            "description": "Parent shopping list identifier",
            "example": 9,
            "title": "Shopping List Id",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.ShoppingListLineStatus",
            "description": "Workflow status for this line",
            "example": "new"
          },
          "updated_at": {
            "description": "Timestamp when the line was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "shopping_list_id",
          "part_id",
          "seller_id",
          "needed",
          "ordered",
          "received",
          "status",
          "note",
          "created_at",
          "updated_at",
          "effective_seller_id",
          "can_receive",
          "completion_mismatch",
          "completion_note",
          "completed_at",
          "has_quantity_mismatch",
          "part",
          "seller",
          "is_orderable",
          "is_revertible"
        ],
        "title": "ShoppingListLineResponseSchema",
        "type": "object"
      },
      "KitShoppingListLinkResponseSchema.b98797e.ShoppingListLineStatus": {
        "description": "Lifecycle states for an individual shopping list line.",
        "enum": [
          "new",
          "ordered",
          "done"
        ],
        "title": "ShoppingListLineStatus",
        "type": "string"
      },
      "KitShoppingListLinkResponseSchema.b98797e.ShoppingListResponseSchema": {
        "description": "Detailed schema for shopping list responses including line items.",
        "properties": {
          "created_at": {
            "description": "Timestamp when the list was created",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional list description",
            "example": "Collect everything for the VCF section",
            "title": "Description"
          },
          "id": {
            "description": "Unique shopping list identifier",
            "example": 7,
            "title": "Id",
            "type": "integer"
          },
          "line_counts": {
            "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.ShoppingListLineCountsSchema",
            "description": "Line counts grouped by status"
          },
          "lines": {
            "description": "Line items associated with this list",
            "items": {
              "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.ShoppingListLineResponseSchema"
            },
            "title": "Lines",
            "type": "array"
          },
          "name": {
            "description": "Shopping list name",
            "example": "Synth Voice Build",
            "title": "Name",
            "type": "string"
          },
          "seller_groups": {
            "description": "Grouping of lines by seller for Ready planning",
            "items": {
              "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.ShoppingListSellerGroupSchema"
            },
            "title": "Seller Groups",
            "type": "array"
          },
          "seller_notes": {
            "description": "Seller-specific notes for Ready view",
            "items": {
              "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.ShoppingListSellerOrderNoteSchema"
            },
            "title": "Seller Notes",
            "type": "array"
          },
          "status": {
            "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.ShoppingListStatus",
            "description": "Workflow status",
            "example": "ready"
          },
          "updated_at": {
            "description": "Timestamp when the list was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "status",
          "created_at",
          "updated_at",
          "line_counts",
          "lines"
        ],
        "title": "ShoppingListResponseSchema",
        "type": "object"
      },
      "KitShoppingListLinkResponseSchema.b98797e.ShoppingListSellerGroupSchema": {
        "description": "Schema representing seller-based grouping in Ready view.",
        "properties": {
          "group_key": {
            "description": "Identifier for the seller grouping (seller id or 'ungrouped')",
            "example": "seller-4",
            "title": "Group Key",
            "type": "string"
          },
          "lines": {
            "description": "Lines that belong to this grouping",
            "items": {
              "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.ShoppingListLineResponseSchema"
            },
            "title": "Lines",
            "type": "array"
          },
          "order_note": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.ShoppingListSellerOrderNoteSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Seller note if the group is associated with a seller"
          },
          "seller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.SellerListSchema"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller metadata for the group when available"
          },
          "seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller identifier if group is seller-backed",
            "example": 4,
            "title": "Seller Id"
          },
          "totals": {
            "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.ShoppingListSellerGroupTotalsSchema",
            "description": "Aggregated quantities for the group"
          }
        },
        "required": [
          "group_key",
          "seller_id",
          "seller",
          "lines",
          "totals"
        ],
        "title": "ShoppingListSellerGroupSchema",
        "type": "object"
      },
      "KitShoppingListLinkResponseSchema.b98797e.ShoppingListSellerGroupTotalsSchema": {
        "description": "Aggregated totals for a seller grouping.",
        "properties": {
          "needed": {
            "description": "Total needed quantity for the group",
            "example": 12,
            "title": "Needed",
            "type": "integer"
          },
          "ordered": {
            "description": "Total ordered quantity for the group",
            "example": 8,
            "title": "Ordered",
            "type": "integer"
          },
          "received": {
            "description": "Total received quantity for the group",
            "example": 0,
            "title": "Received",
            "type": "integer"
          }
        },
        "required": [
          "needed",
          "ordered",
          "received"
        ],
        "title": "ShoppingListSellerGroupTotalsSchema",
        "type": "object"
      },
      "KitShoppingListLinkResponseSchema.b98797e.ShoppingListSellerOrderNoteSchema": {
        "description": "Response schema for seller-specific order notes on a shopping list.",
        "properties": {
          "note": {
            "description": "Free-form per-seller order note",
            "example": "Bundle this order with enclosure purchase.",
            "title": "Note",
            "type": "string"
          },
          "seller": {
            "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e.SellerListSchema",
            "description": "Seller metadata for display"
          },
          "seller_id": {
            "description": "Seller identifier the note applies to",
            "example": 4,
            "title": "Seller Id",
            "type": "integer"
          },
          "updated_at": {
            "description": "Timestamp when the note was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "seller_id",
          "seller",
          "note",
          "updated_at"
        ],
        "title": "ShoppingListSellerOrderNoteSchema",
        "type": "object"
      },
      "KitShoppingListLinkResponseSchema.b98797e.ShoppingListStatus": {
        "description": "Possible lifecycle states for a shopping list.",
        "enum": [
          "concept",
          "ready",
          "done"
        ],
        "title": "ShoppingListStatus",
        "type": "string"
      },
      "KitShoppingListMembershipQueryResponseSchema.b98797e": {
        "description": "Bulk response schema for shopping list memberships grouped by kit.",
        "properties": {
          "memberships": {
            "description": "Memberships grouped by kit identifier order",
            "items": {
              "$ref": "#/components/schemas/KitShoppingListMembershipQueryResponseSchema.b98797e.KitShoppingListMembershipQueryItemSchema"
            },
            "title": "Memberships",
            "type": "array"
          }
        },
        "title": "KitShoppingListMembershipQueryResponseSchema",
        "type": "object"
      },
      "KitShoppingListMembershipQueryResponseSchema.b98797e.KitShoppingListLinkSchema": {
        "description": "Schema describing shopping lists linked to a kit.",
        "properties": {
          "created_at": {
            "description": "Timestamp when the link was created",
            "example": "2024-04-01T09:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "honor_reserved": {
            "description": "Whether reserved quantities were honored during the push",
            "example": false,
            "title": "Honor Reserved",
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the kit to shopping list link",
            "example": 9,
            "title": "Id",
            "type": "integer"
          },
          "is_stale": {
            "description": "Indicates whether the link needs resynchronization",
            "example": true,
            "title": "Is Stale",
            "type": "boolean"
          },
          "requested_units": {
            "description": "Number of kit build units used when pushing to the list",
            "example": 3,
            "minimum": 1,
            "title": "Requested Units",
            "type": "integer"
          },
          "shopping_list_id": {
            "description": "Identifier of the linked shopping list",
            "example": 21,
            "title": "Shopping List Id",
            "type": "integer"
          },
          "shopping_list_name": {
            "description": "Name of the linked shopping list",
            "example": "Concept BOM",
            "title": "Shopping List Name",
            "type": "string"
          },
          "snapshot_kit_updated_at": {
            "description": "Kit timestamp captured when the link was last refreshed",
            "example": "2024-05-01T14:15:00Z",
            "format": "date-time",
            "title": "Snapshot Kit Updated At",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/KitShoppingListMembershipQueryResponseSchema.b98797e.ShoppingListStatus",
            "description": "Current status of the linked shopping list",
            "example": "ready"
          },
          "updated_at": {
            "description": "Timestamp when the link was last updated",
            "example": "2024-04-08T12:05:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "shopping_list_id",
          "shopping_list_name",
          "status",
          "requested_units",
          "honor_reserved",
          "snapshot_kit_updated_at",
          "is_stale",
          "created_at",
          "updated_at"
        ],
        "title": "KitShoppingListLinkSchema",
        "type": "object"
      },
      "KitShoppingListMembershipQueryResponseSchema.b98797e.KitShoppingListMembershipQueryItemSchema": {
        "description": "Schema encapsulating shopping list memberships for a single kit.",
        "properties": {
          "kit_id": {
            "description": "Requested kit identifier",
            "example": 7,
            "title": "Kit Id",
            "type": "integer"
          },
          "memberships": {
            "description": "Shopping list memberships associated with the kit",
            "items": {
              "$ref": "#/components/schemas/KitShoppingListMembershipQueryResponseSchema.b98797e.KitShoppingListLinkSchema"
            },
            "title": "Memberships",
            "type": "array"
          }
        },
        "required": [
          "kit_id"
        ],
        "title": "KitShoppingListMembershipQueryItemSchema",
        "type": "object"
      },
      "KitShoppingListMembershipQueryResponseSchema.b98797e.ShoppingListStatus": {
        "description": "Possible lifecycle states for a shopping list.",
        "enum": [
          "concept",
          "ready",
          "done"
        ],
        "title": "ShoppingListStatus",
        "type": "string"
      },
      "KitShoppingListRequestSchema.b98797e": {
        "description": "Request payload for pushing kit contents to a shopping list.",
        "properties": {
          "honor_reserved": {
            "default": false,
            "description": "Subtract reserved quantities belonging to other kits when true",
            "example": false,
            "title": "Honor Reserved",
            "type": "boolean"
          },
          "new_list_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Optional description for the new shopping list",
            "example": "Sourcing pass for the spring synth kits",
            "title": "New List Description"
          },
          "new_list_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Name for a new Concept shopping list when creating one",
            "example": "Synth Voice Purchasing",
            "title": "New List Name"
          },
          "note_prefix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Fallback text appended to line notes when kit BOM rows lack notes",
            "example": "General replenishment",
            "title": "Note Prefix"
          },
          "shopping_list_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Existing Concept shopping list to append to",
            "example": 18,
            "title": "Shopping List Id"
          },
          "units": {
            "anyOf": [
              {
                "minimum": 1,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Number of kit units to plan for; defaults to the kit build target when omitted",
            "example": 2,
            "title": "Units"
          }
        },
        "title": "KitShoppingListRequestSchema",
        "type": "object"
      },
      "KitSummarySchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/KitSummarySchemaList.a9993e3.KitSummarySchema"
        },
        "title": "KitSummarySchemaList",
        "type": "array"
      },
      "KitSummarySchemaList.a9993e3.KitStatus": {
        "description": "Lifecycle status for a kit.",
        "enum": [
          "active",
          "archived"
        ],
        "title": "KitStatus",
        "type": "string"
      },
      "KitSummarySchemaList.a9993e3.KitSummarySchema": {
        "description": "Lightweight schema for kit overview cards.",
        "properties": {
          "archived_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp when kit was archived, if applicable",
            "example": "2024-03-20T18:45:00Z",
            "title": "Archived At"
          },
          "build_target": {
            "description": "Target quantity of complete kits to keep on hand",
            "example": 5,
            "title": "Build Target",
            "type": "integer"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional kit description shown in the overview",
            "example": "Compact synth voice for workshop demos",
            "title": "Description"
          },
          "id": {
            "description": "Unique kit identifier",
            "example": 17,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Kit display name",
            "example": "Portable Synth Voice",
            "title": "Name",
            "type": "string"
          },
          "pick_list_badge_count": {
            "default": 0,
            "description": "Number of open pick lists for the kit",
            "example": 1,
            "title": "Pick List Badge Count",
            "type": "integer"
          },
          "shopping_list_badge_count": {
            "default": 0,
            "description": "Number of concept/ready shopping lists linked to the kit",
            "example": 2,
            "title": "Shopping List Badge Count",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/KitSummarySchemaList.a9993e3.KitStatus",
            "description": "Current lifecycle status of the kit",
            "example": "active"
          },
          "updated_at": {
            "description": "Timestamp when the kit was last modified",
            "example": "2024-04-10T15:30:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "status",
          "build_target",
          "archived_at",
          "updated_at"
        ],
        "title": "KitSummarySchema",
        "type": "object"
      },
      "KitUpdateSchema.b98797e": {
        "description": "Schema for updating kit metadata.",
        "properties": {
          "build_target": {
            "anyOf": [
              {
                "minimum": 0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated build target for inventory planning; must be zero or greater",
            "example": 3,
            "title": "Build Target"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated description for the kit",
            "example": "Rev B adds MIDI DIN breakouts and improves documentation",
            "title": "Description"
          },
          "name": {
            "anyOf": [
              {
                "maxLength": 255,
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated kit name",
            "example": "Synth Voice Rev B",
            "title": "Name"
          }
        },
        "title": "KitUpdateSchema",
        "type": "object"
      },
      "LocationResponseSchema.1cdc15f": {
        "description": "Schema for location details.",
        "properties": {
          "box_no": {
            "description": "The box number where this location is situated",
            "example": 7,
            "title": "Box No",
            "type": "integer"
          },
          "loc_no": {
            "description": "The location number within the box (e.g., location 3 in box 7 would be '7-3')",
            "example": 15,
            "title": "Loc No",
            "type": "integer"
          }
        },
        "required": [
          "box_no",
          "loc_no"
        ],
        "title": "LocationResponseSchema",
        "type": "object"
      },
      "LocationResponseSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/LocationResponseSchemaList.a9993e3.LocationResponseSchema"
        },
        "title": "LocationResponseSchemaList",
        "type": "array"
      },
      "LocationResponseSchemaList.a9993e3.LocationResponseSchema": {
        "description": "Schema for location details.",
        "properties": {
          "box_no": {
            "description": "The box number where this location is situated",
            "example": 7,
            "title": "Box No",
            "type": "integer"
          },
          "loc_no": {
            "description": "The location number within the box (e.g., location 3 in box 7 would be '7-3')",
            "example": 15,
            "title": "Loc No",
            "type": "integer"
          }
        },
        "required": [
          "box_no",
          "loc_no"
        ],
        "title": "LocationResponseSchema",
        "type": "object"
      },
      "LocationSuggestionSchema.46800bd": {
        "description": "Schema for location suggestions.",
        "properties": {
          "box_no": {
            "description": "Suggested box number",
            "example": 7,
            "title": "Box No",
            "type": "integer"
          },
          "loc_no": {
            "description": "Suggested location number within box",
            "example": 3,
            "title": "Loc No",
            "type": "integer"
          }
        },
        "required": [
          "box_no",
          "loc_no"
        ],
        "title": "LocationSuggestionSchema",
        "type": "object"
      },
      "LowStockItemSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/LowStockItemSchemaList.a9993e3.LowStockItemSchema"
        },
        "title": "LowStockItemSchemaList",
        "type": "array"
      },
      "LowStockItemSchemaList.a9993e3.LowStockItemSchema": {
        "description": "Schema for low stock item response.",
        "properties": {
          "current_quantity": {
            "description": "Current total quantity",
            "minimum": 0,
            "title": "Current Quantity",
            "type": "integer"
          },
          "description": {
            "description": "Part description",
            "title": "Description",
            "type": "string"
          },
          "part_key": {
            "description": "4-character part ID",
            "maxLength": 4,
            "title": "Part Key",
            "type": "string"
          },
          "type_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Part type/category name",
            "title": "Type Name"
          }
        },
        "required": [
          "part_key",
          "description",
          "current_quantity"
        ],
        "title": "LowStockItemSchema",
        "type": "object"
      },
      "MoveStockSchema.46800bd": {
        "description": "Schema for moving stock between locations.",
        "properties": {
          "from_box_no": {
            "description": "Source box number",
            "example": 7,
            "title": "From Box No",
            "type": "integer"
          },
          "from_loc_no": {
            "description": "Source location number within box",
            "example": 3,
            "title": "From Loc No",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity to move (must be positive)",
            "example": 3,
            "exclusiveMinimum": 0,
            "title": "Qty",
            "type": "integer"
          },
          "to_box_no": {
            "description": "Destination box number",
            "example": 8,
            "title": "To Box No",
            "type": "integer"
          },
          "to_loc_no": {
            "description": "Destination location number within box",
            "example": 15,
            "title": "To Loc No",
            "type": "integer"
          }
        },
        "required": [
          "from_box_no",
          "from_loc_no",
          "to_box_no",
          "to_loc_no",
          "qty"
        ],
        "title": "MoveStockSchema",
        "type": "object"
      },
      "PartAttachmentListSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/PartAttachmentListSchemaList.a9993e3.PartAttachmentListSchema"
        },
        "title": "PartAttachmentListSchemaList",
        "type": "array"
      },
      "PartAttachmentListSchemaList.a9993e3.AttachmentType": {
        "description": "Enum for attachment types.",
        "enum": [
          "url",
          "image",
          "pdf"
        ],
        "title": "AttachmentType",
        "type": "string"
      },
      "PartAttachmentListSchemaList.a9993e3.PartAttachmentListSchema": {
        "description": "Schema for lightweight attachment listings.",
        "properties": {
          "attachment_type": {
            "$ref": "#/components/schemas/PartAttachmentListSchemaList.a9993e3.AttachmentType",
            "description": "Type of attachment",
            "example": "image"
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "MIME type of the file",
            "example": "application/pdf",
            "title": "Content Type"
          },
          "created_at": {
            "description": "Timestamp when the attachment was created",
            "example": "2024-01-15T10:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "File size in bytes",
            "example": 1048576,
            "title": "File Size"
          },
          "filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Original filename (for uploaded files)",
            "example": "omron_g5q_datasheet.pdf",
            "title": "Filename"
          },
          "has_preview": {
            "description": "Whether this attachment has a preview image",
            "example": true,
            "title": "Has Preview",
            "type": "boolean"
          },
          "id": {
            "description": "Unique attachment identifier",
            "example": 123,
            "title": "Id",
            "type": "integer"
          },
          "title": {
            "description": "Title or description of the attachment",
            "example": "Datasheet - OMRON G5Q-1A4",
            "title": "Title",
            "type": "string"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Original URL (for URL attachments)",
            "example": "https://www.omron.com/products/G5Q-1A4",
            "title": "Url"
          }
        },
        "required": [
          "id",
          "attachment_type",
          "title",
          "url",
          "filename",
          "content_type",
          "file_size",
          "created_at",
          "has_preview"
        ],
        "title": "PartAttachmentListSchema",
        "type": "object"
      },
      "PartAttachmentResponseSchema.f950e1b": {
        "description": "Schema for full attachment details.",
        "properties": {
          "attachment_type": {
            "$ref": "#/components/schemas/PartAttachmentResponseSchema.f950e1b.AttachmentType",
            "description": "Type of attachment",
            "example": "image"
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "MIME type of the file",
            "example": "application/pdf",
            "title": "Content Type"
          },
          "created_at": {
            "description": "Timestamp when the attachment was created",
            "example": "2024-01-15T10:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "File size in bytes",
            "example": 1048576,
            "title": "File Size"
          },
          "filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Original filename (for uploaded files)",
            "example": "omron_g5q_datasheet.pdf",
            "title": "Filename"
          },
          "has_preview": {
            "description": "Whether this attachment has a preview image",
            "example": true,
            "title": "Has Preview",
            "type": "boolean"
          },
          "id": {
            "description": "Unique attachment identifier",
            "example": 123,
            "title": "Id",
            "type": "integer"
          },
          "part_id": {
            "description": "ID of the associated part",
            "example": 456,
            "title": "Part Id",
            "type": "integer"
          },
          "s3_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "S3 storage key for the file",
            "example": "parts/456/attachments/abc123.pdf",
            "title": "S3 Key"
          },
          "title": {
            "description": "Title or description of the attachment",
            "example": "Datasheet - OMRON G5Q-1A4",
            "title": "Title",
            "type": "string"
          },
          "updated_at": {
            "description": "Timestamp when the attachment was last modified",
            "example": "2024-01-15T14:45:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Original URL (for URL attachments)",
            "example": "https://www.omron.com/products/G5Q-1A4",
            "title": "Url"
          }
        },
        "required": [
          "id",
          "part_id",
          "attachment_type",
          "title",
          "s3_key",
          "url",
          "filename",
          "content_type",
          "file_size",
          "created_at",
          "updated_at",
          "has_preview"
        ],
        "title": "PartAttachmentResponseSchema",
        "type": "object"
      },
      "PartAttachmentResponseSchema.f950e1b.AttachmentType": {
        "description": "Enum for attachment types.",
        "enum": [
          "url",
          "image",
          "pdf"
        ],
        "title": "AttachmentType",
        "type": "string"
      },
      "PartAttachmentUpdateSchema.f950e1b": {
        "description": "Schema for updating attachment metadata.",
        "properties": {
          "title": {
            "anyOf": [
              {
                "maxLength": 255,
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated title or description",
            "example": "Updated Datasheet - OMRON G5Q-1A4",
            "title": "Title"
          }
        },
        "title": "PartAttachmentUpdateSchema",
        "type": "object"
      },
      "PartCreateSchema.1a46b79": {
        "description": "Schema for creating a new part.",
        "properties": {
          "description": {
            "description": "Free text description of the part",
            "example": "12V SPDT relay with 40A contacts",
            "minLength": 1,
            "title": "Description",
            "type": "string"
          },
          "dimensions": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Physical size of the component",
            "example": "20x15x5mm",
            "title": "Dimensions"
          },
          "input_voltage": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Input voltage range/specification",
            "example": "5-12V DC",
            "title": "Input Voltage"
          },
          "manufacturer": {
            "anyOf": [
              {
                "maxLength": 255,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Manufacturer company name",
            "example": "Texas Instruments",
            "title": "Manufacturer"
          },
          "manufacturer_code": {
            "anyOf": [
              {
                "maxLength": 255,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Manufacturer's part number or code",
            "example": "OMRON G5Q-1A4",
            "title": "Manufacturer Code"
          },
          "mounting_type": {
            "anyOf": [
              {
                "maxLength": 50,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "How the component is physically mounted",
            "example": "Through-hole",
            "title": "Mounting Type"
          },
          "output_voltage": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Output voltage range/specification",
            "example": "3.3V",
            "title": "Output Voltage"
          },
          "package": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Physical package type for the component",
            "example": "DIP-8",
            "title": "Package"
          },
          "pin_count": {
            "anyOf": [
              {
                "exclusiveMinimum": 0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Number of pins/connections on the component",
            "example": 8,
            "title": "Pin Count"
          },
          "pin_pitch": {
            "anyOf": [
              {
                "maxLength": 50,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Component pin pitch/spacing",
            "example": "2.54mm",
            "title": "Pin Pitch"
          },
          "product_page": {
            "anyOf": [
              {
                "maxLength": 500,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Manufacturer's product page URL",
            "example": "https://www.ti.com/product/SN74HC595",
            "title": "Product Page"
          },
          "seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "ID of the seller/vendor",
            "example": 1,
            "title": "Seller Id"
          },
          "seller_link": {
            "anyOf": [
              {
                "maxLength": 500,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Product page URL at seller",
            "example": "https://www.digikey.com/en/products/detail/G5Q-1A4",
            "title": "Seller Link"
          },
          "series": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Component family or series identification",
            "example": "74HC",
            "title": "Series"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Tags for categorization and search",
            "example": [
              "12V",
              "SPDT",
              "automotive"
            ],
            "title": "Tags"
          },
          "type_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "ID of the part type/category",
            "example": 1,
            "title": "Type Id"
          },
          "voltage_rating": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Operating or rated voltage for the component",
            "example": "3.3V",
            "title": "Voltage Rating"
          }
        },
        "required": [
          "description"
        ],
        "title": "PartCreateSchema",
        "type": "object"
      },
      "PartKitReservationsResponseSchema.d12d9a5": {
        "description": "Response schema for the part reservation debug endpoint.",
        "properties": {
          "active_reservations": {
            "description": "Active kits that currently reserve this part",
            "items": {
              "$ref": "#/components/schemas/PartKitReservationsResponseSchema.d12d9a5.KitReservationEntrySchema"
            },
            "title": "Active Reservations",
            "type": "array"
          },
          "part_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional description of the part",
            "example": "Utility op-amp for signal conditioning",
            "title": "Part Description"
          },
          "part_id": {
            "description": "Identifier of the part being inspected",
            "example": 42,
            "title": "Part Id",
            "type": "integer"
          },
          "part_key": {
            "description": "Unique key of the part",
            "example": "ABCD",
            "title": "Part Key",
            "type": "string"
          },
          "total_reserved": {
            "description": "Sum of reserved quantities across all active kits",
            "example": 7,
            "title": "Total Reserved",
            "type": "integer"
          }
        },
        "required": [
          "part_id",
          "part_key",
          "part_description",
          "total_reserved"
        ],
        "title": "PartKitReservationsResponseSchema",
        "type": "object"
      },
      "PartKitReservationsResponseSchema.d12d9a5.KitReservationEntrySchema": {
        "description": "Schema representing an active kit reserving a part.",
        "properties": {
          "build_target": {
            "description": "Build target for the reserving kit",
            "example": 2,
            "title": "Build Target",
            "type": "integer"
          },
          "kit_id": {
            "description": "Identifier of the kit reserving the part",
            "example": 3,
            "title": "Kit Id",
            "type": "integer"
          },
          "kit_name": {
            "description": "Display name of the kit reserving the part",
            "example": "Synth Voice Starter",
            "title": "Kit Name",
            "type": "string"
          },
          "required_per_unit": {
            "description": "Quantity of the part required per kit build",
            "example": 2,
            "title": "Required Per Unit",
            "type": "integer"
          },
          "reserved_quantity": {
            "description": "Total quantity reserved by the kit",
            "example": 4,
            "title": "Reserved Quantity",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/PartKitReservationsResponseSchema.d12d9a5.KitStatus",
            "description": "Current status of the reserving kit",
            "example": "active"
          },
          "updated_at": {
            "description": "Timestamp when the reserving kit was last updated",
            "example": "2024-05-01T12:00:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "kit_id",
          "kit_name",
          "status",
          "build_target",
          "required_per_unit",
          "reserved_quantity",
          "updated_at"
        ],
        "title": "KitReservationEntrySchema",
        "type": "object"
      },
      "PartKitReservationsResponseSchema.d12d9a5.KitStatus": {
        "description": "Lifecycle status for a kit.",
        "enum": [
          "active",
          "archived"
        ],
        "title": "KitStatus",
        "type": "string"
      },
      "PartKitUsageSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/PartKitUsageSchemaList.a9993e3.PartKitUsageSchema"
        },
        "title": "PartKitUsageSchemaList",
        "type": "array"
      },
      "PartKitUsageSchemaList.a9993e3.KitStatus": {
        "description": "Lifecycle status for a kit.",
        "enum": [
          "active",
          "archived"
        ],
        "title": "KitStatus",
        "type": "string"
      },
      "PartKitUsageSchemaList.a9993e3.PartKitUsageSchema": {
        "description": "Schema describing an active kit that consumes a specific part.",
        "properties": {
          "build_target": {
            "description": "Build target quantity for the reserving kit",
            "example": 5,
            "title": "Build Target",
            "type": "integer"
          },
          "kit_id": {
            "description": "Identifier of the kit reserving the part",
            "example": 7,
            "title": "Kit Id",
            "type": "integer"
          },
          "kit_name": {
            "description": "Display name of the kit reserving the part",
            "example": "Eurorack Power Module",
            "title": "Kit Name",
            "type": "string"
          },
          "required_per_unit": {
            "description": "Quantity of this part required for a single kit build",
            "example": 2,
            "title": "Required Per Unit",
            "type": "integer"
          },
          "reserved_quantity": {
            "description": "Total quantity of the part reserved by the kit",
            "example": 10,
            "title": "Reserved Quantity",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/PartKitUsageSchemaList.a9993e3.KitStatus",
            "description": "Current lifecycle status of the reserving kit",
            "example": "active"
          },
          "updated_at": {
            "description": "Timestamp when the reserving kit was last updated",
            "example": "2024-05-22T18:30:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "kit_id",
          "kit_name",
          "status",
          "build_target",
          "required_per_unit",
          "reserved_quantity",
          "updated_at"
        ],
        "title": "PartKitUsageSchema",
        "type": "object"
      },
      "PartLocationResponseSchema.1a46b79": {
        "description": "Schema for part location details with quantity.",
        "properties": {
          "box_no": {
            "description": "Box number",
            "example": 7,
            "title": "Box No",
            "type": "integer"
          },
          "key": {
            "description": "4-character part identifier",
            "example": "BZQP",
            "title": "Key",
            "type": "string"
          },
          "loc_no": {
            "description": "Location number within box",
            "example": 3,
            "title": "Loc No",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity at this location",
            "example": 10,
            "title": "Qty",
            "type": "integer"
          }
        },
        "required": [
          "key",
          "box_no",
          "loc_no",
          "qty"
        ],
        "title": "PartLocationResponseSchema",
        "type": "object"
      },
      "PartLocationResponseSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/PartLocationResponseSchemaList.a9993e3.PartLocationResponseSchema"
        },
        "title": "PartLocationResponseSchemaList",
        "type": "array"
      },
      "PartLocationResponseSchemaList.a9993e3.PartLocationResponseSchema": {
        "description": "Schema for part location details with quantity.",
        "properties": {
          "box_no": {
            "description": "Box number",
            "example": 7,
            "title": "Box No",
            "type": "integer"
          },
          "key": {
            "description": "4-character part identifier",
            "example": "BZQP",
            "title": "Key",
            "type": "string"
          },
          "loc_no": {
            "description": "Location number within box",
            "example": 3,
            "title": "Loc No",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity at this location",
            "example": 10,
            "title": "Qty",
            "type": "integer"
          }
        },
        "required": [
          "key",
          "box_no",
          "loc_no",
          "qty"
        ],
        "title": "PartLocationResponseSchema",
        "type": "object"
      },
      "PartResponseSchema.1a46b79": {
        "description": "Schema for full part details with relationships.",
        "properties": {
          "attachments": {
            "default": [],
            "description": "List of part attachments (images, PDFs, URLs)",
            "items": {
              "$ref": "#/components/schemas/PartResponseSchema.1a46b79.PartAttachmentListSchema"
            },
            "title": "Attachments",
            "type": "array"
          },
          "cover_attachment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PartResponseSchema.1a46b79.PartAttachmentResponseSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Cover attachment details"
          },
          "cover_attachment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "ID of the cover attachment image",
            "example": 123,
            "title": "Cover Attachment Id"
          },
          "created_at": {
            "description": "Timestamp when the part was created",
            "example": "2024-01-15T10:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "description": {
            "description": "Free text description",
            "example": "12V SPDT relay with 40A contacts",
            "title": "Description",
            "type": "string"
          },
          "dimensions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Physical dimensions",
            "example": "20x15x5mm",
            "title": "Dimensions"
          },
          "input_voltage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Input voltage range/specification",
            "example": "5-12V DC",
            "title": "Input Voltage"
          },
          "key": {
            "description": "4-character unique part identifier",
            "example": "BZQP",
            "title": "Key",
            "type": "string"
          },
          "manufacturer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Manufacturer company name",
            "example": "Texas Instruments",
            "title": "Manufacturer"
          },
          "manufacturer_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Manufacturer's part number",
            "example": "OMRON G5Q-1A4",
            "title": "Manufacturer Code"
          },
          "mounting_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Physical mounting type",
            "example": "Through-hole",
            "title": "Mounting Type"
          },
          "output_voltage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Output voltage range/specification",
            "example": "3.3V",
            "title": "Output Voltage"
          },
          "package": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Physical package type",
            "example": "DIP-8",
            "title": "Package"
          },
          "pin_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Number of pins/connections",
            "example": 8,
            "title": "Pin Count"
          },
          "pin_pitch": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Component pin pitch/spacing",
            "example": "2.54mm",
            "title": "Pin Pitch"
          },
          "product_page": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Manufacturer's product page URL",
            "example": "https://www.ti.com/product/SN74HC595",
            "title": "Product Page"
          },
          "seller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PartResponseSchema.1a46b79.SellerListSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Seller/vendor details"
          },
          "seller_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Product page URL",
            "example": "https://www.digikey.com/en/products/detail/G5Q-1A4",
            "title": "Seller Link"
          },
          "series": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Component series identification",
            "example": "74HC",
            "title": "Series"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "Tags for categorization",
            "example": [
              "12V",
              "SPDT",
              "automotive"
            ],
            "title": "Tags"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PartResponseSchema.1a46b79.TypeResponseSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Part type/category details"
          },
          "type_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Part type/category ID",
            "example": 1,
            "title": "Type Id"
          },
          "updated_at": {
            "description": "Timestamp when the part was last modified",
            "example": "2024-01-15T14:45:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "used_in_kits": {
            "default": false,
            "description": "True when the part is reserved by at least one active kit",
            "example": true,
            "title": "Used In Kits",
            "type": "boolean"
          },
          "voltage_rating": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Operating or rated voltage",
            "example": "3.3V",
            "title": "Voltage Rating"
          }
        },
        "required": [
          "key",
          "manufacturer_code",
          "type_id",
          "description",
          "tags",
          "seller_link",
          "cover_attachment_id",
          "created_at",
          "updated_at"
        ],
        "title": "PartResponseSchema",
        "type": "object"
      },
      "PartResponseSchema.1a46b79.AttachmentType": {
        "description": "Enum for attachment types.",
        "enum": [
          "url",
          "image",
          "pdf"
        ],
        "title": "AttachmentType",
        "type": "string"
      },
      "PartResponseSchema.1a46b79.PartAttachmentListSchema": {
        "description": "Schema for lightweight attachment listings.",
        "properties": {
          "attachment_type": {
            "$ref": "#/components/schemas/PartResponseSchema.1a46b79.AttachmentType",
            "description": "Type of attachment",
            "example": "image"
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "MIME type of the file",
            "example": "application/pdf",
            "title": "Content Type"
          },
          "created_at": {
            "description": "Timestamp when the attachment was created",
            "example": "2024-01-15T10:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "File size in bytes",
            "example": 1048576,
            "title": "File Size"
          },
          "filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Original filename (for uploaded files)",
            "example": "omron_g5q_datasheet.pdf",
            "title": "Filename"
          },
          "has_preview": {
            "description": "Whether this attachment has a preview image",
            "example": true,
            "title": "Has Preview",
            "type": "boolean"
          },
          "id": {
            "description": "Unique attachment identifier",
            "example": 123,
            "title": "Id",
            "type": "integer"
          },
          "title": {
            "description": "Title or description of the attachment",
            "example": "Datasheet - OMRON G5Q-1A4",
            "title": "Title",
            "type": "string"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Original URL (for URL attachments)",
            "example": "https://www.omron.com/products/G5Q-1A4",
            "title": "Url"
          }
        },
        "required": [
          "id",
          "attachment_type",
          "title",
          "url",
          "filename",
          "content_type",
          "file_size",
          "created_at",
          "has_preview"
        ],
        "title": "PartAttachmentListSchema",
        "type": "object"
      },
      "PartResponseSchema.1a46b79.PartAttachmentResponseSchema": {
        "description": "Schema for full attachment details.",
        "properties": {
          "attachment_type": {
            "$ref": "#/components/schemas/PartResponseSchema.1a46b79.AttachmentType",
            "description": "Type of attachment",
            "example": "image"
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "MIME type of the file",
            "example": "application/pdf",
            "title": "Content Type"
          },
          "created_at": {
            "description": "Timestamp when the attachment was created",
            "example": "2024-01-15T10:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "File size in bytes",
            "example": 1048576,
            "title": "File Size"
          },
          "filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Original filename (for uploaded files)",
            "example": "omron_g5q_datasheet.pdf",
            "title": "Filename"
          },
          "has_preview": {
            "description": "Whether this attachment has a preview image",
            "example": true,
            "title": "Has Preview",
            "type": "boolean"
          },
          "id": {
            "description": "Unique attachment identifier",
            "example": 123,
            "title": "Id",
            "type": "integer"
          },
          "part_id": {
            "description": "ID of the associated part",
            "example": 456,
            "title": "Part Id",
            "type": "integer"
          },
          "s3_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "S3 storage key for the file",
            "example": "parts/456/attachments/abc123.pdf",
            "title": "S3 Key"
          },
          "title": {
            "description": "Title or description of the attachment",
            "example": "Datasheet - OMRON G5Q-1A4",
            "title": "Title",
            "type": "string"
          },
          "updated_at": {
            "description": "Timestamp when the attachment was last modified",
            "example": "2024-01-15T14:45:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Original URL (for URL attachments)",
            "example": "https://www.omron.com/products/G5Q-1A4",
            "title": "Url"
          }
        },
        "required": [
          "id",
          "part_id",
          "attachment_type",
          "title",
          "s3_key",
          "url",
          "filename",
          "content_type",
          "file_size",
          "created_at",
          "updated_at",
          "has_preview"
        ],
        "title": "PartAttachmentResponseSchema",
        "type": "object"
      },
      "PartResponseSchema.1a46b79.SellerListSchema": {
        "description": "Lightweight schema for seller dropdowns and listings.",
        "properties": {
          "id": {
            "description": "Unique seller ID",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Seller name",
            "example": "DigiKey",
            "title": "Name",
            "type": "string"
          },
          "website": {
            "description": "Seller website URL",
            "example": "https://www.digikey.com",
            "title": "Website",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "website"
        ],
        "title": "SellerListSchema",
        "type": "object"
      },
      "PartResponseSchema.1a46b79.TypeResponseSchema": {
        "description": "Schema for type details.",
        "properties": {
          "created_at": {
            "description": "Timestamp when the type was created",
            "example": "2024-01-15T10:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the type",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Name of the part type/category",
            "example": "Relay",
            "title": "Name",
            "type": "string"
          },
          "updated_at": {
            "description": "Timestamp when the type was last modified",
            "example": "2024-01-15T14:45:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "created_at",
          "updated_at"
        ],
        "title": "TypeResponseSchema",
        "type": "object"
      },
      "PartShoppingListMembershipCreateSchema.d085feb": {
        "description": "Schema for adding a part to a Concept shopping list from the part view.",
        "properties": {
          "needed": {
            "description": "Quantity of the part needed for the project",
            "example": 2,
            "minimum": 1,
            "title": "Needed",
            "type": "integer"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Optional note explaining the request",
            "example": "Use green LEDs if available",
            "title": "Note"
          },
          "seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Optional seller override for this line",
            "example": 4,
            "title": "Seller Id"
          },
          "shopping_list_id": {
            "description": "Identifier of the Concept shopping list to target",
            "example": 3,
            "title": "Shopping List Id",
            "type": "integer"
          }
        },
        "required": [
          "shopping_list_id",
          "needed"
        ],
        "title": "PartShoppingListMembershipCreateSchema",
        "type": "object"
      },
      "PartShoppingListMembershipQueryRequestSchema.d085feb": {
        "description": "Schema for querying shopping list memberships for multiple parts.",
        "properties": {
          "include_done": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "description": "Include DONE list and line statuses when true",
            "title": "Include Done"
          },
          "part_keys": {
            "description": "Ordered collection of part keys to resolve",
            "example": [
              "ABCD",
              "EFGH"
            ],
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "title": "Part Keys",
            "type": "array"
          }
        },
        "required": [
          "part_keys"
        ],
        "title": "PartShoppingListMembershipQueryRequestSchema",
        "type": "object"
      },
      "PartShoppingListMembershipQueryResponseSchema.d085feb": {
        "description": "Bulk response schema for shopping list membership lookups.",
        "properties": {
          "memberships": {
            "description": "Memberships grouped by requested part key order",
            "items": {
              "$ref": "#/components/schemas/PartShoppingListMembershipQueryResponseSchema.d085feb.PartShoppingListMembershipQueryItemSchema"
            },
            "title": "Memberships",
            "type": "array"
          }
        },
        "title": "PartShoppingListMembershipQueryResponseSchema",
        "type": "object"
      },
      "PartShoppingListMembershipQueryResponseSchema.d085feb.PartShoppingListMembershipQueryItemSchema": {
        "description": "Schema encapsulating memberships for a single part within a bulk response.",
        "properties": {
          "memberships": {
            "description": "Memberships associated with the part key",
            "items": {
              "$ref": "#/components/schemas/PartShoppingListMembershipQueryResponseSchema.d085feb.PartShoppingListMembershipSchema"
            },
            "title": "Memberships",
            "type": "array"
          },
          "part_key": {
            "description": "Requested part key",
            "example": "ABCD",
            "title": "Part Key",
            "type": "string"
          }
        },
        "required": [
          "part_key"
        ],
        "title": "PartShoppingListMembershipQueryItemSchema",
        "type": "object"
      },
      "PartShoppingListMembershipQueryResponseSchema.d085feb.PartShoppingListMembershipSchema": {
        "description": "Schema describing an active shopping list membership for a part.",
        "properties": {
          "line_id": {
            "description": "Identifier of the shopping list line",
            "example": 17,
            "title": "Line Id",
            "type": "integer"
          },
          "line_status": {
            "$ref": "#/components/schemas/PartShoppingListMembershipQueryResponseSchema.d085feb.ShoppingListLineStatus",
            "description": "Workflow status of the shopping list line",
            "example": "new"
          },
          "needed": {
            "description": "Quantity required on the shopping list",
            "example": 5,
            "title": "Needed",
            "type": "integer"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Optional note attached to the shopping list line",
            "example": "Grab extras if on sale",
            "title": "Note"
          },
          "ordered": {
            "description": "Quantity that has been ordered",
            "example": 0,
            "title": "Ordered",
            "type": "integer"
          },
          "received": {
            "description": "Quantity received so far",
            "example": 0,
            "title": "Received",
            "type": "integer"
          },
          "seller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PartShoppingListMembershipQueryResponseSchema.d085feb.SellerListSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Seller override or default seller context for the line"
          },
          "shopping_list_id": {
            "description": "Identifier of the shopping list containing the part",
            "example": 3,
            "title": "Shopping List Id",
            "type": "integer"
          },
          "shopping_list_name": {
            "description": "Name of the shopping list",
            "example": "Workbench Restock",
            "title": "Shopping List Name",
            "type": "string"
          },
          "shopping_list_status": {
            "$ref": "#/components/schemas/PartShoppingListMembershipQueryResponseSchema.d085feb.ShoppingListStatus",
            "description": "Workflow status of the parent shopping list",
            "example": "concept"
          }
        },
        "required": [
          "shopping_list_id",
          "shopping_list_name",
          "shopping_list_status",
          "line_id",
          "line_status",
          "needed",
          "ordered",
          "received"
        ],
        "title": "PartShoppingListMembershipSchema",
        "type": "object"
      },
      "PartShoppingListMembershipQueryResponseSchema.d085feb.SellerListSchema": {
        "description": "Lightweight schema for seller dropdowns and listings.",
        "properties": {
          "id": {
            "description": "Unique seller ID",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Seller name",
            "example": "DigiKey",
            "title": "Name",
            "type": "string"
          },
          "website": {
            "description": "Seller website URL",
            "example": "https://www.digikey.com",
            "title": "Website",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "website"
        ],
        "title": "SellerListSchema",
        "type": "object"
      },
      "PartShoppingListMembershipQueryResponseSchema.d085feb.ShoppingListLineStatus": {
        "description": "Lifecycle states for an individual shopping list line.",
        "enum": [
          "new",
          "ordered",
          "done"
        ],
        "title": "ShoppingListLineStatus",
        "type": "string"
      },
      "PartShoppingListMembershipQueryResponseSchema.d085feb.ShoppingListStatus": {
        "description": "Possible lifecycle states for a shopping list.",
        "enum": [
          "concept",
          "ready",
          "done"
        ],
        "title": "ShoppingListStatus",
        "type": "string"
      },
      "PartShoppingListMembershipSchema.d085feb": {
        "description": "Schema describing an active shopping list membership for a part.",
        "properties": {
          "line_id": {
            "description": "Identifier of the shopping list line",
            "example": 17,
            "title": "Line Id",
            "type": "integer"
          },
          "line_status": {
            "$ref": "#/components/schemas/PartShoppingListMembershipSchema.d085feb.ShoppingListLineStatus",
            "description": "Workflow status of the shopping list line",
            "example": "new"
          },
          "needed": {
            "description": "Quantity required on the shopping list",
            "example": 5,
            "title": "Needed",
            "type": "integer"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Optional note attached to the shopping list line",
            "example": "Grab extras if on sale",
            "title": "Note"
          },
          "ordered": {
            "description": "Quantity that has been ordered",
            "example": 0,
            "title": "Ordered",
            "type": "integer"
          },
          "received": {
            "description": "Quantity received so far",
            "example": 0,
            "title": "Received",
            "type": "integer"
          },
          "seller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PartShoppingListMembershipSchema.d085feb.SellerListSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Seller override or default seller context for the line"
          },
          "shopping_list_id": {
            "description": "Identifier of the shopping list containing the part",
            "example": 3,
            "title": "Shopping List Id",
            "type": "integer"
          },
          "shopping_list_name": {
            "description": "Name of the shopping list",
            "example": "Workbench Restock",
            "title": "Shopping List Name",
            "type": "string"
          },
          "shopping_list_status": {
            "$ref": "#/components/schemas/PartShoppingListMembershipSchema.d085feb.ShoppingListStatus",
            "description": "Workflow status of the parent shopping list",
            "example": "concept"
          }
        },
        "required": [
          "shopping_list_id",
          "shopping_list_name",
          "shopping_list_status",
          "line_id",
          "line_status",
          "needed",
          "ordered",
          "received"
        ],
        "title": "PartShoppingListMembershipSchema",
        "type": "object"
      },
      "PartShoppingListMembershipSchema.d085feb.SellerListSchema": {
        "description": "Lightweight schema for seller dropdowns and listings.",
        "properties": {
          "id": {
            "description": "Unique seller ID",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Seller name",
            "example": "DigiKey",
            "title": "Name",
            "type": "string"
          },
          "website": {
            "description": "Seller website URL",
            "example": "https://www.digikey.com",
            "title": "Website",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "website"
        ],
        "title": "SellerListSchema",
        "type": "object"
      },
      "PartShoppingListMembershipSchema.d085feb.ShoppingListLineStatus": {
        "description": "Lifecycle states for an individual shopping list line.",
        "enum": [
          "new",
          "ordered",
          "done"
        ],
        "title": "ShoppingListLineStatus",
        "type": "string"
      },
      "PartShoppingListMembershipSchema.d085feb.ShoppingListStatus": {
        "description": "Possible lifecycle states for a shopping list.",
        "enum": [
          "concept",
          "ready",
          "done"
        ],
        "title": "ShoppingListStatus",
        "type": "string"
      },
      "PartShoppingListMembershipSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/PartShoppingListMembershipSchemaList.a9993e3.PartShoppingListMembershipSchema"
        },
        "title": "PartShoppingListMembershipSchemaList",
        "type": "array"
      },
      "PartShoppingListMembershipSchemaList.a9993e3.PartShoppingListMembershipSchema": {
        "description": "Schema describing an active shopping list membership for a part.",
        "properties": {
          "line_id": {
            "description": "Identifier of the shopping list line",
            "example": 17,
            "title": "Line Id",
            "type": "integer"
          },
          "line_status": {
            "$ref": "#/components/schemas/PartShoppingListMembershipSchemaList.a9993e3.ShoppingListLineStatus",
            "description": "Workflow status of the shopping list line",
            "example": "new"
          },
          "needed": {
            "description": "Quantity required on the shopping list",
            "example": 5,
            "title": "Needed",
            "type": "integer"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Optional note attached to the shopping list line",
            "example": "Grab extras if on sale",
            "title": "Note"
          },
          "ordered": {
            "description": "Quantity that has been ordered",
            "example": 0,
            "title": "Ordered",
            "type": "integer"
          },
          "received": {
            "description": "Quantity received so far",
            "example": 0,
            "title": "Received",
            "type": "integer"
          },
          "seller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PartShoppingListMembershipSchemaList.a9993e3.SellerListSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Seller override or default seller context for the line"
          },
          "shopping_list_id": {
            "description": "Identifier of the shopping list containing the part",
            "example": 3,
            "title": "Shopping List Id",
            "type": "integer"
          },
          "shopping_list_name": {
            "description": "Name of the shopping list",
            "example": "Workbench Restock",
            "title": "Shopping List Name",
            "type": "string"
          },
          "shopping_list_status": {
            "$ref": "#/components/schemas/PartShoppingListMembershipSchemaList.a9993e3.ShoppingListStatus",
            "description": "Workflow status of the parent shopping list",
            "example": "concept"
          }
        },
        "required": [
          "shopping_list_id",
          "shopping_list_name",
          "shopping_list_status",
          "line_id",
          "line_status",
          "needed",
          "ordered",
          "received"
        ],
        "title": "PartShoppingListMembershipSchema",
        "type": "object"
      },
      "PartShoppingListMembershipSchemaList.a9993e3.SellerListSchema": {
        "description": "Lightweight schema for seller dropdowns and listings.",
        "properties": {
          "id": {
            "description": "Unique seller ID",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Seller name",
            "example": "DigiKey",
            "title": "Name",
            "type": "string"
          },
          "website": {
            "description": "Seller website URL",
            "example": "https://www.digikey.com",
            "title": "Website",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "website"
        ],
        "title": "SellerListSchema",
        "type": "object"
      },
      "PartShoppingListMembershipSchemaList.a9993e3.ShoppingListLineStatus": {
        "description": "Lifecycle states for an individual shopping list line.",
        "enum": [
          "new",
          "ordered",
          "done"
        ],
        "title": "ShoppingListLineStatus",
        "type": "string"
      },
      "PartShoppingListMembershipSchemaList.a9993e3.ShoppingListStatus": {
        "description": "Possible lifecycle states for a shopping list.",
        "enum": [
          "concept",
          "ready",
          "done"
        ],
        "title": "ShoppingListStatus",
        "type": "string"
      },
      "PartUpdateSchema.1a46b79": {
        "description": "Schema for updating an existing part.",
        "properties": {
          "description": {
            "anyOf": [
              {
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated description",
            "example": "12V SPDT automotive relay with 40A contacts",
            "title": "Description"
          },
          "dimensions": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated physical dimensions",
            "example": "10.3x7.5mm",
            "title": "Dimensions"
          },
          "input_voltage": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated input voltage range/specification",
            "example": "3-5V DC",
            "title": "Input Voltage"
          },
          "manufacturer": {
            "anyOf": [
              {
                "maxLength": 255,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated manufacturer company name",
            "example": "Espressif Systems",
            "title": "Manufacturer"
          },
          "manufacturer_code": {
            "anyOf": [
              {
                "maxLength": 255,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated manufacturer's part number",
            "example": "OMRON G5Q-1A4-DC12",
            "title": "Manufacturer Code"
          },
          "mounting_type": {
            "anyOf": [
              {
                "maxLength": 50,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated mounting type",
            "example": "Surface Mount",
            "title": "Mounting Type"
          },
          "output_voltage": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated output voltage range/specification",
            "example": "3.3V",
            "title": "Output Voltage"
          },
          "package": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated physical package type",
            "example": "SOIC-16",
            "title": "Package"
          },
          "pin_count": {
            "anyOf": [
              {
                "exclusiveMinimum": 0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated number of pins/connections",
            "example": 16,
            "title": "Pin Count"
          },
          "pin_pitch": {
            "anyOf": [
              {
                "maxLength": 50,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated component pin pitch/spacing",
            "example": "1.27mm",
            "title": "Pin Pitch"
          },
          "product_page": {
            "anyOf": [
              {
                "maxLength": 500,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated manufacturer's product page URL",
            "example": "https://www.espressif.com/en/products/modules/esp32",
            "title": "Product Page"
          },
          "seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated seller ID",
            "example": 2,
            "title": "Seller Id"
          },
          "seller_link": {
            "anyOf": [
              {
                "maxLength": 500,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated product page URL",
            "example": "https://www.mouser.com/ProductDetail/G5Q-1A4",
            "title": "Seller Link"
          },
          "series": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated component series",
            "example": "STM32F4",
            "title": "Series"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated tags",
            "example": [
              "12V",
              "SPDT",
              "automotive",
              "waterproof"
            ],
            "title": "Tags"
          },
          "type_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated part type/category ID",
            "example": 2,
            "title": "Type Id"
          },
          "voltage_rating": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated operating or rated voltage",
            "example": "5V",
            "title": "Voltage Rating"
          }
        },
        "title": "PartUpdateSchema",
        "type": "object"
      },
      "PartWithTotalAndLocationsSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/PartWithTotalAndLocationsSchemaList.a9993e3.PartWithTotalAndLocationsSchema"
        },
        "title": "PartWithTotalAndLocationsSchemaList",
        "type": "array"
      },
      "PartWithTotalAndLocationsSchemaList.a9993e3.PartLocationListSchema": {
        "description": "Schema for simplified location data in part responses.",
        "properties": {
          "box_no": {
            "description": "Box number",
            "example": 7,
            "title": "Box No",
            "type": "integer"
          },
          "loc_no": {
            "description": "Location number within box",
            "example": 3,
            "title": "Loc No",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity at this location",
            "example": 25,
            "title": "Qty",
            "type": "integer"
          }
        },
        "required": [
          "box_no",
          "loc_no",
          "qty"
        ],
        "title": "PartLocationListSchema",
        "type": "object"
      },
      "PartWithTotalAndLocationsSchemaList.a9993e3.PartWithTotalAndLocationsSchema": {
        "description": "Schema for part with calculated total quantity and location details.",
        "properties": {
          "created_at": {
            "description": "Timestamp when the part was created",
            "example": "2024-01-15T10:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "description": {
            "description": "Free text description",
            "example": "12V SPDT relay with 40A contacts",
            "title": "Description",
            "type": "string"
          },
          "dimensions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Physical dimensions",
            "example": "20x15x5mm",
            "title": "Dimensions"
          },
          "has_cover_attachment": {
            "description": "True when the part has a cover attachment defined.",
            "example": true,
            "title": "Has Cover Attachment",
            "type": "boolean"
          },
          "input_voltage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Input voltage range/specification",
            "example": "5-12V DC",
            "title": "Input Voltage"
          },
          "key": {
            "description": "4-character unique part identifier",
            "example": "BZQP",
            "title": "Key",
            "type": "string"
          },
          "locations": {
            "description": "Location details with quantities",
            "example": [
              {
                "box_no": 7,
                "loc_no": 3,
                "qty": 25
              },
              {
                "box_no": 8,
                "loc_no": 12,
                "qty": 50
              }
            ],
            "items": {
              "$ref": "#/components/schemas/PartWithTotalAndLocationsSchemaList.a9993e3.PartLocationListSchema"
            },
            "title": "Locations",
            "type": "array"
          },
          "manufacturer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Manufacturer company name",
            "example": "Texas Instruments",
            "title": "Manufacturer"
          },
          "manufacturer_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Manufacturer's part number",
            "example": "OMRON G5Q-1A4",
            "title": "Manufacturer Code"
          },
          "mounting_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Physical mounting type",
            "example": "Through-hole",
            "title": "Mounting Type"
          },
          "output_voltage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Output voltage range/specification",
            "example": "3.3V",
            "title": "Output Voltage"
          },
          "package": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Physical package type",
            "example": "DIP-8",
            "title": "Package"
          },
          "pin_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Number of pins/connections",
            "example": 8,
            "title": "Pin Count"
          },
          "pin_pitch": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Component pin pitch/spacing",
            "example": "2.54mm",
            "title": "Pin Pitch"
          },
          "seller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PartWithTotalAndLocationsSchemaList.a9993e3.SellerListSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Seller/vendor details"
          },
          "seller_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Product page URL at seller",
            "example": "https://www.digikey.com/product-detail/...",
            "title": "Seller Link"
          },
          "series": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Component series identification",
            "example": "74HC",
            "title": "Series"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "Tags for categorization",
            "example": [
              "12V",
              "SPDT",
              "automotive"
            ],
            "title": "Tags"
          },
          "total_quantity": {
            "description": "Total quantity across all locations",
            "example": 150,
            "title": "Total Quantity",
            "type": "integer"
          },
          "type_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Part type/category ID",
            "example": 1,
            "title": "Type Id"
          },
          "updated_at": {
            "description": "Timestamp when the part was last modified",
            "example": "2024-01-15T14:45:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "voltage_rating": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Operating or rated voltage",
            "example": "3.3V",
            "title": "Voltage Rating"
          }
        },
        "required": [
          "key",
          "manufacturer_code",
          "description",
          "type_id",
          "tags",
          "has_cover_attachment",
          "created_at",
          "updated_at",
          "total_quantity",
          "locations"
        ],
        "title": "PartWithTotalAndLocationsSchema",
        "type": "object"
      },
      "PartWithTotalAndLocationsSchemaList.a9993e3.SellerListSchema": {
        "description": "Lightweight schema for seller dropdowns and listings.",
        "properties": {
          "id": {
            "description": "Unique seller ID",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Seller name",
            "example": "DigiKey",
            "title": "Name",
            "type": "string"
          },
          "website": {
            "description": "Seller website URL",
            "example": "https://www.digikey.com",
            "title": "Website",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "website"
        ],
        "title": "SellerListSchema",
        "type": "object"
      },
      "PartWithTotalSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/PartWithTotalSchemaList.a9993e3.PartWithTotalSchema"
        },
        "title": "PartWithTotalSchemaList",
        "type": "array"
      },
      "PartWithTotalSchemaList.a9993e3.PartWithTotalSchema": {
        "description": "Schema for part with calculated total quantity.",
        "properties": {
          "created_at": {
            "description": "Timestamp when the part was created",
            "example": "2024-01-15T10:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "description": {
            "description": "Free text description",
            "example": "12V SPDT relay with 40A contacts",
            "title": "Description",
            "type": "string"
          },
          "dimensions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Physical dimensions",
            "example": "20x15x5mm",
            "title": "Dimensions"
          },
          "has_cover_attachment": {
            "description": "True when the part has a cover attachment defined.",
            "example": true,
            "title": "Has Cover Attachment",
            "type": "boolean"
          },
          "input_voltage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Input voltage range/specification",
            "example": "5-12V DC",
            "title": "Input Voltage"
          },
          "key": {
            "description": "4-character unique part identifier",
            "example": "BZQP",
            "title": "Key",
            "type": "string"
          },
          "manufacturer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Manufacturer company name",
            "example": "Texas Instruments",
            "title": "Manufacturer"
          },
          "manufacturer_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Manufacturer's part number",
            "example": "OMRON G5Q-1A4",
            "title": "Manufacturer Code"
          },
          "mounting_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Physical mounting type",
            "example": "Through-hole",
            "title": "Mounting Type"
          },
          "output_voltage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Output voltage range/specification",
            "example": "3.3V",
            "title": "Output Voltage"
          },
          "package": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Physical package type",
            "example": "DIP-8",
            "title": "Package"
          },
          "pin_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Number of pins/connections",
            "example": 8,
            "title": "Pin Count"
          },
          "pin_pitch": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Component pin pitch/spacing",
            "example": "2.54mm",
            "title": "Pin Pitch"
          },
          "seller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PartWithTotalSchemaList.a9993e3.SellerListSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Seller/vendor details"
          },
          "seller_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Product page URL at seller",
            "example": "https://www.digikey.com/product-detail/...",
            "title": "Seller Link"
          },
          "series": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Component series identification",
            "example": "74HC",
            "title": "Series"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "Tags for categorization",
            "example": [
              "12V",
              "SPDT",
              "automotive"
            ],
            "title": "Tags"
          },
          "total_quantity": {
            "description": "Total quantity across all locations",
            "example": 150,
            "title": "Total Quantity",
            "type": "integer"
          },
          "type_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Part type/category ID",
            "example": 1,
            "title": "Type Id"
          },
          "updated_at": {
            "description": "Timestamp when the part was last modified",
            "example": "2024-01-15T14:45:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "voltage_rating": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Operating or rated voltage",
            "example": "3.3V",
            "title": "Voltage Rating"
          }
        },
        "required": [
          "key",
          "manufacturer_code",
          "description",
          "type_id",
          "tags",
          "has_cover_attachment",
          "created_at",
          "updated_at",
          "total_quantity"
        ],
        "title": "PartWithTotalSchema",
        "type": "object"
      },
      "PartWithTotalSchemaList.a9993e3.SellerListSchema": {
        "description": "Lightweight schema for seller dropdowns and listings.",
        "properties": {
          "id": {
            "description": "Unique seller ID",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Seller name",
            "example": "DigiKey",
            "title": "Name",
            "type": "string"
          },
          "website": {
            "description": "Seller website URL",
            "example": "https://www.digikey.com",
            "title": "Website",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "website"
        ],
        "title": "SellerListSchema",
        "type": "object"
      },
      "QuantityHistoryResponseSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/QuantityHistoryResponseSchemaList.a9993e3.QuantityHistoryResponseSchema"
        },
        "title": "QuantityHistoryResponseSchemaList",
        "type": "array"
      },
      "QuantityHistoryResponseSchemaList.a9993e3.QuantityHistoryResponseSchema": {
        "description": "Schema for quantity history entries.",
        "properties": {
          "delta_qty": {
            "description": "Quantity change (positive for additions, negative for removals)",
            "example": -5,
            "title": "Delta Qty",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the history entry",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "location_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Location reference where change occurred",
            "example": "7-3",
            "title": "Location Reference"
          },
          "timestamp": {
            "description": "When the quantity change occurred",
            "example": "2024-01-15T14:45:00Z",
            "format": "date-time",
            "title": "Timestamp",
            "type": "string"
          }
        },
        "required": [
          "id",
          "delta_qty",
          "location_reference",
          "timestamp"
        ],
        "title": "QuantityHistoryResponseSchema",
        "type": "object"
      },
      "RecentActivitySchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/RecentActivitySchemaList.a9993e3.RecentActivitySchema"
        },
        "title": "RecentActivitySchemaList",
        "type": "array"
      },
      "RecentActivitySchemaList.a9993e3.RecentActivitySchema": {
        "description": "Schema for recent activity item response.",
        "properties": {
          "delta_qty": {
            "description": "Quantity change (positive or negative)",
            "title": "Delta Qty",
            "type": "integer"
          },
          "location_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Location reference for the change",
            "title": "Location Reference"
          },
          "part_description": {
            "description": "Part description",
            "title": "Part Description",
            "type": "string"
          },
          "part_key": {
            "description": "4-character part ID",
            "maxLength": 4,
            "title": "Part Key",
            "type": "string"
          },
          "timestamp": {
            "description": "When the change occurred",
            "format": "date-time",
            "title": "Timestamp",
            "type": "string"
          }
        },
        "required": [
          "part_key",
          "part_description",
          "delta_qty",
          "timestamp"
        ],
        "title": "RecentActivitySchema",
        "type": "object"
      },
      "RemoveStockSchema.46800bd": {
        "description": "Schema for removing stock from a location.",
        "properties": {
          "box_no": {
            "description": "Box number where stock will be removed from",
            "example": 7,
            "title": "Box No",
            "type": "integer"
          },
          "loc_no": {
            "description": "Location number within the box",
            "example": 3,
            "title": "Loc No",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity to remove (must be positive)",
            "example": 5,
            "exclusiveMinimum": 0,
            "title": "Qty",
            "type": "integer"
          }
        },
        "required": [
          "box_no",
          "loc_no",
          "qty"
        ],
        "title": "RemoveStockSchema",
        "type": "object"
      },
      "SellerCreateSchema.ceefe26": {
        "description": "Schema for creating a new seller.",
        "properties": {
          "name": {
            "description": "Unique seller name",
            "example": "DigiKey",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "type": "string"
          },
          "website": {
            "description": "Seller website URL",
            "example": "https://www.digikey.com",
            "maxLength": 500,
            "minLength": 1,
            "title": "Website",
            "type": "string"
          }
        },
        "required": [
          "name",
          "website"
        ],
        "title": "SellerCreateSchema",
        "type": "object"
      },
      "SellerListSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/SellerListSchemaList.a9993e3.SellerListSchema"
        },
        "title": "SellerListSchemaList",
        "type": "array"
      },
      "SellerListSchemaList.a9993e3.SellerListSchema": {
        "description": "Lightweight schema for seller dropdowns and listings.",
        "properties": {
          "id": {
            "description": "Unique seller ID",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Seller name",
            "example": "DigiKey",
            "title": "Name",
            "type": "string"
          },
          "website": {
            "description": "Seller website URL",
            "example": "https://www.digikey.com",
            "title": "Website",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "website"
        ],
        "title": "SellerListSchema",
        "type": "object"
      },
      "SellerResponseSchema.ceefe26": {
        "description": "Schema for seller API responses.",
        "properties": {
          "created_at": {
            "description": "Timestamp when seller was created",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "id": {
            "description": "Unique seller ID",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Seller name",
            "example": "DigiKey",
            "title": "Name",
            "type": "string"
          },
          "updated_at": {
            "description": "Timestamp when seller was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "website": {
            "description": "Seller website URL",
            "example": "https://www.digikey.com",
            "title": "Website",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "website",
          "created_at",
          "updated_at"
        ],
        "title": "SellerResponseSchema",
        "type": "object"
      },
      "SellerUpdateSchema.ceefe26": {
        "description": "Schema for updating an existing seller.",
        "properties": {
          "name": {
            "anyOf": [
              {
                "maxLength": 255,
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Seller name",
            "example": "DigiKey",
            "title": "Name"
          },
          "website": {
            "anyOf": [
              {
                "maxLength": 500,
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Seller website URL",
            "example": "https://www.digikey.com",
            "title": "Website"
          }
        },
        "title": "SellerUpdateSchema",
        "type": "object"
      },
      "SetCoverAttachmentSchema.f950e1b": {
        "description": "Schema for setting part cover attachment.",
        "properties": {
          "attachment_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Attachment ID to set as cover, or null to clear",
            "example": 123,
            "title": "Attachment Id"
          }
        },
        "required": [
          "attachment_id"
        ],
        "title": "SetCoverAttachmentSchema",
        "type": "object"
      },
      "ShoppingListCreateSchema.46f0cf6": {
        "description": "Schema for creating a new shopping list.",
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Optional description of the list's purpose",
            "example": "Parts needed for the new eurorack module",
            "title": "Description"
          },
          "name": {
            "description": "Unique name for the shopping list",
            "example": "Spring Synth Build",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "ShoppingListCreateSchema",
        "type": "object"
      },
      "ShoppingListGroupOrderSchema.d9ccce0": {
        "description": "Request schema for marking a seller group as ordered.",
        "properties": {
          "lines": {
            "description": "Line-specific ordered quantities for the seller group",
            "items": {
              "$ref": "#/components/schemas/ShoppingListGroupOrderSchema.d9ccce0.ShoppingListGroupOrderLineSchema"
            },
            "title": "Lines",
            "type": "array"
          }
        },
        "required": [
          "lines"
        ],
        "title": "ShoppingListGroupOrderSchema",
        "type": "object"
      },
      "ShoppingListGroupOrderSchema.d9ccce0.ShoppingListGroupOrderLineSchema": {
        "description": "Schema representing a single line entry in a group order action.",
        "properties": {
          "line_id": {
            "description": "Identifier of the line to update",
            "example": 42,
            "title": "Line Id",
            "type": "integer"
          },
          "ordered_qty": {
            "anyOf": [
              {
                "minimum": 0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Quantity to set as ordered; defaults to current needed quantity",
            "example": 10,
            "title": "Ordered Qty"
          }
        },
        "required": [
          "line_id"
        ],
        "title": "ShoppingListGroupOrderLineSchema",
        "type": "object"
      },
      "ShoppingListLineCompleteSchema.d9ccce0": {
        "description": "Request schema for marking a line as completed without receiving more stock.",
        "properties": {
          "mismatch_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Explanation required when received quantity differs from ordered",
            "example": "Supplier discontinued remaining units",
            "title": "Mismatch Reason"
          }
        },
        "title": "ShoppingListLineCompleteSchema",
        "type": "object"
      },
      "ShoppingListLineCreateSchema.d9ccce0": {
        "description": "Schema for adding a part to a shopping list.",
        "properties": {
          "needed": {
            "description": "Quantity required for the build",
            "example": 4,
            "minimum": 1,
            "title": "Needed",
            "type": "integer"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Optional note about this line item",
            "example": "Prefer black solder mask variant",
            "title": "Note"
          },
          "part_id": {
            "description": "Identifier of the part to add",
            "example": 101,
            "title": "Part Id",
            "type": "integer"
          },
          "seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Optional seller override",
            "example": 3,
            "title": "Seller Id"
          }
        },
        "required": [
          "part_id",
          "needed"
        ],
        "title": "ShoppingListLineCreateSchema",
        "type": "object"
      },
      "ShoppingListLineOrderSchema.d9ccce0": {
        "description": "Schema for marking a line as ordered.",
        "properties": {
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Optional note update to accompany ordering",
            "example": "Combine with enclosure order",
            "title": "Comment"
          },
          "ordered_qty": {
            "anyOf": [
              {
                "minimum": 0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Quantity marked as ordered; defaults to needed when omitted",
            "example": 5,
            "title": "Ordered Qty"
          }
        },
        "title": "ShoppingListLineOrderSchema",
        "type": "object"
      },
      "ShoppingListLineReceiveSchema.d9ccce0": {
        "description": "Request schema for receiving stock against an ordered line.",
        "properties": {
          "allocations": {
            "description": "Breakdown of where received stock should be stored",
            "items": {
              "$ref": "#/components/schemas/ShoppingListLineReceiveSchema.d9ccce0.ShoppingListLineReceiveAllocationSchema"
            },
            "minItems": 1,
            "title": "Allocations",
            "type": "array"
          },
          "receive_qty": {
            "description": "Total quantity to receive in this operation",
            "example": 6,
            "minimum": 1,
            "title": "Receive Qty",
            "type": "integer"
          }
        },
        "required": [
          "receive_qty",
          "allocations"
        ],
        "title": "ShoppingListLineReceiveSchema",
        "type": "object"
      },
      "ShoppingListLineReceiveSchema.d9ccce0.ShoppingListLineReceiveAllocationSchema": {
        "description": "Schema describing a single location allocation for received stock.",
        "properties": {
          "box_no": {
            "description": "Box number where quantity should be stored",
            "example": 5,
            "minimum": 1,
            "title": "Box No",
            "type": "integer"
          },
          "loc_no": {
            "description": "Location number within the box",
            "example": 2,
            "minimum": 1,
            "title": "Loc No",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity to allocate to the location",
            "example": 4,
            "minimum": 1,
            "title": "Qty",
            "type": "integer"
          }
        },
        "required": [
          "box_no",
          "loc_no",
          "qty"
        ],
        "title": "ShoppingListLineReceiveAllocationSchema",
        "type": "object"
      },
      "ShoppingListLineResponseSchema.d9ccce0": {
        "description": "Detailed schema for shopping list line responses including related entities.",
        "properties": {
          "can_receive": {
            "description": "True when the line can accept stock receipt actions",
            "example": true,
            "title": "Can Receive",
            "type": "boolean"
          },
          "completed_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp when the line was completed",
            "title": "Completed At"
          },
          "completion_mismatch": {
            "description": "Flag indicating completion with quantity mismatch",
            "example": false,
            "title": "Completion Mismatch",
            "type": "boolean"
          },
          "completion_note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional note explaining completion mismatch",
            "example": "Vendor short-shipped two units",
            "title": "Completion Note"
          },
          "created_at": {
            "description": "Timestamp when the line was created",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "effective_seller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ShoppingListLineResponseSchema.d9ccce0.SellerListSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Seller entity used for Ready grouping"
          },
          "effective_seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller identifier used for grouping (override or part seller)",
            "example": 4,
            "title": "Effective Seller Id"
          },
          "has_quantity_mismatch": {
            "description": "True when ordered and received totals differ",
            "example": false,
            "title": "Has Quantity Mismatch",
            "type": "boolean"
          },
          "id": {
            "description": "Unique line identifier",
            "example": 42,
            "title": "Id",
            "type": "integer"
          },
          "is_orderable": {
            "description": "True when the line can be marked as ordered",
            "example": true,
            "title": "Is Orderable",
            "type": "boolean"
          },
          "is_revertible": {
            "description": "True when the line can revert from ordered back to new",
            "example": false,
            "title": "Is Revertible",
            "type": "boolean"
          },
          "needed": {
            "description": "Requested quantity",
            "example": 4,
            "title": "Needed",
            "type": "integer"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional notes for procurement",
            "example": "Optional color variant acceptable",
            "title": "Note"
          },
          "ordered": {
            "description": "Ordered quantity",
            "example": 0,
            "title": "Ordered",
            "type": "integer"
          },
          "part": {
            "$ref": "#/components/schemas/ShoppingListLineResponseSchema.d9ccce0.PartListSchema",
            "description": "Details about the requested part"
          },
          "part_id": {
            "description": "Part identifier on this line",
            "example": 101,
            "title": "Part Id",
            "type": "integer"
          },
          "part_locations": {
            "description": "Locations currently holding stock for the part",
            "items": {
              "$ref": "#/components/schemas/ShoppingListLineResponseSchema.d9ccce0.PartLocationInlineSchema"
            },
            "title": "Part Locations",
            "type": "array"
          },
          "received": {
            "description": "Received quantity",
            "example": 0,
            "title": "Received",
            "type": "integer"
          },
          "seller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ShoppingListLineResponseSchema.d9ccce0.SellerListSchema"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller override details if specified"
          },
          "seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller override identifier",
            "example": 3,
            "title": "Seller Id"
          },
          "shopping_list_id": {
            "description": "Parent shopping list identifier",
            "example": 9,
            "title": "Shopping List Id",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/ShoppingListLineResponseSchema.d9ccce0.ShoppingListLineStatus",
            "description": "Workflow status for this line",
            "example": "new"
          },
          "updated_at": {
            "description": "Timestamp when the line was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "shopping_list_id",
          "part_id",
          "seller_id",
          "needed",
          "ordered",
          "received",
          "status",
          "note",
          "created_at",
          "updated_at",
          "effective_seller_id",
          "can_receive",
          "completion_mismatch",
          "completion_note",
          "completed_at",
          "has_quantity_mismatch",
          "part",
          "seller",
          "is_orderable",
          "is_revertible"
        ],
        "title": "ShoppingListLineResponseSchema",
        "type": "object"
      },
      "ShoppingListLineResponseSchema.d9ccce0.PartListSchema": {
        "description": "Schema for lightweight part listings.",
        "properties": {
          "description": {
            "description": "Free text description",
            "example": "12V SPDT relay with 40A contacts",
            "title": "Description",
            "type": "string"
          },
          "key": {
            "description": "4-character unique part identifier",
            "example": "BZQP",
            "title": "Key",
            "type": "string"
          },
          "manufacturer_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Manufacturer's part number",
            "example": "OMRON G5Q-1A4",
            "title": "Manufacturer Code"
          }
        },
        "required": [
          "key",
          "manufacturer_code",
          "description"
        ],
        "title": "PartListSchema",
        "type": "object"
      },
      "ShoppingListLineResponseSchema.d9ccce0.PartLocationInlineSchema": {
        "description": "Inline schema for part location quantities.",
        "properties": {
          "box_no": {
            "description": "Box number where stock is stored",
            "example": 7,
            "title": "Box No",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the part location row",
            "example": 501,
            "title": "Id",
            "type": "integer"
          },
          "loc_no": {
            "description": "Location number within the box",
            "example": 3,
            "title": "Loc No",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity stored at this location",
            "example": 10,
            "title": "Qty",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "box_no",
          "loc_no",
          "qty"
        ],
        "title": "PartLocationInlineSchema",
        "type": "object"
      },
      "ShoppingListLineResponseSchema.d9ccce0.SellerListSchema": {
        "description": "Lightweight schema for seller dropdowns and listings.",
        "properties": {
          "id": {
            "description": "Unique seller ID",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Seller name",
            "example": "DigiKey",
            "title": "Name",
            "type": "string"
          },
          "website": {
            "description": "Seller website URL",
            "example": "https://www.digikey.com",
            "title": "Website",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "website"
        ],
        "title": "SellerListSchema",
        "type": "object"
      },
      "ShoppingListLineResponseSchema.d9ccce0.ShoppingListLineStatus": {
        "description": "Lifecycle states for an individual shopping list line.",
        "enum": [
          "new",
          "ordered",
          "done"
        ],
        "title": "ShoppingListLineStatus",
        "type": "string"
      },
      "ShoppingListLineResponseSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/ShoppingListLineResponseSchemaList.a9993e3.ShoppingListLineResponseSchema"
        },
        "title": "ShoppingListLineResponseSchemaList",
        "type": "array"
      },
      "ShoppingListLineResponseSchemaList.a9993e3.PartListSchema": {
        "description": "Schema for lightweight part listings.",
        "properties": {
          "description": {
            "description": "Free text description",
            "example": "12V SPDT relay with 40A contacts",
            "title": "Description",
            "type": "string"
          },
          "key": {
            "description": "4-character unique part identifier",
            "example": "BZQP",
            "title": "Key",
            "type": "string"
          },
          "manufacturer_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Manufacturer's part number",
            "example": "OMRON G5Q-1A4",
            "title": "Manufacturer Code"
          }
        },
        "required": [
          "key",
          "manufacturer_code",
          "description"
        ],
        "title": "PartListSchema",
        "type": "object"
      },
      "ShoppingListLineResponseSchemaList.a9993e3.PartLocationInlineSchema": {
        "description": "Inline schema for part location quantities.",
        "properties": {
          "box_no": {
            "description": "Box number where stock is stored",
            "example": 7,
            "title": "Box No",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the part location row",
            "example": 501,
            "title": "Id",
            "type": "integer"
          },
          "loc_no": {
            "description": "Location number within the box",
            "example": 3,
            "title": "Loc No",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity stored at this location",
            "example": 10,
            "title": "Qty",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "box_no",
          "loc_no",
          "qty"
        ],
        "title": "PartLocationInlineSchema",
        "type": "object"
      },
      "ShoppingListLineResponseSchemaList.a9993e3.SellerListSchema": {
        "description": "Lightweight schema for seller dropdowns and listings.",
        "properties": {
          "id": {
            "description": "Unique seller ID",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Seller name",
            "example": "DigiKey",
            "title": "Name",
            "type": "string"
          },
          "website": {
            "description": "Seller website URL",
            "example": "https://www.digikey.com",
            "title": "Website",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "website"
        ],
        "title": "SellerListSchema",
        "type": "object"
      },
      "ShoppingListLineResponseSchemaList.a9993e3.ShoppingListLineResponseSchema": {
        "description": "Detailed schema for shopping list line responses including related entities.",
        "properties": {
          "can_receive": {
            "description": "True when the line can accept stock receipt actions",
            "example": true,
            "title": "Can Receive",
            "type": "boolean"
          },
          "completed_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp when the line was completed",
            "title": "Completed At"
          },
          "completion_mismatch": {
            "description": "Flag indicating completion with quantity mismatch",
            "example": false,
            "title": "Completion Mismatch",
            "type": "boolean"
          },
          "completion_note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional note explaining completion mismatch",
            "example": "Vendor short-shipped two units",
            "title": "Completion Note"
          },
          "created_at": {
            "description": "Timestamp when the line was created",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "effective_seller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ShoppingListLineResponseSchemaList.a9993e3.SellerListSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Seller entity used for Ready grouping"
          },
          "effective_seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller identifier used for grouping (override or part seller)",
            "example": 4,
            "title": "Effective Seller Id"
          },
          "has_quantity_mismatch": {
            "description": "True when ordered and received totals differ",
            "example": false,
            "title": "Has Quantity Mismatch",
            "type": "boolean"
          },
          "id": {
            "description": "Unique line identifier",
            "example": 42,
            "title": "Id",
            "type": "integer"
          },
          "is_orderable": {
            "description": "True when the line can be marked as ordered",
            "example": true,
            "title": "Is Orderable",
            "type": "boolean"
          },
          "is_revertible": {
            "description": "True when the line can revert from ordered back to new",
            "example": false,
            "title": "Is Revertible",
            "type": "boolean"
          },
          "needed": {
            "description": "Requested quantity",
            "example": 4,
            "title": "Needed",
            "type": "integer"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional notes for procurement",
            "example": "Optional color variant acceptable",
            "title": "Note"
          },
          "ordered": {
            "description": "Ordered quantity",
            "example": 0,
            "title": "Ordered",
            "type": "integer"
          },
          "part": {
            "$ref": "#/components/schemas/ShoppingListLineResponseSchemaList.a9993e3.PartListSchema",
            "description": "Details about the requested part"
          },
          "part_id": {
            "description": "Part identifier on this line",
            "example": 101,
            "title": "Part Id",
            "type": "integer"
          },
          "part_locations": {
            "description": "Locations currently holding stock for the part",
            "items": {
              "$ref": "#/components/schemas/ShoppingListLineResponseSchemaList.a9993e3.PartLocationInlineSchema"
            },
            "title": "Part Locations",
            "type": "array"
          },
          "received": {
            "description": "Received quantity",
            "example": 0,
            "title": "Received",
            "type": "integer"
          },
          "seller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ShoppingListLineResponseSchemaList.a9993e3.SellerListSchema"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller override details if specified"
          },
          "seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller override identifier",
            "example": 3,
            "title": "Seller Id"
          },
          "shopping_list_id": {
            "description": "Parent shopping list identifier",
            "example": 9,
            "title": "Shopping List Id",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/ShoppingListLineResponseSchemaList.a9993e3.ShoppingListLineStatus",
            "description": "Workflow status for this line",
            "example": "new"
          },
          "updated_at": {
            "description": "Timestamp when the line was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "shopping_list_id",
          "part_id",
          "seller_id",
          "needed",
          "ordered",
          "received",
          "status",
          "note",
          "created_at",
          "updated_at",
          "effective_seller_id",
          "can_receive",
          "completion_mismatch",
          "completion_note",
          "completed_at",
          "has_quantity_mismatch",
          "part",
          "seller",
          "is_orderable",
          "is_revertible"
        ],
        "title": "ShoppingListLineResponseSchema",
        "type": "object"
      },
      "ShoppingListLineResponseSchemaList.a9993e3.ShoppingListLineStatus": {
        "description": "Lifecycle states for an individual shopping list line.",
        "enum": [
          "new",
          "ordered",
          "done"
        ],
        "title": "ShoppingListLineStatus",
        "type": "string"
      },
      "ShoppingListLineStatusUpdateSchema.d9ccce0": {
        "description": "Schema for updating the workflow status of a line.",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ShoppingListLineStatusUpdateSchema.d9ccce0.ShoppingListLineStatus",
            "description": "Target status for the line",
            "example": "new"
          }
        },
        "required": [
          "status"
        ],
        "title": "ShoppingListLineStatusUpdateSchema",
        "type": "object"
      },
      "ShoppingListLineStatusUpdateSchema.d9ccce0.ShoppingListLineStatus": {
        "description": "Lifecycle states for an individual shopping list line.",
        "enum": [
          "new",
          "ordered",
          "done"
        ],
        "title": "ShoppingListLineStatus",
        "type": "string"
      },
      "ShoppingListLineUpdateSchema.d9ccce0": {
        "description": "Schema for updating a shopping list line.",
        "properties": {
          "needed": {
            "anyOf": [
              {
                "minimum": 1,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated required quantity",
            "example": 6,
            "title": "Needed"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated note about this line item",
            "example": "Need ROHS compliant",
            "title": "Note"
          },
          "seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Optional seller override",
            "example": 5,
            "title": "Seller Id"
          }
        },
        "title": "ShoppingListLineUpdateSchema",
        "type": "object"
      },
      "ShoppingListLinesResponseSchema.46f0cf6": {
        "description": "Schema for returning only shopping list lines (used by list lines endpoint).",
        "properties": {
          "lines": {
            "description": "Collection of shopping list line items",
            "items": {
              "$ref": "#/components/schemas/ShoppingListLinesResponseSchema.46f0cf6.ShoppingListLineListSchema"
            },
            "title": "Lines",
            "type": "array"
          }
        },
        "required": [
          "lines"
        ],
        "title": "ShoppingListLinesResponseSchema",
        "type": "object"
      },
      "ShoppingListLinesResponseSchema.46f0cf6.ShoppingListLineListSchema": {
        "description": "Lightweight schema for listing shopping list lines.",
        "properties": {
          "can_receive": {
            "description": "True when the line can accept stock receipt actions",
            "example": true,
            "title": "Can Receive",
            "type": "boolean"
          },
          "completed_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp when the line was completed",
            "title": "Completed At"
          },
          "completion_mismatch": {
            "description": "Flag indicating completion with quantity mismatch",
            "example": false,
            "title": "Completion Mismatch",
            "type": "boolean"
          },
          "completion_note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional note explaining completion mismatch",
            "example": "Vendor short-shipped two units",
            "title": "Completion Note"
          },
          "created_at": {
            "description": "Timestamp when the line was created",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "effective_seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller identifier used for grouping (override or part seller)",
            "example": 4,
            "title": "Effective Seller Id"
          },
          "has_quantity_mismatch": {
            "description": "True when ordered and received totals differ",
            "example": false,
            "title": "Has Quantity Mismatch",
            "type": "boolean"
          },
          "id": {
            "description": "Unique line identifier",
            "example": 42,
            "title": "Id",
            "type": "integer"
          },
          "needed": {
            "description": "Requested quantity",
            "example": 4,
            "title": "Needed",
            "type": "integer"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional notes for procurement",
            "example": "Optional color variant acceptable",
            "title": "Note"
          },
          "ordered": {
            "description": "Ordered quantity",
            "example": 0,
            "title": "Ordered",
            "type": "integer"
          },
          "part_id": {
            "description": "Part identifier on this line",
            "example": 101,
            "title": "Part Id",
            "type": "integer"
          },
          "received": {
            "description": "Received quantity",
            "example": 0,
            "title": "Received",
            "type": "integer"
          },
          "seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller override identifier",
            "example": 3,
            "title": "Seller Id"
          },
          "shopping_list_id": {
            "description": "Parent shopping list identifier",
            "example": 9,
            "title": "Shopping List Id",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/ShoppingListLinesResponseSchema.46f0cf6.ShoppingListLineStatus",
            "description": "Workflow status for this line",
            "example": "new"
          },
          "updated_at": {
            "description": "Timestamp when the line was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "shopping_list_id",
          "part_id",
          "seller_id",
          "needed",
          "ordered",
          "received",
          "status",
          "note",
          "created_at",
          "updated_at",
          "effective_seller_id",
          "can_receive",
          "completion_mismatch",
          "completion_note",
          "completed_at",
          "has_quantity_mismatch"
        ],
        "title": "ShoppingListLineListSchema",
        "type": "object"
      },
      "ShoppingListLinesResponseSchema.46f0cf6.ShoppingListLineStatus": {
        "description": "Lifecycle states for an individual shopping list line.",
        "enum": [
          "new",
          "ordered",
          "done"
        ],
        "title": "ShoppingListLineStatus",
        "type": "string"
      },
      "ShoppingListListQuerySchema.46f0cf6": {
        "description": "Query parameters supported by the shopping list overview endpoint.",
        "properties": {
          "include_done": {
            "default": false,
            "description": "Include lists whose status is DONE when true",
            "example": false,
            "title": "Include Done",
            "type": "boolean"
          },
          "status": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Filter by one or more shopping list statuses",
            "example": [
              "concept",
              "ready"
            ],
            "title": "Status"
          }
        },
        "title": "ShoppingListListQuerySchema",
        "type": "object"
      },
      "ShoppingListListSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/ShoppingListListSchemaList.a9993e3.ShoppingListListSchema"
        },
        "title": "ShoppingListListSchemaList",
        "type": "array"
      },
      "ShoppingListListSchemaList.a9993e3.SellerListSchema": {
        "description": "Lightweight schema for seller dropdowns and listings.",
        "properties": {
          "id": {
            "description": "Unique seller ID",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Seller name",
            "example": "DigiKey",
            "title": "Name",
            "type": "string"
          },
          "website": {
            "description": "Seller website URL",
            "example": "https://www.digikey.com",
            "title": "Website",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "website"
        ],
        "title": "SellerListSchema",
        "type": "object"
      },
      "ShoppingListListSchemaList.a9993e3.ShoppingListLineCountsSchema": {
        "description": "Aggregated counts of shopping list lines by status.",
        "properties": {
          "done": {
            "description": "Number of lines marked DONE",
            "title": "Done",
            "type": "integer"
          },
          "new": {
            "description": "Number of lines in NEW status",
            "title": "New",
            "type": "integer"
          },
          "ordered": {
            "description": "Number of lines marked ORDERED",
            "title": "Ordered",
            "type": "integer"
          }
        },
        "required": [
          "new",
          "ordered",
          "done"
        ],
        "title": "ShoppingListLineCountsSchema",
        "type": "object"
      },
      "ShoppingListListSchemaList.a9993e3.ShoppingListListSchema": {
        "description": "Lightweight schema for shopping list listings.",
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional list description",
            "example": "Collect everything for the VCF section",
            "title": "Description"
          },
          "id": {
            "description": "Unique shopping list identifier",
            "example": 7,
            "title": "Id",
            "type": "integer"
          },
          "line_counts": {
            "$ref": "#/components/schemas/ShoppingListListSchemaList.a9993e3.ShoppingListLineCountsSchema",
            "description": "Line counts grouped by status for overview counters",
            "example": {
              "done": 2,
              "new": 3,
              "ordered": 1
            }
          },
          "name": {
            "description": "Shopping list name",
            "example": "Synth Voice Build",
            "title": "Name",
            "type": "string"
          },
          "seller_notes": {
            "description": "Seller-specific notes associated with the list",
            "items": {
              "$ref": "#/components/schemas/ShoppingListListSchemaList.a9993e3.ShoppingListSellerOrderNoteSchema"
            },
            "title": "Seller Notes",
            "type": "array"
          },
          "status": {
            "$ref": "#/components/schemas/ShoppingListListSchemaList.a9993e3.ShoppingListStatus",
            "description": "Workflow status",
            "example": "concept"
          },
          "updated_at": {
            "description": "Timestamp when the list was last updated",
            "example": "2024-04-10T15:30:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "status",
          "updated_at",
          "line_counts"
        ],
        "title": "ShoppingListListSchema",
        "type": "object"
      },
      "ShoppingListListSchemaList.a9993e3.ShoppingListSellerOrderNoteSchema": {
        "description": "Response schema for seller-specific order notes on a shopping list.",
        "properties": {
          "note": {
            "description": "Free-form per-seller order note",
            "example": "Bundle this order with enclosure purchase.",
            "title": "Note",
            "type": "string"
          },
          "seller": {
            "$ref": "#/components/schemas/ShoppingListListSchemaList.a9993e3.SellerListSchema",
            "description": "Seller metadata for display"
          },
          "seller_id": {
            "description": "Seller identifier the note applies to",
            "example": 4,
            "title": "Seller Id",
            "type": "integer"
          },
          "updated_at": {
            "description": "Timestamp when the note was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "seller_id",
          "seller",
          "note",
          "updated_at"
        ],
        "title": "ShoppingListSellerOrderNoteSchema",
        "type": "object"
      },
      "ShoppingListListSchemaList.a9993e3.ShoppingListStatus": {
        "description": "Possible lifecycle states for a shopping list.",
        "enum": [
          "concept",
          "ready",
          "done"
        ],
        "title": "ShoppingListStatus",
        "type": "string"
      },
      "ShoppingListResponseSchema.46f0cf6": {
        "description": "Detailed schema for shopping list responses including line items.",
        "properties": {
          "created_at": {
            "description": "Timestamp when the list was created",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional list description",
            "example": "Collect everything for the VCF section",
            "title": "Description"
          },
          "id": {
            "description": "Unique shopping list identifier",
            "example": 7,
            "title": "Id",
            "type": "integer"
          },
          "line_counts": {
            "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6.ShoppingListLineCountsSchema",
            "description": "Line counts grouped by status"
          },
          "lines": {
            "description": "Line items associated with this list",
            "items": {
              "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6.ShoppingListLineResponseSchema"
            },
            "title": "Lines",
            "type": "array"
          },
          "name": {
            "description": "Shopping list name",
            "example": "Synth Voice Build",
            "title": "Name",
            "type": "string"
          },
          "seller_groups": {
            "description": "Grouping of lines by seller for Ready planning",
            "items": {
              "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6.ShoppingListSellerGroupSchema"
            },
            "title": "Seller Groups",
            "type": "array"
          },
          "seller_notes": {
            "description": "Seller-specific notes for Ready view",
            "items": {
              "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6.ShoppingListSellerOrderNoteSchema"
            },
            "title": "Seller Notes",
            "type": "array"
          },
          "status": {
            "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6.ShoppingListStatus",
            "description": "Workflow status",
            "example": "ready"
          },
          "updated_at": {
            "description": "Timestamp when the list was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "status",
          "created_at",
          "updated_at",
          "line_counts",
          "lines"
        ],
        "title": "ShoppingListResponseSchema",
        "type": "object"
      },
      "ShoppingListResponseSchema.46f0cf6.PartListSchema": {
        "description": "Schema for lightweight part listings.",
        "properties": {
          "description": {
            "description": "Free text description",
            "example": "12V SPDT relay with 40A contacts",
            "title": "Description",
            "type": "string"
          },
          "key": {
            "description": "4-character unique part identifier",
            "example": "BZQP",
            "title": "Key",
            "type": "string"
          },
          "manufacturer_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Manufacturer's part number",
            "example": "OMRON G5Q-1A4",
            "title": "Manufacturer Code"
          }
        },
        "required": [
          "key",
          "manufacturer_code",
          "description"
        ],
        "title": "PartListSchema",
        "type": "object"
      },
      "ShoppingListResponseSchema.46f0cf6.PartLocationInlineSchema": {
        "description": "Inline schema for part location quantities.",
        "properties": {
          "box_no": {
            "description": "Box number where stock is stored",
            "example": 7,
            "title": "Box No",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the part location row",
            "example": 501,
            "title": "Id",
            "type": "integer"
          },
          "loc_no": {
            "description": "Location number within the box",
            "example": 3,
            "title": "Loc No",
            "type": "integer"
          },
          "qty": {
            "description": "Quantity stored at this location",
            "example": 10,
            "title": "Qty",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "box_no",
          "loc_no",
          "qty"
        ],
        "title": "PartLocationInlineSchema",
        "type": "object"
      },
      "ShoppingListResponseSchema.46f0cf6.SellerListSchema": {
        "description": "Lightweight schema for seller dropdowns and listings.",
        "properties": {
          "id": {
            "description": "Unique seller ID",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Seller name",
            "example": "DigiKey",
            "title": "Name",
            "type": "string"
          },
          "website": {
            "description": "Seller website URL",
            "example": "https://www.digikey.com",
            "title": "Website",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "website"
        ],
        "title": "SellerListSchema",
        "type": "object"
      },
      "ShoppingListResponseSchema.46f0cf6.ShoppingListLineCountsSchema": {
        "description": "Aggregated counts of shopping list lines by status.",
        "properties": {
          "done": {
            "description": "Number of lines marked DONE",
            "title": "Done",
            "type": "integer"
          },
          "new": {
            "description": "Number of lines in NEW status",
            "title": "New",
            "type": "integer"
          },
          "ordered": {
            "description": "Number of lines marked ORDERED",
            "title": "Ordered",
            "type": "integer"
          }
        },
        "required": [
          "new",
          "ordered",
          "done"
        ],
        "title": "ShoppingListLineCountsSchema",
        "type": "object"
      },
      "ShoppingListResponseSchema.46f0cf6.ShoppingListLineResponseSchema": {
        "description": "Detailed schema for shopping list line responses including related entities.",
        "properties": {
          "can_receive": {
            "description": "True when the line can accept stock receipt actions",
            "example": true,
            "title": "Can Receive",
            "type": "boolean"
          },
          "completed_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp when the line was completed",
            "title": "Completed At"
          },
          "completion_mismatch": {
            "description": "Flag indicating completion with quantity mismatch",
            "example": false,
            "title": "Completion Mismatch",
            "type": "boolean"
          },
          "completion_note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional note explaining completion mismatch",
            "example": "Vendor short-shipped two units",
            "title": "Completion Note"
          },
          "created_at": {
            "description": "Timestamp when the line was created",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "effective_seller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6.SellerListSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Seller entity used for Ready grouping"
          },
          "effective_seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller identifier used for grouping (override or part seller)",
            "example": 4,
            "title": "Effective Seller Id"
          },
          "has_quantity_mismatch": {
            "description": "True when ordered and received totals differ",
            "example": false,
            "title": "Has Quantity Mismatch",
            "type": "boolean"
          },
          "id": {
            "description": "Unique line identifier",
            "example": 42,
            "title": "Id",
            "type": "integer"
          },
          "is_orderable": {
            "description": "True when the line can be marked as ordered",
            "example": true,
            "title": "Is Orderable",
            "type": "boolean"
          },
          "is_revertible": {
            "description": "True when the line can revert from ordered back to new",
            "example": false,
            "title": "Is Revertible",
            "type": "boolean"
          },
          "needed": {
            "description": "Requested quantity",
            "example": 4,
            "title": "Needed",
            "type": "integer"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional notes for procurement",
            "example": "Optional color variant acceptable",
            "title": "Note"
          },
          "ordered": {
            "description": "Ordered quantity",
            "example": 0,
            "title": "Ordered",
            "type": "integer"
          },
          "part": {
            "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6.PartListSchema",
            "description": "Details about the requested part"
          },
          "part_id": {
            "description": "Part identifier on this line",
            "example": 101,
            "title": "Part Id",
            "type": "integer"
          },
          "part_locations": {
            "description": "Locations currently holding stock for the part",
            "items": {
              "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6.PartLocationInlineSchema"
            },
            "title": "Part Locations",
            "type": "array"
          },
          "received": {
            "description": "Received quantity",
            "example": 0,
            "title": "Received",
            "type": "integer"
          },
          "seller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6.SellerListSchema"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller override details if specified"
          },
          "seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller override identifier",
            "example": 3,
            "title": "Seller Id"
          },
          "shopping_list_id": {
            "description": "Parent shopping list identifier",
            "example": 9,
            "title": "Shopping List Id",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6.ShoppingListLineStatus",
            "description": "Workflow status for this line",
            "example": "new"
          },
          "updated_at": {
            "description": "Timestamp when the line was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "shopping_list_id",
          "part_id",
          "seller_id",
          "needed",
          "ordered",
          "received",
          "status",
          "note",
          "created_at",
          "updated_at",
          "effective_seller_id",
          "can_receive",
          "completion_mismatch",
          "completion_note",
          "completed_at",
          "has_quantity_mismatch",
          "part",
          "seller",
          "is_orderable",
          "is_revertible"
        ],
        "title": "ShoppingListLineResponseSchema",
        "type": "object"
      },
      "ShoppingListResponseSchema.46f0cf6.ShoppingListLineStatus": {
        "description": "Lifecycle states for an individual shopping list line.",
        "enum": [
          "new",
          "ordered",
          "done"
        ],
        "title": "ShoppingListLineStatus",
        "type": "string"
      },
      "ShoppingListResponseSchema.46f0cf6.ShoppingListSellerGroupSchema": {
        "description": "Schema representing seller-based grouping in Ready view.",
        "properties": {
          "group_key": {
            "description": "Identifier for the seller grouping (seller id or 'ungrouped')",
            "example": "seller-4",
            "title": "Group Key",
            "type": "string"
          },
          "lines": {
            "description": "Lines that belong to this grouping",
            "items": {
              "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6.ShoppingListLineResponseSchema"
            },
            "title": "Lines",
            "type": "array"
          },
          "order_note": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6.ShoppingListSellerOrderNoteSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Seller note if the group is associated with a seller"
          },
          "seller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6.SellerListSchema"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller metadata for the group when available"
          },
          "seller_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Seller identifier if group is seller-backed",
            "example": 4,
            "title": "Seller Id"
          },
          "totals": {
            "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6.ShoppingListSellerGroupTotalsSchema",
            "description": "Aggregated quantities for the group"
          }
        },
        "required": [
          "group_key",
          "seller_id",
          "seller",
          "lines",
          "totals"
        ],
        "title": "ShoppingListSellerGroupSchema",
        "type": "object"
      },
      "ShoppingListResponseSchema.46f0cf6.ShoppingListSellerGroupTotalsSchema": {
        "description": "Aggregated totals for a seller grouping.",
        "properties": {
          "needed": {
            "description": "Total needed quantity for the group",
            "example": 12,
            "title": "Needed",
            "type": "integer"
          },
          "ordered": {
            "description": "Total ordered quantity for the group",
            "example": 8,
            "title": "Ordered",
            "type": "integer"
          },
          "received": {
            "description": "Total received quantity for the group",
            "example": 0,
            "title": "Received",
            "type": "integer"
          }
        },
        "required": [
          "needed",
          "ordered",
          "received"
        ],
        "title": "ShoppingListSellerGroupTotalsSchema",
        "type": "object"
      },
      "ShoppingListResponseSchema.46f0cf6.ShoppingListSellerOrderNoteSchema": {
        "description": "Response schema for seller-specific order notes on a shopping list.",
        "properties": {
          "note": {
            "description": "Free-form per-seller order note",
            "example": "Bundle this order with enclosure purchase.",
            "title": "Note",
            "type": "string"
          },
          "seller": {
            "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6.SellerListSchema",
            "description": "Seller metadata for display"
          },
          "seller_id": {
            "description": "Seller identifier the note applies to",
            "example": 4,
            "title": "Seller Id",
            "type": "integer"
          },
          "updated_at": {
            "description": "Timestamp when the note was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "seller_id",
          "seller",
          "note",
          "updated_at"
        ],
        "title": "ShoppingListSellerOrderNoteSchema",
        "type": "object"
      },
      "ShoppingListResponseSchema.46f0cf6.ShoppingListStatus": {
        "description": "Possible lifecycle states for a shopping list.",
        "enum": [
          "concept",
          "ready",
          "done"
        ],
        "title": "ShoppingListStatus",
        "type": "string"
      },
      "ShoppingListSellerOrderNoteSchema.ceb40c1": {
        "description": "Response schema for seller-specific order notes on a shopping list.",
        "properties": {
          "note": {
            "description": "Free-form per-seller order note",
            "example": "Bundle this order with enclosure purchase.",
            "title": "Note",
            "type": "string"
          },
          "seller": {
            "$ref": "#/components/schemas/ShoppingListSellerOrderNoteSchema.ceb40c1.SellerListSchema",
            "description": "Seller metadata for display"
          },
          "seller_id": {
            "description": "Seller identifier the note applies to",
            "example": 4,
            "title": "Seller Id",
            "type": "integer"
          },
          "updated_at": {
            "description": "Timestamp when the note was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "seller_id",
          "seller",
          "note",
          "updated_at"
        ],
        "title": "ShoppingListSellerOrderNoteSchema",
        "type": "object"
      },
      "ShoppingListSellerOrderNoteSchema.ceb40c1.SellerListSchema": {
        "description": "Lightweight schema for seller dropdowns and listings.",
        "properties": {
          "id": {
            "description": "Unique seller ID",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Seller name",
            "example": "DigiKey",
            "title": "Name",
            "type": "string"
          },
          "website": {
            "description": "Seller website URL",
            "example": "https://www.digikey.com",
            "title": "Website",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "website"
        ],
        "title": "SellerListSchema",
        "type": "object"
      },
      "ShoppingListSellerOrderNoteUpdateSchema.ceb40c1": {
        "description": "Request schema for updating or clearing a seller order note.",
        "properties": {
          "note": {
            "description": "Updated note content; send empty string to clear",
            "example": "Use expedited shipping if in stock.",
            "title": "Note",
            "type": "string"
          }
        },
        "required": [
          "note"
        ],
        "title": "ShoppingListSellerOrderNoteUpdateSchema",
        "type": "object"
      },
      "ShoppingListStatusUpdateSchema.46f0cf6": {
        "description": "Schema for updating the workflow status of a list.",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ShoppingListStatusUpdateSchema.46f0cf6.ShoppingListStatus",
            "description": "New status for the shopping list",
            "example": "ready"
          }
        },
        "required": [
          "status"
        ],
        "title": "ShoppingListStatusUpdateSchema",
        "type": "object"
      },
      "ShoppingListStatusUpdateSchema.46f0cf6.ShoppingListStatus": {
        "description": "Possible lifecycle states for a shopping list.",
        "enum": [
          "concept",
          "ready",
          "done"
        ],
        "title": "ShoppingListStatus",
        "type": "string"
      },
      "ShoppingListUpdateSchema.46f0cf6": {
        "description": "Schema for updating list metadata.",
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated description",
            "example": "Shopping list for the multi-effects pedal",
            "title": "Description"
          },
          "name": {
            "anyOf": [
              {
                "maxLength": 255,
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Updated name for the list",
            "example": "Synthesizer BOM",
            "title": "Name"
          }
        },
        "title": "ShoppingListUpdateSchema",
        "type": "object"
      },
      "StorageSummarySchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/StorageSummarySchemaList.a9993e3.StorageSummarySchema"
        },
        "title": "StorageSummarySchemaList",
        "type": "array"
      },
      "StorageSummarySchemaList.a9993e3.StorageSummarySchema": {
        "description": "Schema for storage box utilization response.",
        "properties": {
          "box_no": {
            "description": "Box number",
            "exclusiveMinimum": 0,
            "title": "Box No",
            "type": "integer"
          },
          "description": {
            "description": "Box description",
            "title": "Description",
            "type": "string"
          },
          "occupied_locations": {
            "description": "Number of locations currently in use",
            "minimum": 0,
            "title": "Occupied Locations",
            "type": "integer"
          },
          "total_locations": {
            "description": "Total capacity of the box",
            "exclusiveMinimum": 0,
            "title": "Total Locations",
            "type": "integer"
          },
          "usage_percentage": {
            "description": "Percentage of box capacity used",
            "maximum": 100,
            "minimum": 0,
            "title": "Usage Percentage",
            "type": "number"
          }
        },
        "required": [
          "box_no",
          "description",
          "total_locations",
          "occupied_locations",
          "usage_percentage"
        ],
        "title": "StorageSummarySchema",
        "type": "object"
      },
      "TaskStartResponse.70db092": {
        "description": "Response when starting a new task.",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/TaskStartResponse.70db092.TaskStatus",
            "description": "Initial task status"
          },
          "stream_url": {
            "description": "SSE stream URL for monitoring progress",
            "title": "Stream Url",
            "type": "string"
          },
          "task_id": {
            "description": "Unique task identifier",
            "title": "Task Id",
            "type": "string"
          }
        },
        "required": [
          "task_id",
          "stream_url",
          "status"
        ],
        "title": "TaskStartResponse",
        "type": "object"
      },
      "TaskStartResponse.70db092.TaskStatus": {
        "description": "Task execution status.",
        "enum": [
          "pending",
          "running",
          "completed",
          "failed",
          "cancelled"
        ],
        "title": "TaskStatus",
        "type": "string"
      },
      "TestErrorResponseSchema.355d24f": {
        "description": "Schema for testing API error responses.",
        "properties": {
          "error": {
            "description": "Error message",
            "examples": [
              "Database reset already in progress"
            ],
            "title": "Error",
            "type": "string"
          },
          "status": {
            "description": "Operation status",
            "examples": [
              "busy"
            ],
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "error",
          "status"
        ],
        "title": "TestErrorResponseSchema",
        "type": "object"
      },
      "TestResetResponseSchema.355d24f": {
        "description": "Response schema for database reset endpoint.",
        "properties": {
          "migrations_applied": {
            "description": "Number of database migrations applied",
            "examples": [
              5
            ],
            "title": "Migrations Applied",
            "type": "integer"
          },
          "mode": {
            "description": "Environment mode",
            "examples": [
              "testing"
            ],
            "title": "Mode",
            "type": "string"
          },
          "seeded": {
            "description": "Whether test data was loaded",
            "examples": [
              true
            ],
            "title": "Seeded",
            "type": "boolean"
          },
          "status": {
            "description": "Reset operation status",
            "examples": [
              "complete"
            ],
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "status",
          "mode",
          "seeded",
          "migrations_applied"
        ],
        "title": "TestResetResponseSchema",
        "type": "object"
      },
      "TypeCreateSchema.50492c8": {
        "description": "Schema for creating a new type.",
        "properties": {
          "name": {
            "description": "Name of the part type/category",
            "example": "Relay",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "TypeCreateSchema",
        "type": "object"
      },
      "TypeResponseSchema.50492c8": {
        "description": "Schema for type details.",
        "properties": {
          "created_at": {
            "description": "Timestamp when the type was created",
            "example": "2024-01-15T10:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the type",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Name of the part type/category",
            "example": "Relay",
            "title": "Name",
            "type": "string"
          },
          "updated_at": {
            "description": "Timestamp when the type was last modified",
            "example": "2024-01-15T14:45:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "created_at",
          "updated_at"
        ],
        "title": "TypeResponseSchema",
        "type": "object"
      },
      "TypeResponseSchemaList.a9993e3": {
        "items": {
          "$ref": "#/components/schemas/TypeResponseSchemaList.a9993e3.TypeResponseSchema"
        },
        "title": "TypeResponseSchemaList",
        "type": "array"
      },
      "TypeResponseSchemaList.a9993e3.TypeResponseSchema": {
        "description": "Schema for type details.",
        "properties": {
          "created_at": {
            "description": "Timestamp when the type was created",
            "example": "2024-01-15T10:30:00Z",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the type",
            "example": 1,
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "Name of the part type/category",
            "example": "Relay",
            "title": "Name",
            "type": "string"
          },
          "updated_at": {
            "description": "Timestamp when the type was last modified",
            "example": "2024-01-15T14:45:00Z",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "created_at",
          "updated_at"
        ],
        "title": "TypeResponseSchema",
        "type": "object"
      },
      "TypeUpdateSchema.50492c8": {
        "description": "Schema for updating an existing type.",
        "properties": {
          "name": {
            "description": "Updated name of the part type/category",
            "example": "Power Relay",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "TypeUpdateSchema",
        "type": "object"
      },
      "UndocumentedPartsSchema.b67cf98": {
        "description": "Schema for undocumented parts summary response.",
        "properties": {
          "count": {
            "description": "Total number of parts without documents",
            "minimum": 0,
            "title": "Count",
            "type": "integer"
          },
          "sample_parts": {
            "description": "Sample of up to 10 undocumented parts",
            "items": {
              "$ref": "#/components/schemas/UndocumentedPartsSchema.b67cf98.PartsWithoutDocumentsSchema"
            },
            "title": "Sample Parts",
            "type": "array"
          }
        },
        "required": [
          "count",
          "sample_parts"
        ],
        "title": "UndocumentedPartsSchema",
        "type": "object"
      },
      "UndocumentedPartsSchema.b67cf98.PartsWithoutDocumentsSchema": {
        "description": "Schema for parts without documents response.",
        "properties": {
          "description": {
            "description": "Part description",
            "title": "Description",
            "type": "string"
          },
          "part_key": {
            "description": "4-character part ID",
            "maxLength": 4,
            "title": "Part Key",
            "type": "string"
          },
          "type_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Part type/category name",
            "title": "Type Name"
          }
        },
        "required": [
          "part_key",
          "description"
        ],
        "title": "PartsWithoutDocumentsSchema",
        "type": "object"
      },
      "UrlPreviewRequestSchema.1ff70b0": {
        "description": "Schema for URL preview requests.",
        "properties": {
          "url": {
            "description": "URL to preview",
            "title": "Url",
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "title": "UrlPreviewRequestSchema",
        "type": "object"
      },
      "UrlPreviewResponseSchema.1ff70b0": {
        "description": "Schema for URL preview responses.",
        "properties": {
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Content type",
            "title": "Content Type"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Backend endpoint URL for preview image",
            "title": "Image Url"
          },
          "original_url": {
            "description": "Original URL",
            "title": "Original Url",
            "type": "string"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Page title",
            "title": "Title"
          }
        },
        "required": [
          "original_url",
          "content_type"
        ],
        "title": "UrlPreviewResponseSchema",
        "type": "object"
      },
      "ValidationError.6a07bef": {
        "description": "Model of a validation error response.",
        "items": {
          "$ref": "#/components/schemas/ValidationError.6a07bef.ValidationErrorElement"
        },
        "title": "ValidationError",
        "type": "array"
      },
      "ValidationError.6a07bef.ValidationErrorElement": {
        "description": "Model of a validation error response element.",
        "properties": {
          "ctx": {
            "title": "Error context",
            "type": "object"
          },
          "loc": {
            "items": {
              "type": "string"
            },
            "title": "Missing field name",
            "type": "array"
          },
          "msg": {
            "title": "Error message",
            "type": "string"
          },
          "type": {
            "title": "Error type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationErrorElement",
        "type": "object"
      }
    }
  },
  "info": {
    "description": "Hobby electronics parts inventory management system",
    "title": "Electronics Inventory API",
    "version": "1.0.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/api/ai-parts/analyze": {
      "post": {
        "description": "Accepts multipart/form-data with optional text and image inputs: - text: Optional text description of the part - image: Optional image file (JPEG, PNG, WebP)\n\nReturns task ID and stream URL for monitoring progress via SSE.",
        "operationId": "post__api_ai-parts_analyze",
        "parameters": [],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStartResponse.70db092"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Start AI analysis task for part creation.",
        "tags": []
      }
    },
    "/api/ai-parts/analyze/{task_id}/result": {
      "get": {
        "description": "This endpoint provides access to the structured analysis result data with proper OpenAPI schema documentation. While the same data is available via SSE during task execution, this endpoint ensures the result schema is included in the API documentation for client code generation.\n\nArgs:     task_id: The UUID of the completed analysis task\n\nReturns:     AIPartAnalysisTaskResultSchema: The structured analysis result\n\nRaises:     404: If task is not found or not completed",
        "operationId": "get__api_ai-parts_analyze_{task_id}_result",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "task_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIPartAnalysisTaskResultSchema.63ff6da"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get the result of a completed AI part analysis task.",
        "tags": []
      }
    },
    "/api/ai-parts/create": {
      "post": {
        "description": "Accepts AI analysis results and creates a part with attached documents and suggested image from temporary storage.",
        "operationId": "post__api_ai-parts_create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIPartCreateSchema.63ff6da"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartResponseSchema.1a46b79"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Create a new part from AI analysis suggestions.",
        "tags": []
      }
    },
    "/api/boxes": {
      "get": {
        "description": "",
        "operationId": "get__api_boxes",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoxWithUsageSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List all boxes with usage statistics.",
        "tags": []
      },
      "post": {
        "description": "",
        "operationId": "post__api_boxes",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoxCreateSchema.6d5ef0b"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoxResponseSchema.6d5ef0b"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Create new box with specified capacity.",
        "tags": []
      }
    },
    "/api/boxes/{box_no}": {
      "delete": {
        "description": "",
        "operationId": "delete__api_boxes_{box_no}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "box_no",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Delete empty box.",
        "tags": []
      },
      "get": {
        "description": "",
        "operationId": "get__api_boxes_{box_no}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "box_no",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoxResponseSchema.6d5ef0b"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get box details.",
        "tags": []
      },
      "put": {
        "description": "",
        "operationId": "put__api_boxes_{box_no}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "box_no",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoxUpdateSchema.6d5ef0b"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoxResponseSchema.6d5ef0b"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Update box (capacity changes require validation).",
        "tags": []
      }
    },
    "/api/boxes/{box_no}/locations": {
      "get": {
        "description": "Query parameters: - include_parts (bool): Include part assignment data for each location (default: false)",
        "operationId": "get__api_boxes_{box_no}_locations",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "box_no",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationResponseSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get all locations in box.",
        "tags": []
      }
    },
    "/api/boxes/{box_no}/usage": {
      "get": {
        "description": "",
        "operationId": "get__api_boxes_{box_no}_usage",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "box_no",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoxUsageStatsSchema.6d5ef0b"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get usage statistics for a specific box.",
        "tags": []
      }
    },
    "/api/dashboard/category-distribution": {
      "get": {
        "description": "Returns:     JSON response containing list of part types with their names,     colors, and part counts, ordered by part count descending.",
        "operationId": "get__api_dashboard_category-distribution",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDistributionSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get part count distribution by category/type.",
        "tags": []
      }
    },
    "/api/dashboard/low-stock": {
      "get": {
        "description": "Query Parameters:     threshold (int): Quantity threshold below which parts are considered low stock (default: 5)\n\nReturns:     JSON response containing list of parts below the threshold quantity     with part details and current quantities.",
        "operationId": "get__api_dashboard_low-stock",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LowStockItemSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get parts with low stock quantities.",
        "tags": []
      }
    },
    "/api/dashboard/parts-without-documents": {
      "get": {
        "description": "Returns:     JSON response containing total count of parts without documents     and a sample of up to 10 undocumented parts.",
        "operationId": "get__api_dashboard_parts-without-documents",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UndocumentedPartsSchema.b67cf98"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get count and sample of parts without attached documents.",
        "tags": []
      }
    },
    "/api/dashboard/recent-activity": {
      "get": {
        "description": "Query Parameters:     limit (int): Maximum number of activity records to return (default: 20)\n\nReturns:     JSON response containing list of recent activity items with part details,     quantity changes, and timestamps.",
        "operationId": "get__api_dashboard_recent-activity",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecentActivitySchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get recent stock changes and activity.",
        "tags": []
      }
    },
    "/api/dashboard/stats": {
      "get": {
        "description": "Returns:     JSON response containing dashboard statistics including total parts,     quantity, boxes, types, recent activity counts, and low stock count.",
        "operationId": "get__api_dashboard_stats",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardStatsSchema.b67cf98"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get aggregated dashboard statistics.",
        "tags": []
      }
    },
    "/api/dashboard/storage-summary": {
      "get": {
        "description": "Returns:     JSON response containing list of storage boxes with their capacity,     occupied locations, and usage percentages.",
        "operationId": "get__api_dashboard_storage-summary",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageSummarySchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get storage box utilization summary.",
        "tags": []
      }
    },
    "/api/health": {
      "get": {
        "description": "",
        "operationId": "get__api_health",
        "parameters": [],
        "responses": {},
        "summary": "Health check endpoint for container orchestration.",
        "tags": []
      }
    },
    "/api/health/drain": {
      "get": {
        "description": "Requires bearer token authentication against DRAIN_AUTH_KEY config setting. Calls drain() on the shutdown coordinator and returns health status.",
        "operationId": "get__api_health_drain",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse.d817ae2"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse.d817ae2"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "Drain endpoint for manual graceful shutdown initiation.",
        "tags": []
      }
    },
    "/api/health/healthz": {
      "get": {
        "description": "Always returns 200 to indicate the application is alive. This keeps the pod running even during graceful shutdown.",
        "operationId": "get__api_health_healthz",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse.d817ae2"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Liveness probe endpoint for Kubernetes.",
        "tags": []
      }
    },
    "/api/health/readyz": {
      "get": {
        "description": "Returns 503 when the application is shutting down, database is not ready, or migrations are pending. This signals Kubernetes to remove the pod from service endpoints.",
        "operationId": "get__api_health_readyz",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse.d817ae2"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse.d817ae2"
                }
              }
            },
            "description": "Service Unavailable"
          }
        },
        "summary": "Readiness probe endpoint for Kubernetes.",
        "tags": []
      }
    },
    "/api/inventory/parts/{part_key}/move": {
      "post": {
        "description": "",
        "operationId": "post__api_inventory_parts_{part_key}_move",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveStockSchema.46800bd"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Move stock between locations.",
        "tags": []
      }
    },
    "/api/inventory/parts/{part_key}/stock": {
      "delete": {
        "description": "",
        "operationId": "delete__api_inventory_parts_{part_key}_stock",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveStockSchema.46800bd"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Remove stock from a location.",
        "tags": []
      },
      "post": {
        "description": "",
        "operationId": "post__api_inventory_parts_{part_key}_stock",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddStockSchema.46800bd"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartLocationResponseSchema.1a46b79"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Add stock to a location.",
        "tags": []
      }
    },
    "/api/inventory/suggestions/{type_id}": {
      "get": {
        "description": "",
        "operationId": "get__api_inventory_suggestions_{type_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "type_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationSuggestionSchema.46800bd"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get location suggestions for part type.",
        "tags": []
      }
    },
    "/api/kit-shopping-list-links/{link_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__api_kit-shopping-list-links_{link_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "link_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Remove a kit shopping list link without modifying list contents.",
        "tags": []
      }
    },
    "/api/kits": {
      "get": {
        "description": "",
        "operationId": "get__api_kits",
        "parameters": [
          {
            "description": "Filter kits by lifecycle status",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/KitListQuerySchema.b98797e.KitStatusSchema",
              "default": "active",
              "description": "Filter kits by lifecycle status",
              "example": "active"
            }
          },
          {
            "description": "Substring search across kit names and descriptions",
            "in": "query",
            "name": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Substring search across kit names and descriptions",
              "example": "Synth",
              "title": "Query"
            }
          },
          {
            "description": "Optional maximum number of kits to return",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "maximum": 100,
                  "minimum": 1,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Optional maximum number of kits to return",
              "example": 12,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitSummarySchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List kits filtered by status and optional text query.",
        "tags": []
      },
      "post": {
        "description": "",
        "operationId": "post__api_kits",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KitCreateSchema.b98797e"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitResponseSchema.b98797e"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a new kit definition.",
        "tags": []
      }
    },
    "/api/kits/pick-list-memberships/query": {
      "post": {
        "description": "",
        "operationId": "post__api_kits_pick-list-memberships_query",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KitMembershipBulkQueryRequestSchema.b98797e"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitPickListMembershipQueryResponseSchema.b247181"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Return pick list memberships for the requested kits.",
        "tags": []
      }
    },
    "/api/kits/shopping-list-memberships/query": {
      "post": {
        "description": "",
        "operationId": "post__api_kits_shopping-list-memberships_query",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KitMembershipBulkQueryRequestSchema.b98797e"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitShoppingListMembershipQueryResponseSchema.b98797e"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Return shopping list memberships for the requested kits.",
        "tags": []
      }
    },
    "/api/kits/{kit_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__api_kits_{kit_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "kit_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Permanently delete a kit and all child records.",
        "tags": []
      },
      "get": {
        "description": "",
        "operationId": "get__api_kits_{kit_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "kit_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitDetailResponseSchema.b98797e"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Return the kit detail workspace payload.",
        "tags": []
      },
      "patch": {
        "description": "",
        "operationId": "patch__api_kits_{kit_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "kit_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KitUpdateSchema.b98797e"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitResponseSchema.b98797e"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update the metadata for an active kit.",
        "tags": []
      }
    },
    "/api/kits/{kit_id}/archive": {
      "post": {
        "description": "",
        "operationId": "post__api_kits_{kit_id}_archive",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "kit_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitResponseSchema.b98797e"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Archive a kit.",
        "tags": []
      }
    },
    "/api/kits/{kit_id}/contents": {
      "post": {
        "description": "",
        "operationId": "post__api_kits_{kit_id}_contents",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "kit_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KitContentCreateSchema.b98797e"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitContentDetailSchema.b98797e"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a new kit content entry.",
        "tags": []
      }
    },
    "/api/kits/{kit_id}/contents/{content_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__api_kits_{kit_id}_contents_{content_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "kit_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "content_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Remove a kit content entry.",
        "tags": []
      },
      "patch": {
        "description": "",
        "operationId": "patch__api_kits_{kit_id}_contents_{content_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "kit_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "content_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KitContentUpdateSchema.b98797e"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitContentDetailSchema.b98797e"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update an existing kit content row.",
        "tags": []
      }
    },
    "/api/kits/{kit_id}/pick-lists": {
      "get": {
        "description": "",
        "operationId": "get__api_kits_{kit_id}_pick-lists",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "kit_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitPickListSummarySchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Return pick list summaries for a kit.",
        "tags": []
      },
      "post": {
        "description": "",
        "operationId": "post__api_kits_{kit_id}_pick-lists",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "kit_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KitPickListCreateSchema.b247181"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitPickListDetailSchema.b247181"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a pick list for the specified kit.",
        "tags": []
      }
    },
    "/api/kits/{kit_id}/shopping-lists": {
      "get": {
        "description": "",
        "operationId": "get__api_kits_{kit_id}_shopping-lists",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "kit_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitShoppingListChipSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Return shopping list chips linked to the specified kit.",
        "tags": []
      },
      "post": {
        "description": "",
        "operationId": "post__api_kits_{kit_id}_shopping-lists",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "kit_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KitShoppingListRequestSchema.b98797e"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitShoppingListLinkResponseSchema.b98797e"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create or append a shopping list from kit contents.",
        "tags": []
      }
    },
    "/api/kits/{kit_id}/unarchive": {
      "post": {
        "description": "",
        "operationId": "post__api_kits_{kit_id}_unarchive",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "kit_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitResponseSchema.b98797e"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Restore a kit to active status.",
        "tags": []
      }
    },
    "/api/locations/{box_no}/{loc_no}": {
      "get": {
        "description": "",
        "operationId": "get__api_locations_{box_no}_{loc_no}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "box_no",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "loc_no",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationResponseSchema.1cdc15f"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get specific location details.",
        "tags": []
      }
    },
    "/api/metrics": {
      "get": {
        "description": "Returns:     Response with metrics data in Prometheus exposition format",
        "operationId": "get__api_metrics",
        "parameters": [],
        "responses": {},
        "summary": "Return metrics in Prometheus text format.",
        "tags": []
      }
    },
    "/api/parts": {
      "get": {
        "description": "",
        "operationId": "get__api_parts",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartWithTotalSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List parts with pagination and total quantities.",
        "tags": []
      },
      "post": {
        "description": "",
        "operationId": "post__api_parts",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartCreateSchema.1a46b79"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartResponseSchema.1a46b79"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Create new part.",
        "tags": []
      }
    },
    "/api/parts/attachment-preview": {
      "post": {
        "description": "",
        "operationId": "post__api_parts_attachment-preview",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UrlPreviewRequestSchema.1ff70b0"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlPreviewResponseSchema.1ff70b0"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Get URL preview metadata (title and backend image endpoint URL).",
        "tags": []
      }
    },
    "/api/parts/attachment-preview/image": {
      "get": {
        "description": "",
        "operationId": "get__api_parts_attachment-preview_image",
        "parameters": [],
        "responses": {},
        "summary": "Get preview image for URL.",
        "tags": []
      }
    },
    "/api/parts/attachment-proxy/content": {
      "get": {
        "description": "",
        "operationId": "get__api_parts_attachment-proxy_content",
        "parameters": [],
        "responses": {},
        "summary": "Proxy external URL content to avoid CORS issues when displaying PDFs and images in iframes.",
        "tags": []
      }
    },
    "/api/parts/copy-attachment": {
      "post": {
        "description": "",
        "operationId": "post__api_parts_copy-attachment",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyAttachmentRequestSchema.9a8bd74"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CopyAttachmentResponseSchema.9a8bd74"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Copy an individual attachment from one part to another.",
        "tags": []
      }
    },
    "/api/parts/shopping-list-memberships/query": {
      "post": {
        "description": "",
        "operationId": "post__api_parts_shopping-list-memberships_query",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartShoppingListMembershipQueryRequestSchema.d085feb"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartShoppingListMembershipQueryResponseSchema.d085feb"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Bulk lookup of shopping list memberships for multiple parts.",
        "tags": []
      }
    },
    "/api/parts/with-locations": {
      "get": {
        "description": "",
        "operationId": "get__api_parts_with-locations",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartWithTotalAndLocationsSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List parts with pagination, total quantities, and location details.",
        "tags": []
      }
    },
    "/api/parts/{part_key}": {
      "delete": {
        "description": "",
        "operationId": "delete__api_parts_{part_key}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Delete part if total quantity is zero.",
        "tags": []
      },
      "get": {
        "description": "",
        "operationId": "get__api_parts_{part_key}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartResponseSchema.1a46b79"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get single part with full details.",
        "tags": []
      },
      "put": {
        "description": "",
        "operationId": "put__api_parts_{part_key}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartUpdateSchema.1a46b79"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartResponseSchema.1a46b79"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Update part details.",
        "tags": []
      }
    },
    "/api/parts/{part_key}/attachments": {
      "get": {
        "description": "",
        "operationId": "get__api_parts_{part_key}_attachments",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartAttachmentListSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "List all attachments for a part.",
        "tags": []
      },
      "post": {
        "description": "",
        "operationId": "post__api_parts_{part_key}_attachments",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {},
        "summary": "Create a new attachment (file upload or URL).",
        "tags": []
      }
    },
    "/api/parts/{part_key}/attachments/{attachment_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__api_parts_{part_key}_attachments_{attachment_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "attachment_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Delete attachment.",
        "tags": []
      },
      "get": {
        "description": "",
        "operationId": "get__api_parts_{part_key}_attachments_{attachment_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "attachment_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartAttachmentResponseSchema.f950e1b"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get attachment details.",
        "tags": []
      },
      "put": {
        "description": "",
        "operationId": "put__api_parts_{part_key}_attachments_{attachment_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "attachment_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartAttachmentUpdateSchema.f950e1b"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartAttachmentResponseSchema.f950e1b"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Update attachment metadata.",
        "tags": []
      }
    },
    "/api/parts/{part_key}/attachments/{attachment_id}/download": {
      "get": {
        "description": "",
        "operationId": "get__api_parts_{part_key}_attachments_{attachment_id}_download",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "attachment_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {},
        "summary": "Download or stream attachment file.",
        "tags": []
      }
    },
    "/api/parts/{part_key}/attachments/{attachment_id}/thumbnail": {
      "get": {
        "description": "",
        "operationId": "get__api_parts_{part_key}_attachments_{attachment_id}_thumbnail",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "attachment_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {},
        "summary": "Get attachment thumbnail.",
        "tags": []
      }
    },
    "/api/parts/{part_key}/cover": {
      "delete": {
        "description": "",
        "operationId": "delete__api_parts_{part_key}_cover",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoverAttachmentResponseSchema.f950e1b"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Clear part cover attachment.",
        "tags": []
      },
      "get": {
        "description": "",
        "operationId": "get__api_parts_{part_key}_cover",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoverAttachmentResponseSchema.f950e1b"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get part cover attachment details.",
        "tags": []
      },
      "put": {
        "description": "",
        "operationId": "put__api_parts_{part_key}_cover",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCoverAttachmentSchema.f950e1b"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoverAttachmentResponseSchema.f950e1b"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Set or clear part cover attachment.",
        "tags": []
      }
    },
    "/api/parts/{part_key}/cover/thumbnail": {
      "get": {
        "description": "",
        "operationId": "get__api_parts_{part_key}_cover_thumbnail",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {},
        "summary": "Get part cover thumbnail.",
        "tags": []
      }
    },
    "/api/parts/{part_key}/history": {
      "get": {
        "description": "",
        "operationId": "get__api_parts_{part_key}_history",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuantityHistoryResponseSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get quantity change history for a part.",
        "tags": []
      }
    },
    "/api/parts/{part_key}/kit-reservations": {
      "get": {
        "description": "",
        "operationId": "get__api_parts_{part_key}_kit-reservations",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartKitReservationsResponseSchema.d12d9a5"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Return active kit reservations for the specified part.",
        "tags": []
      }
    },
    "/api/parts/{part_key}/kits": {
      "get": {
        "description": "",
        "operationId": "get__api_parts_{part_key}_kits",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartKitUsageSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "List active kits consuming the specified part.",
        "tags": []
      }
    },
    "/api/parts/{part_key}/locations": {
      "get": {
        "description": "",
        "operationId": "get__api_parts_{part_key}_locations",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartLocationResponseSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get all locations for a part.",
        "tags": []
      }
    },
    "/api/parts/{part_key}/shopping-list-memberships": {
      "get": {
        "description": "",
        "operationId": "get__api_parts_{part_key}_shopping-list-memberships",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartShoppingListMembershipSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "List active shopping list memberships for a part.",
        "tags": []
      },
      "post": {
        "description": "",
        "operationId": "post__api_parts_{part_key}_shopping-list-memberships",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "part_key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartShoppingListMembershipCreateSchema.d085feb"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartShoppingListMembershipSchema.d085feb"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Add a part to a Concept shopping list and return the new membership.",
        "tags": []
      }
    },
    "/api/pick-lists/{pick_list_id}": {
      "get": {
        "description": "",
        "operationId": "get__api_pick-lists_{pick_list_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "pick_list_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitPickListDetailSchema.b247181"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Return a detailed pick list payload with line allocations.",
        "tags": []
      }
    },
    "/api/pick-lists/{pick_list_id}/lines/{line_id}/pick": {
      "post": {
        "description": "",
        "operationId": "post__api_pick-lists_{pick_list_id}_lines_{line_id}_pick",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "pick_list_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "line_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitPickListDetailSchema.b247181"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Mark a pick list line as picked and return updated detail payload.",
        "tags": []
      }
    },
    "/api/pick-lists/{pick_list_id}/lines/{line_id}/undo": {
      "post": {
        "description": "",
        "operationId": "post__api_pick-lists_{pick_list_id}_lines_{line_id}_undo",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "pick_list_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "line_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitPickListDetailSchema.b247181"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Undo a pick list line and return the refreshed detail payload.",
        "tags": []
      }
    },
    "/api/sellers": {
      "get": {
        "description": "",
        "operationId": "get__api_sellers",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List all sellers.",
        "tags": []
      },
      "post": {
        "description": "",
        "operationId": "post__api_sellers",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SellerCreateSchema.ceefe26"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerResponseSchema.ceefe26"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create new seller.",
        "tags": []
      }
    },
    "/api/sellers/{seller_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__api_sellers_{seller_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "seller_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Delete seller.",
        "tags": []
      },
      "get": {
        "description": "",
        "operationId": "get__api_sellers_{seller_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "seller_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerResponseSchema.ceefe26"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get seller details.",
        "tags": []
      },
      "put": {
        "description": "",
        "operationId": "put__api_sellers_{seller_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "seller_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SellerUpdateSchema.ceefe26"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerResponseSchema.ceefe26"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update seller.",
        "tags": []
      }
    },
    "/api/shopping-list-lines/{line_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__api_shopping-list-lines_{line_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "line_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Delete a shopping list line.",
        "tags": []
      },
      "put": {
        "description": "",
        "operationId": "put__api_shopping-list-lines_{line_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "line_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingListLineUpdateSchema.d9ccce0"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListLineResponseSchema.d9ccce0"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update an existing shopping list line.",
        "tags": []
      }
    },
    "/api/shopping-list-lines/{line_id}/complete": {
      "post": {
        "description": "",
        "operationId": "post__api_shopping-list-lines_{line_id}_complete",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "line_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingListLineCompleteSchema.d9ccce0"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListLineResponseSchema.d9ccce0"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Mark an ordered shopping list line as completed.",
        "tags": []
      }
    },
    "/api/shopping-list-lines/{line_id}/order": {
      "post": {
        "description": "",
        "operationId": "post__api_shopping-list-lines_{line_id}_order",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "line_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingListLineOrderSchema.d9ccce0"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListLineResponseSchema.d9ccce0"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Mark a single shopping list line as ordered.",
        "tags": []
      }
    },
    "/api/shopping-list-lines/{line_id}/receive": {
      "post": {
        "description": "",
        "operationId": "post__api_shopping-list-lines_{line_id}_receive",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "line_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingListLineReceiveSchema.d9ccce0"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListLineResponseSchema.d9ccce0"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Receive stock for an ordered shopping list line.",
        "tags": []
      }
    },
    "/api/shopping-list-lines/{line_id}/revert": {
      "post": {
        "description": "",
        "operationId": "post__api_shopping-list-lines_{line_id}_revert",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "line_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingListLineStatusUpdateSchema.d9ccce0"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListLineResponseSchema.d9ccce0"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Revert an ordered line back to NEW status.",
        "tags": []
      }
    },
    "/api/shopping-lists": {
      "get": {
        "description": "",
        "operationId": "get__api_shopping-lists",
        "parameters": [
          {
            "description": "Include lists whose status is DONE when true",
            "in": "query",
            "name": "include_done",
            "required": false,
            "schema": {
              "default": false,
              "description": "Include lists whose status is DONE when true",
              "example": false,
              "title": "Include Done",
              "type": "boolean"
            }
          },
          {
            "description": "Filter by one or more shopping list statuses",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "Filter by one or more shopping list statuses",
              "example": [
                "concept",
                "ready"
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListListSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List shopping lists, optionally including completed ones.",
        "tags": []
      },
      "post": {
        "description": "",
        "operationId": "post__api_shopping-lists",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingListCreateSchema.46f0cf6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a new shopping list.",
        "tags": []
      }
    },
    "/api/shopping-lists/{list_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__api_shopping-lists_{list_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "list_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Delete a shopping list and its line items.",
        "tags": []
      },
      "get": {
        "description": "",
        "operationId": "get__api_shopping-lists_{list_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "list_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Fetch a shopping list and its line items.",
        "tags": []
      },
      "put": {
        "description": "",
        "operationId": "put__api_shopping-lists_{list_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "list_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingListUpdateSchema.46f0cf6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update the metadata for a shopping list.",
        "tags": []
      }
    },
    "/api/shopping-lists/{list_id}/kits": {
      "get": {
        "description": "",
        "operationId": "get__api_shopping-lists_{list_id}_kits",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "list_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitChipSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Return kits linked to a shopping list.",
        "tags": []
      }
    },
    "/api/shopping-lists/{list_id}/lines": {
      "get": {
        "description": "",
        "operationId": "get__api_shopping-lists_{list_id}_lines",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "list_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListLinesResponseSchema.46f0cf6"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "List line items for a shopping list.",
        "tags": []
      },
      "post": {
        "description": "",
        "operationId": "post__api_shopping-lists_{list_id}_lines",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "list_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingListLineCreateSchema.d9ccce0"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListLineResponseSchema.d9ccce0"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a shopping list line item.",
        "tags": []
      }
    },
    "/api/shopping-lists/{list_id}/seller-groups/{group_ref}/order": {
      "post": {
        "description": "",
        "operationId": "post__api_shopping-lists_{list_id}_seller-groups_{group_ref}_order",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "list_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "group_ref",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingListGroupOrderSchema.d9ccce0"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListLineResponseSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Mark all lines in a seller grouping as ordered.",
        "tags": []
      }
    },
    "/api/shopping-lists/{list_id}/seller-groups/{seller_id}/order-note": {
      "put": {
        "description": "",
        "operationId": "put__api_shopping-lists_{list_id}_seller-groups_{seller_id}_order-note",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "list_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "seller_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingListSellerOrderNoteUpdateSchema.ceb40c1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListSellerOrderNoteSchema.ceb40c1"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create, update, or delete a seller order note for a Ready view seller group.",
        "tags": []
      }
    },
    "/api/shopping-lists/{list_id}/status": {
      "put": {
        "description": "",
        "operationId": "put__api_shopping-lists_{list_id}_status",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "list_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShoppingListStatusUpdateSchema.46f0cf6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShoppingListResponseSchema.46f0cf6"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update the workflow status for a shopping list.",
        "tags": []
      }
    },
    "/api/tasks/{task_id}": {
      "delete": {
        "description": "Returns:     JSON with removal result",
        "operationId": "delete__api_tasks_{task_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "task_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {},
        "summary": "Remove a completed task from registry.",
        "tags": []
      }
    },
    "/api/tasks/{task_id}/cancel": {
      "post": {
        "description": "Returns:     JSON with cancellation result",
        "operationId": "post__api_tasks_{task_id}_cancel",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "task_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {},
        "summary": "Cancel a running task.",
        "tags": []
      }
    },
    "/api/tasks/{task_id}/status": {
      "get": {
        "description": "Returns:     JSON with current task status information",
        "operationId": "get__api_tasks_{task_id}_status",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "task_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {},
        "summary": "Get current status of a task.",
        "tags": []
      }
    },
    "/api/tasks/{task_id}/stream": {
      "get": {
        "description": "Returns:     Server-Sent Events stream with task progress updates",
        "operationId": "get__api_tasks_{task_id}_stream",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "task_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {},
        "summary": "SSE endpoint for monitoring specific task progress.",
        "tags": []
      }
    },
    "/api/testing/content/html": {
      "get": {
        "description": "",
        "operationId": "get__api_testing_content_html",
        "parameters": [
          {
            "description": "Title to embed in the rendered HTML fixture",
            "in": "query",
            "name": "title",
            "required": true,
            "schema": {
              "description": "Title to embed in the rendered HTML fixture",
              "examples": [
                "Playwright Fixture Page"
              ],
              "title": "Title",
              "type": "string"
            }
          }
        ],
        "responses": {},
        "summary": "Return deterministic HTML content without deployment banner.",
        "tags": []
      }
    },
    "/api/testing/content/html-with-banner": {
      "get": {
        "description": "",
        "operationId": "get__api_testing_content_html-with-banner",
        "parameters": [
          {
            "description": "Title to embed in the rendered HTML fixture",
            "in": "query",
            "name": "title",
            "required": true,
            "schema": {
              "description": "Title to embed in the rendered HTML fixture",
              "examples": [
                "Playwright Fixture Page"
              ],
              "title": "Title",
              "type": "string"
            }
          }
        ],
        "responses": {},
        "summary": "Return deterministic HTML content that includes a deployment banner wrapper.",
        "tags": []
      }
    },
    "/api/testing/content/image": {
      "get": {
        "description": "",
        "operationId": "get__api_testing_content_image",
        "parameters": [
          {
            "description": "Text to render on the generated PNG image",
            "in": "query",
            "name": "text",
            "required": true,
            "schema": {
              "description": "Text to render on the generated PNG image",
              "examples": [
                "Playwright Test Image"
              ],
              "title": "Text",
              "type": "string"
            }
          }
        ],
        "responses": {},
        "summary": "Return a deterministic PNG image for Playwright fixtures.",
        "tags": []
      }
    },
    "/api/testing/content/pdf": {
      "get": {
        "description": "",
        "operationId": "get__api_testing_content_pdf",
        "parameters": [],
        "responses": {},
        "summary": "Return the bundled deterministic PDF asset.",
        "tags": []
      }
    },
    "/api/testing/deployments/version": {
      "post": {
        "description": "",
        "operationId": "post__api_testing_deployments_version",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentTriggerRequestSchema.355d24f"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentTriggerResponseSchema.355d24f"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Trigger a deterministic version deployment notification for Playwright.",
        "tags": []
      }
    },
    "/api/testing/logs/stream": {
      "get": {
        "description": "Streams logs from all loggers at INFO level and above. Each log entry is formatted as structured JSON with correlation ID when available.\n\nEvent Types:     - log: Application log entries     - connection_open: Sent when client connects     - heartbeat: Sent every 30 seconds for keepalive     - connection_close: Sent when server shuts down\n\nReturns:     SSE stream of log events",
        "operationId": "get__api_testing_logs_stream",
        "parameters": [],
        "responses": {},
        "summary": "SSE endpoint for streaming backend application logs in real-time.",
        "tags": []
      }
    },
    "/api/testing/reset": {
      "post": {
        "description": "Query Parameters:     seed: boolean, default false - Whether to load test data after reset\n\nReturns:     200: Reset completed successfully     503: Reset already in progress (with Retry-After header)",
        "operationId": "post__api_testing_reset",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestResetResponseSchema.355d24f"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestErrorResponseSchema.355d24f"
                }
              }
            },
            "description": "Service Unavailable"
          }
        },
        "summary": "Reset database to clean state with optional test data seeding.",
        "tags": []
      }
    },
    "/api/types": {
      "get": {
        "description": "",
        "operationId": "get__api_types",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeResponseSchemaList.a9993e3"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List all part types with optional statistics.",
        "tags": []
      },
      "post": {
        "description": "",
        "operationId": "post__api_types",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeCreateSchema.50492c8"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeResponseSchema.50492c8"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Create new part type.",
        "tags": []
      }
    },
    "/api/types/{type_id}": {
      "delete": {
        "description": "",
        "operationId": "delete__api_types_{type_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "type_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Delete type if not in use.",
        "tags": []
      },
      "get": {
        "description": "",
        "operationId": "get__api_types_{type_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "type_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeResponseSchema.50492c8"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get single type details.",
        "tags": []
      },
      "put": {
        "description": "",
        "operationId": "put__api_types_{type_id}",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "type_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeUpdateSchema.50492c8"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeResponseSchema.50492c8"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema.c2a0d71"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Update type name.",
        "tags": []
      }
    },
    "/api/utils/version/stream": {
      "get": {
        "description": "",
        "operationId": "get__api_utils_version_stream",
        "parameters": [],
        "responses": {},
        "summary": "SSE stream for frontend version notifications - infrastructure utility endpoint.",
        "tags": []
      }
    }
  },
  "security": [],
  "tags": []
}